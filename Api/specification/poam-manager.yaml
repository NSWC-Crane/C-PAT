#/*
#!#######################################################################
#! C-PATTM SOFTWARE
#! CRANE C-PATTM plan of action and milestones software. Use is governed by the Open Source Academic Research License Agreement contained in the file
#! crane_C_PAT.1_license.txt, which is part of this software package. BY
#! USING OR MODIFYING THIS SOFTWARE, YOU ARE AGREEING TO THE TERMS AND    
#! CONDITIONS OF THE LICENSE.  
#!########################################################################
#*/

openapi: 3.0.1
info:
  title: C-PAT API
  description: An API for managing POAMs.
  contact:
    name: Christian Rodriguez
    email: christian.a.rodriguez8.ctr@us.navy.mil
  version: '1.1'

paths:
  /assets:
    get:
      summary: Return all assets
      operationId: getAssets
      responses:
        '200':
          description: Asset array response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AssetResponse'
        '403':
          $ref: '#/components/responses/forbidden'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
      tags:
        - Asset
      security:
        - oauth:
            - 'c-pat:op'      

  /assets/collection/{collectionId}:
    parameters:
      - in: path
        name: collectionId
        required: true
        schema:
          type: integer
      - in: query
        name: offset
        required: false
        schema:
          type: integer
          default: 0
        description: The number of items to skip before starting to collect the result set
      - in: query
        name: limit
        required: false
        schema:
          type: integer
          default: 50
        description: The numbers of items to return
    get:
      summary: Return all assets belonging to a specific collection
      operationId: getAssetsByCollection
      responses:
        '200':
          description: Asset array response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AssetResponse'
        '403':
          $ref: '#/components/responses/forbidden'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
      tags:
        - Asset
      security:
        - oauth:
            - 'c-pat:read'

  /asset/name/{assetName}:
    parameters:
      - in: path
        name: assetName
        required: true
        schema:
          type: string
    get:
      summary: Return details on a specific asset
      operationId: getAssetByName
      responses:
        '200':
          description: Asset array response
          content:
            application/json:
              schema:
                type: object
                properties:
                  asset:
                    type: array
                    items:
                      $ref: '#/components/schemas/AssetObject'
        '403':
          $ref: '#/components/responses/forbidden'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
      tags:
        - Asset
      security:
        - oauth:
            - 'c-pat:read'
            
  /asset/{assetId}:
    parameters:
      - in: path
        name: assetId
        required: true
        schema:
          type: integer
    get:
      summary: Return details on a specific asset
      operationId: getAsset
      responses:
        '200':
          description: Asset array response
          content:
            application/json:
              schema:
                type: object
                properties:
                  asset:
                    type: array
                    items:
                      $ref: '#/components/schemas/AssetObject'
        '403':
          $ref: '#/components/responses/forbidden'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
      tags:
        - Asset
      security:
        - oauth:
            - 'c-pat:read'        
    delete:
      summary: Delete an Asset by assetId
      operationId: deleteAsset
      responses:
        '200':
          description: null asset response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AssetObject'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'  
      tags:
        - Asset
      security:
        - oauth:
            - 'c-pat:read'
  /asset:
    post:
      summary: Add an asset
      operationId: postAsset
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AssetObject'
      responses:
        '200':
          description: return the added asset response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AssetObject'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
      tags:
        - Asset
      security:
        - oauth:
            - 'c-pat:read'
    put:
      summary: Updates a Asset
      operationId: putAsset
      requestBody:
        required: true
        content:
          application/json:
            schema:
                $ref: '#/components/schemas/AssetObject'
      responses:
        '200':
          description: return the updated asset response
          content:
            application/json:
              schema:
                  $ref: '#/components/schemas/AssetObject'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
      tags:
        - Asset            
      security:
        - oauth:
            - 'c-pat:read'

  /assetLabels:
    get:
      summary: Return all assets
      operationId: getAssetLabels
      responses:
        '200':
          description: Asset array response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/assetLabel_Object'
        '403':
          $ref: '#/components/responses/forbidden'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
      tags:
        - AssetLabel
      security:
        - oauth:
            - 'c-pat:read'
            
  /assetLabels/asset/{assetId}:
    parameters:
      - in: path
        name: assetId
        required: true
        schema:
          type: integer
    get:
      summary: Return a asset label by assetId
      operationId: getAssetLabelByAsset
      responses:
        '200':
          description: Asset array response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/assetLabel_Object'
        '403':
          $ref: '#/components/responses/forbidden'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
      tags:
        - AssetLabel
      security:
        - oauth:
            - 'c-pat:read'

  /assetLabels/label/{labelId}:
    parameters:
      - in: path
        name: labelId
        required: true
        schema:
          type: integer
    get:
      summary: Return a asset label by labelId
      operationId: getAssetLabelByLabel
      responses:
        '200':
          description: Asset array response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/assetLabel_Object'
        '403':
          $ref: '#/components/responses/forbidden'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
      tags:
        - AssetLabel
      security:
        - oauth:
            - 'c-pat:read'
            
  /assetLabel/asset/{assetId}/label/{labelId}:
    parameters:
      - in: path
        name: assetId
        required: true
        schema:
          type: integer
      - in: path
        name: labelId
        required: true
        schema:
          type: integer
    get:
      summary: Return a asset label by assetId and labelId
      operationId: getAssetLabel
      responses:
        '200':
          description: Asset array response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/assetLabel_Object'
        '403':
          $ref: '#/components/responses/forbidden'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
      tags:
        - AssetLabel
      security:
        - oauth:
            - 'c-pat:read'
    delete:
      summary: Delete a Asset by assetId
      operationId: deleteAssetLabel
      responses:
        '200':
          description: null asset response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AssetObject'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'  
      tags:
        - AssetLabel
      security:
        - oauth:
            - 'c-pat:read'
            
  /assetLabel:
    post:
      summary: Add a asset label
      operationId: postAssetLabel
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/assetLabel_Object'
      responses:
        '200':
          description: return the added asset response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/assetLabel_Object'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
      tags:
        - AssetLabel
      security:
        - oauth:
            - 'c-pat:read'
    put:
      summary: Updates a AssetLabel
      operationId: putAssetLabel
      requestBody:
        required: true
        content:
          application/json:
            schema:
                $ref: '#/components/schemas/assetLabel_Object'
      responses:
        '200':
          description: return the updated asset response
          content:
            application/json:
              schema:
                  $ref: '#/components/schemas/assetLabel_Object'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
      tags:
        - AssetLabel
      security:
        - oauth:
            - 'c-pat:read'

  /auth/changeWorkspace:
    summary: Changeworkspace
    description: changeworkspace
    post:
      summary: changeWorkspace
      description: ''
      operationId: changeWorkspace
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/change_Workspace'
      responses:
        '200':
          description: Change Workspace response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/change_Workspace_Response'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
      tags:
        - Auth
      security:
        - oauth:
            - 'c-pat:read'  
            
  /auth/login:
    summary: Login
    description: Login
    post:
      summary: Login
      description: ''
      operationId: authLogin
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/user_Login'
      responses:
        '200':
          description: User login response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/user_Login_Response'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
      tags:
        - Auth
      security:
        - oauth:
            - 'c-pat:read'
        
  /auth/logout:
    summary: Logout
    description: Llogout
    post:
      summary: Logout
      description: ''
      operationId: authLogout
      requestBody:
        required: false
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/error'
      responses:
        '200':
          description: User logout response
          content:
            application/json:
              schema:
                 $ref: '#/components/schemas/error'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
      tags:
        - Auth    
      security:
        - oauth:
            - 'c-pat:read'
            
  /auth/register:
    summary: Register
    description: Register
    post:
      summary: Register
      description: ''
      operationId: authRegister
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/register'
      responses:
        '200':
          description: Register response
          content:
            application/json:
              schema:
                 $ref: '#/components/schemas/register_Response'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
      tags:
        - Auth 
      security:
        - oauth:
            - 'c-pat:read'

  /collection:
    post:
      tags:
        - Collection
      security:
        - oauth:
            - 'c-pat:read'        
      summary: Create a Collection
      operationId: postCollection
      description: ''
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/collection'
      responses:
        '201':
          description: CollectionProjected response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/collection'
        '400':
          description: Client Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'

    put:
      summary: Updates user collection
      operationId: putCollection
      requestBody:
        required: true
        content:
          application/json:
            schema:
                $ref: '#/components/schemas/collection'
      responses:
        '200':
          description: return the updated collection  response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/collection'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
      tags: 
        - Collection
      security:
        - oauth:
            - 'c-pat:read'
  '/collection/{collectionId}/user/{userName}':
    parameters:
      - $ref: '#/components/parameters/collectionIdPath'
      - in: path
        name: userName
        required: true
        schema:
          type: string
    get:
      tags:
        - Collection
      security:
        - oauth:
            - 'c-pat:read'        
      summary: Return a Collection
      description: ''
      operationId: getCollection
      responses:
        '200':
          description: CollectionProjected response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/collection'
        '204':
          description: No Content
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
    delete:
      tags:
        - Collection
      security:
        - oauth:
            - 'c-pat:read'        
      summary: Delete a Collection
      operationId: deleteCollection
      responses:
        '200':
          description: CollectionProjected response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/collection'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'

  '/collections/{userName}':
    get:
      tags:
        - Collection
      security:
        - oauth:
            - 'c-pat:read'        
      summary:  Return a list of collections accessible to the requester
      description: ''
      operationId: getCollections
      parameters:
        - $ref: '#/components/parameters/collectionAuth'
      
      responses:
        '200':
          description: CollectionsProjected response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/collection'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'

  '/collections/{collectionId}/POAMs':
    parameters:
      - $ref: '#/components/parameters/collectionIdPath'
      - name: acceptedOnly
        in: query
        schema:
          type: boolean
          default: false
      - $ref: '#/components/parameters/benchmarkIdQuery'
      - $ref: '#/components/parameters/assetIdQuery'
  
  '/collection/{collectionId}/poamstats':
    parameters:
      - $ref: '#/components/parameters/collectionIdPath'
    get:
      tags:
        - Collection
      security:
        - oauth:
            - 'c-pat:read'        
      summary: Return POAM stats for a Collection
      description: Return POAM stats for a Collection
      operationId: getCollectionPoamStats
      responses:
        '200':
          description: Collection response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/collection'
        '204':
          description: No Content
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'

  '/collections/{collectionId}/labels/{labelId}':
    parameters:
      - $ref: '#/components/parameters/collectionIdPath'
      - $ref: '#/components/parameters/labelIdPath'
  
  '/collection/permissions/{collectionId}':
    parameters:
      - in: path
        name: collectionId
        required: true
        schema:
          type: integer
    get:
      summary: Return all permissions for a specific collection
      operationId: getCollectionPermissions
      responses:
        '200':
          description: Collection Permissions array response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/user_Permissions'
        '403':
          $ref: '#/components/responses/forbidden'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
      tags:
        - Collection
      security:
        - oauth:
            - 'c-pat:op'

  '/collectionApprovers/{collectionId}':
    parameters:
      - in: path
        name: collectionId
        required: true
        schema:
          type: integer
    get:
      summary: Return a label by Id
      operationId: getCollectionApprovers
      responses:
        '200':
          description: Poam Approvers array response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/collectionApprover_Object'
        '403':
          $ref: '#/components/responses/forbidden'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
      tags:
        - CollectionApprover
      security:
        - oauth:
            - 'c-pat:read'        
  '/collectionApprover/collection/{collectionId}/user/{userId}':
    parameters:
      - in: path
        name: collectionId
        required: true
        schema:
          type: integer
      - in: path
        name: userId
        required: true
        schema:
          type: integer             
    delete:
      summary: Delete a collectionApprover by userId and poamId
      operationId: deleteCollectionApprover
      responses:
        '200':
          description: Poam Approver delete
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/collectionApprover_Object'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'  
      tags:
        - CollectionApprover
      security:
        - oauth:
            - 'c-pat:read'
  '/collectionApprover':
    post:
      summary: Add a collectionApprover
      operationId: postCollectionApprover
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/collectionApprover_Object'
      responses:
        '200':
          description: return the added collectionApprover response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/collectionApprover_Object'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
      tags:
        - CollectionApprover
      security:
        - oauth:
            - 'c-pat:read'        
    put:
      summary: Updates a collectionApprover
      operationId: putCollectionApprover
      requestBody:
        required: true
        content:
          application/json:
            schema:
                $ref: '#/components/schemas/collectionApprover_Object'
      responses:
        '200':
          description: return the updated collectionApprover response
          content:
            application/json:
              schema:
                  $ref: '#/components/schemas/collectionApprover_Object'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
      tags:
        - CollectionApprover
      security:
        - oauth:
            - 'c-pat:read'

  /api/poamimport:
    post:
      summary: Parse and import .xls, .xlsx, or .xlsm eMASS POAM exports
      operationId: uploadPoamFile
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                file:
                  type: string
                  format: binary
                  description: .xls, .xlsx, or .xlsm eMASS POAM export file
      responses:
        '200':
          description: File uploaded successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '400':
          description: Bad request - invalid file format or missing file
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
      tags:
        - Import
      security:
        - oauth:
            - 'c-pat:read'

  /api/stigmancollectionimport:
    post:
      summary: Endpoint to receive collection and assets data from STIG Manager
      operationId: importCollectionAndAssets
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                collection:
                  $ref: '#/components/schemas/Collection'
                assets:
                  type: array
                  items:
                    $ref: '#/components/schemas/Asset'
      responses:
        '200':
          description: Collection and assets imported successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '400':
          description: Bad request - invalid data format or missing data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
      tags:
        - Import
      security:
        - oauth:
            - 'c-pat:read'

  /api/stigmanassetimport:
    post:
      summary: Endpoint to receive asset data from STIG Manager
      operationId: importAssets
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                assets:
                  type: array
                  items:
                    $ref: '#/components/schemas/Asset'
      responses:
        '200':
          description: Assets imported successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '400':
          description: Bad request - invalid data format or missing data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
      tags:
        - Import
      security:
        - oauth:
            - 'c-pat:read'

  '/labels':
    get:
      summary: Return all labels
      operationId: getLabels
      responses:
        '200':
          description: Collection Labels array response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/label_Object'
        '403':
          $ref: '#/components/responses/forbidden'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
      tags:
        - Label
      security:
        - oauth:
            - 'c-pat:read'
            
  '/label/{labelId}':
    parameters:
      - in: path
        name: labelId
        required: true
        schema:
          type: integer
    get:
      summary: Return a label by Id
      operationId: getLabel
      responses:
        '200':
          description: Collection Labels array response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/label_Object'
        '403':
          $ref: '#/components/responses/forbidden'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
      tags:
        - Label
      security:
        - oauth:
            - 'c-pat:read'        
    delete:
      summary: Delete a label by labelId
      operationId: deleteLabel
      responses:
        '200':
          description: Label delete
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/label_Object'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'  
      tags:
        - Label
      security:
        - oauth:
            - 'c-pat:read'

  '/label':
    post:
      summary: Add a label
      operationId: postLabel
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/label_Object'
      responses:
        '200':
          description: return the added label response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/label_Object'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
      tags:
        - Label
      security:
        - oauth:
            - 'c-pat:read'        
    put:
      summary: Updates a Label
      operationId: putLabel
      requestBody:
        required: true
        content:
          application/json:
            schema:
                $ref: '#/components/schemas/label_Object'
      responses:
        '200':
          description: return the updated collection permission response
          content:
            application/json:
              schema:
                  $ref: '#/components/schemas/label_Object'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
      tags:
        - Label             
      security:
        - oauth:
            - 'c-pat:read'
        
  # '/permissions/user/{userId}':
  #   parameters:
  #     - in: path
  #       name: userId
  #       required: true
  #       schema:
  #         type: integer
  #   get:
  #     summary: Return all collection Permissionss for a user
  #     operationId: getPermissions_User
  #     responses:
  #       '200':
  #         description: Collection Permissions array response
  #         content:
  #           application/json:
  #             schema:
  #               type: array
  #               items:
  #                 $ref: '#/components/schemas/user_Permissions'
  #       '403':
  #         $ref: '#/components/responses/forbidden'
  #       default:
  #         description: unexpected error
  #         content:
  #           application/json:
  #             schema:
  #               $ref: '#/components/schemas/error'
  #     tags:
  #       - Permissions
  #     security:
  #       - oauth:
  #           - 'c-pat:op'

  # '/permissions/user/{userId}/collection/{collectionId}':
  #   parameters:
  #     - in: path
  #       name: userId
  #       required: true
  #       schema:
  #         type: integer
  #     - in: path
  #       name: collectionId
  #       required: true
  #       schema:
  #         type: integer          
  #   get:
  #     summary: Return unique user collection permission user
  #     operationId: getPermissions_UserCollection
  #     responses:
  #       '200':
  #         description: Collection Permissions array response
  #         content:
  #           application/json:
  #             schema:
  #               type: array
  #               items:
  #                 $ref: '#/components/schemas/user_Permissions'
  #       '403':
  #         $ref: '#/components/responses/forbidden'
  #       default:
  #         description: unexpected error
  #         content:
  #           application/json:
  #             schema:
  #               $ref: '#/components/schemas/error'
  #     tags:
  #       - Permissions
  #     security:
  #       - oauth:
  #           - 'c-pat:op'
            
  '/permission':
    post:
      summary: Add a user collection permission
      operationId: postPermission
      requestBody:
        required: true
        content:
          application/json:
            schema:
                $ref: '#/components/schemas/user_Permissions'
      responses:
        '200':
          description: return the added collection permission response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/user_Permissions'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
      tags:
        - Permissions
      security:
        - oauth:
            - 'c-pat:op'
            
    put:
      summary: Updates user collection permissions
      operationId: putPermission
      requestBody:
        required: true
        content:
          application/json:
            schema:
                $ref: '#/components/schemas/update_user_Permissions'
      responses:
        '200':
          description: return the updated collection permission response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/update_user_Permissions'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
      tags: 
        - Permissions
      security:
        - oauth:
            - 'c-pat:op'
          
  '/permission/{userId}/{collectionId}':
    parameters:
      - in: path
        name: userId
        required: true
        schema:
          type: integer
      - in: path
        name: collectionId
        required: true
        schema:
          type: integer        
    delete:
      summary: Delete a collection permission by userId and collectionId
      operationId: deletePermission
      responses:
        '200':
          description: Collection Permissionsresponse
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/user_Permissions'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'  
      tags:
        - Permissions
      security:
        - oauth:
            - 'c-pat:op'

  '/poamApprovers/{poamId}':
    parameters:
      - in: path
        name: poamId
        required: true
        schema:
          type: integer
    get:
      summary: Return poamApprovers by poamId
      operationId: getPoamApprovers
      responses:
        '200':
          description: Poam Approvers array response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/poamApprover_Object'
        '403':
          $ref: '#/components/responses/forbidden'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
      tags:
        - PoamApprover
      security:
        - oauth:
            - 'c-pat:read'
  '/poamApprovers/collection/{collectionId}/user/{userId}':
    parameters:
      - in: path
        name: collectionId
        required: true
        schema:
          type: integer
      - in: path
        name: userId
        required: true
        schema:
          type: integer          
    get:
      summary: Return poamApprovers by userId
      operationId: getPoamApproversByCollectionUser
      responses:
        '200':
          description: Poam Approvers array response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/poamApprover_Object'
        '403':
          $ref: '#/components/responses/forbidden'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
      tags:
        - PoamApprover
      security:
        - oauth:
            - 'c-pat:read'             
  '/poamApprover/poam/{poamId}/user/{userId}':
    parameters:
      - in: path
        name: poamId
        required: true
        schema:
          type: integer
      - in: path
        name: userId
        required: true
        schema:
          type: integer            
    delete:
      summary: Delete a poamApprover by userId and poamId
      operationId: deletePoamApprover
      responses:
        '200':
          description: Poam Approver delete
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/poamApprover_Object'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'  
      tags:
        - PoamApprover
      security:
        - oauth:
            - 'c-pat:read'

  '/poamApprover':
    post:
      summary: Add a poamApprover
      operationId: postPoamApprover
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/poamApprover_Object'
      responses:
        '200':
          description: return the added poamApprover response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/poamApprover_Object'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
      tags:
        - PoamApprover
      security:
        - oauth:
            - 'c-pat:read'        
    put:
      summary: Updates a poamApprover
      operationId: putPoamApprover
      requestBody:
        required: true
        content:
          application/json:
            schema:
                $ref: '#/components/schemas/poamApprover_Object'
      responses:
        '200':
          description: return the updated poamApprover response
          content:
            application/json:
              schema:
                  $ref: '#/components/schemas/poamApprover_Object'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
      tags:
        - PoamApprover
      security:
        - oauth:
            - 'c-pat:read'

  '/poamAssets':
    get:
      summary: Return all poamassets
      operationId: getPoamAssets
      responses:
        '200':
          description: PoamAsset array response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/poamAssets_Object'
        '403':
          $ref: '#/components/responses/forbidden'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
      tags:
        - PoamAssets
      security:
        - oauth:
            - 'c-pat:read'

  '/poamAssets/poam/{poamId}':
    parameters:
      - in: path
        name: poamId
        required: true
        schema:
          type: integer
    get:
      summary: Return  poamassets label by poamId
      operationId: getPoamAssetsByPoamId
      responses:
        '200':
          description: PoamAssets array response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/poamAssets_Object'
        '403':
          $ref: '#/components/responses/forbidden'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
      tags:
        - PoamAssets
      security:
        - oauth:
            - 'c-pat:read'

  '/poamAssets/assets/{assetId}':
    parameters:
      - in: path
        name: assetId
        required: true
        schema:
          type: integer
    get:
      summary: Return poamsAssets by assetId
      operationId: getPoamAssetsByAssetId
      responses:
        '200':
          description: PoamAssets array response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/poamAssets_Object'
        '403':
          $ref: '#/components/responses/forbidden'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
      tags:
        - PoamAssets
      security:
        - oauth:
            - 'c-pat:read'

  '/poamAsset/poam/{poamId}/asset/{assetId}':
    parameters:
      - in: path
        name: poamId
        required: true
        schema:
          type: integer
      - in: path
        name: assetId
        required: true
        schema:
          type: integer
    get:
      summary: Return a poamasset by poamId and assetId
      operationId: getPoamAsset
      responses:
        '200':
          description: PoamAssets array response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/poamAssets_Object'
        '403':
          $ref: '#/components/responses/forbidden'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
      tags:
        - PoamAssets
      security:
        - oauth:
            - 'c-pat:read'
    delete:
      summary: Delete a PoamAsset by poamId and assetId
      operationId: deletePoamAsset
      responses:
        '200':
          description: null asset response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/poamAssets_Object'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'  
      tags:
        - PoamAssets
      security:
        - oauth:
            - 'c-pat:read'

  '/poamAsset':
    post:
      summary: Add a poam asset
      operationId: postPoamAsset
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/poamAssets_Object'
      responses:
        '200':
          description: return the added asset response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/poamAssets_Object'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
      tags:
        - PoamAssets
      security:
        - oauth:
            - 'c-pat:read'
    put:
      summary: Updates a poamAssets
      operationId: putPoamAsset
      requestBody:
        required: true
        content:
          application/json:
            schema:
                $ref: '#/components/schemas/poamAssets_Object'
      responses:
        '200':
          description: return the updated asset response
          content:
            application/json:
              schema:
                  $ref: '#/components/schemas/poamAssets_Object'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
      tags:
        - PoamAssets
      security:
        - oauth:
            - 'c-pat:read'

  '/poamAssignees':
    get:
      summary: Return all poamAssignees
      operationId: getPoamAssignees
      responses:
        '200':
          description: PoamAssignees array response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/poamAssignees_Object'
        '403':
          $ref: '#/components/responses/forbidden'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
      tags:
        - PoamAssignees
      security:
        - oauth:
            - 'c-pat:read'
            
  '/poamAssignees/poam/{poamId}':
    parameters:
      - in: path
        name: poamId
        required: true
        schema:
          type: integer
    get:
      summary: Return  poamassets label by poamId
      operationId: getPoamAssigneesByPoamId
      responses:
        '200':
          description: PoamAssets array response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/poamAssignees_Object'
        '403':
          $ref: '#/components/responses/forbidden'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
      tags:
        - PoamAssignees
      security:
        - oauth:
            - 'c-pat:read'
            
  '/poamAssignees/users/{userId}':
    parameters:
      - in: path
        name: userId
        required: true
        schema:
          type: integer
    get:
      summary: Return poamsAssignees by userId
      operationId: getPoamAssigneesByUserId
      responses:
        '200':
          description: PoamAssignees array response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/poamAssignees_Object'
        '403':
          $ref: '#/components/responses/forbidden'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
      tags:
        - PoamAssignees
      security:
        - oauth:
            - 'c-pat:read'
            
  '/poamAssignee/poam/{poamId}/user/{userId}':
    parameters:
      - in: path
        name: poamId
        required: true
        schema:
          type: integer
      - in: path
        name: userId
        required: true
        schema:
          type: integer
    get:
      summary: Return a poamAssignees by poamId and userId
      operationId: getPoamAssignee
      responses:
        '200':
          description: PoamAssignees array response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/poamAssignees_Object'
        '403':
          $ref: '#/components/responses/forbidden'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
      tags:
        - PoamAssignees
      security:
        - oauth:
            - 'c-pat:read'
    delete:
      summary: Delete a PoamAsset by poamId and userId
      operationId: deletePoamAssignee
      responses:
        '200':
          description: null poam asset response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/poamAssignees_Object'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'  
      tags:
        - PoamAssignees
      security:
        - oauth:
            - 'c-pat:read'
            
  '/poamAssignee':
    post:
      summary: Add a poam Assignee
      operationId: postPoamAssignee
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/poamAssignees_Object'
      responses:
        '200':
          description: return the added asset response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/poamAssignees_Object'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
      tags:
        - PoamAssignees
      security:
        - oauth:
            - 'c-pat:read'
    put:
      summary: Updates a poamAssignees
      operationId: putPoamAssignee
      requestBody:
        required: true
        content:
          application/json:
            schema:
                $ref: '#/components/schemas/poamAssignees_Object'
      responses:
        '200':
          description: return the updated poamAssignees response
          content:
            application/json:
              schema:
                  $ref: '#/components/schemas/poamAssignees_Object'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
      tags:
        - PoamAssignees
      security:
        - oauth:
            - 'c-pat:read'

  /poamExtension:
    put:
      summary: Add or update POAM extension
      operationId: putPoamExtension
      tags:
        - PoamExtension
      security:
        - oauth:
          - 'c-pat:read' 
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/poamExtensionObject'
      responses:
        '200':
          description: POAM extension updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/poamExtensionObject'
        '403':
          $ref: '#/components/responses/forbidden'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'

  /poamExtension/{poamId}:
    get:
      summary: Return POAM extension by POAM ID
      operationId: getPoamExtension
      tags:
        - PoamExtension
      security:
        - oauth:
          - 'c-pat:read'
      parameters:
        - in: path
          name: poamId
          schema:
            type: integer
          required: true
          description: The ID of the POAM
      responses:
        '200':
          description: POAM extension details
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/poamExtensionObject'
        '403':
          $ref: '#/components/responses/forbidden'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
    delete:
      summary: Delete POAM extension by POAM ID
      operationId: deletePoamExtension
      tags:
        - PoamExtension
      security:
        - oauth:
          - 'c-pat:read' 
      parameters:
        - in: path
          name: poamId
          schema:
            type: integer
          required: true
          description: The ID of the POAM
      responses:
        '200':
          description: Success message
          content:
            application/json:
              schema:
                type: object
                properties: 
                  message:
                    type: string
                    example: "POAM extension deleted successfully"
        '403':
          $ref: '#/components/responses/forbidden'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'

  '/poams':
    get:
      summary: Return all poams
      operationId: getPoams
      responses:
        '200':
          description: Poam array response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/poam_Object'
        '403':
          $ref: '#/components/responses/forbidden'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
      tags:
        - Poam
      security:
        - oauth:
            - 'c-pat:read'
            
  '/poam/{poamId}':
    parameters:
      - in: path
        name: poamId
        required: true
        schema:
          type: integer
    get:
      summary: Return a poam by Id
      operationId: getPoam
      responses:
        '200':
          description: poam object response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/poam_Object'
        '403':
          $ref: '#/components/responses/forbidden'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
      tags:
        - Poam
      security:
        - oauth:
            - 'c-pat:read'
    delete:
      summary: Delete a Poam by poamId
      operationId: deletePoam
      responses:
        '200':
          description: null poam response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/poam_Object'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'  
      tags:
        - Poam    
      security:
        - oauth:
            - 'c-pat:read'        
        
  '/poams/collection/{collectionId}':
    parameters:
      - in: path
        name: collectionId
        required: true
        schema:
          type: integer
    get:
      summary: Return poams by collectionId
      operationId: getPoamsByCollectionId
      responses:
        '200':
          description: poam array response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/poam_Object'
        '403':
          $ref: '#/components/responses/forbidden'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
      tags:
        - Poam            
      security:
        - oauth:
            - 'c-pat:read'
            
  '/poams/owner/{ownerId}':
    parameters:
      - in: path
        name: ownerId
        required: true
        schema:
          type: integer
    get:
      summary: Return poams by ownerId
      operationId: getPoamsByOwnerId
      responses:
        '200':
          description: Asset array response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/poam_Object'
        '403':
          $ref: '#/components/responses/forbidden'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
      tags:
        - Poam            
      security:
        - oauth:
            - 'c-pat:read'
            
  '/poam':
    post:
      summary: Add a poam
      operationId: postPoam
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/poam_Object'
      responses:
        '200':
          description: return the added asset response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/poam_Object'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
      tags:
        - Poam
      security:
        - oauth:
            - 'c-pat:read'        
    put:
      summary: Updates a Poam
      operationId: putPoam
      requestBody:
        required: true
        content:
          application/json:
            schema:
                $ref: '#/components/schemas/poam_Object'
      responses:
        '200':
          description: return the updated asset response
          content:
            application/json:
              schema:
                  $ref: '#/components/schemas/poam_Object'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
      tags:
        - Poam
      security:
        - oauth:
            - 'c-pat:read'
  '/user':
    get:
      tags:
        - User
      summary: Return the current users information
      operationId: getCurrentUser
      responses:
        '200':
          description: UserProjected response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/current_user_Response'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
      security:
        - oauth:
            - 'c-pat:read'
    put:
      tags:
        - User
      security:
        - oauth:
            - 'c-pat:read'        
      summary: Update certain properties of a User
      operationId: updateUser
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/user_Update'
      responses:
        '200':
          description: UserProjected response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/user_Response'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'

  '/users':
    get:
      tags:
        - User
      security:
        - oauth:
            - 'c-pat:op'        
      summary: Return all users for admin processing (assigning collections and permissions)
      operationId: getUsers
      responses:
        '200':
          description: User response
          content:
            applicaion/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/current_user_Response'
        default:
          description: unexpected error
          content:
            applicaion/json:
              schema:
                $ref: '#/components/schemas/error'

  '/user/{userId}':
    parameters:
      - in: path
        name: userId
        required: true
        schema:
          type: integer
    get:
      tags:
        - User
      security:
        - oauth:
            - 'c-pat:op'        
      summary: Return a User
      operationId: getUserByUserID
      responses:
        '200':
          description: User response
          content:
            applicaion/json:
              schema:
                $ref: '#/components/schemas/user'
        default:
          description: unexpected error
          content:
            applicaion/json:
              schema:
                $ref: '#/components/schemas/error'
    delete:
      tags:
        - User
      security:
        - oauth:
            - 'c-pat:op'        
      summary: Delete a User
      operationId: deleteUser
      responses:
        '200':
          description: UserProjected response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/user'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
  '/user/loginout':
    put:
      tags:
        - User
      security:
        - oauth:
            - 'c-pat:read'        
      summary: writes stdoutput log to indicate login or logout
      operationId: loginout
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/user_LoginOut'
      responses:
        '200':
          description: UserProjected response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/user_Login_Response'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'


components:

  schemas:
    Collection:
      type: object
      properties:
        collectionId:
          type: string
        name:
          type: string
        description:
          type: string
          nullable: true
        metadata:
          type: object
      required:
        - collectionId
        - name
    Asset:
      type: object
      properties:
        assetId:
          type: string
        name:
          type: string
    AssetResponse:
      type: object
      properties:
        asset:
          type: array
          items:
            $ref: '#/components/schemas/AssetObject'
    AssetObject:
      type: object
      required:
        - assetId
        - assetName
        - collectionId
      properties:
        assetId:
          type: integer
        assetName:
          type: string
        fullyQualifiedDomainName:
          type: string
          nullable: true
        collectionId:
          type: integer
        description:
          type: string
          nullable: true
        ipAddress:
          type: string
          nullable: true
        macAddress:
          type: string
          nullable: true
        nonComputing:
          type: integer
          nullable: true
        metadata:
          type: string
          nullable: true
        state:
          type: string
          nullable: true
        stateDate:
          type: string
          nullable: true
        stateUserId:
          type: integer
          nullable: true
        isEnabled:
          type: integer
          nullable: true 
    assetLabel_Object:
      type: object
      required:
        - assetId
        - labelId
      additionalProperties: true
      properties:
        assetId:
          type: integer
        labelId:
          type: integer
          

    change_Workspace:
      required:
        - token
        - user
      type: object
      additionalProperties: false
      properties:
        token:
          type: string
        user:
          $ref: '#/components/schemas/user_Token'
          
    change_Workspace_Response:
      type: object
      additionalProperties: false
      properties:
        token:
          type: string          
          
    collection:
      type: object
      required:
        - collectionName
        - description
        - grantCount
        - assetCount
        - poamCount

      additionalProperties: true
      properties:
        collectionName:
          type: string
        collectionId:
          type: integer
        description:
          type: string
        created:
          type: string
          format: date
          # pattern: '^\d{4}-(0[1-9]|1[012])-(0[1-9][12][0-9]|3[0-1])$'          
        grantCount:
          type: integer
        assetCount:
          type: integer
        poamCount:
          type: integer

    collectionUpdate:
      type: object
      additionalProperties: false
      properties:
        name:
          type: string
        description:
          type: string
          nullable: true
        settings:
          $ref: '#/components/schemas/collectionSettings'
        grants:
          type: array
          items:
            type: object
            properties:
              userId:
                type: string
              accessLevel:
                type: integer

    collectionSettings:
      type: object
      required:
        - fields
        - status
      additionalProperties: false
      properties:
        fields:
          $ref: '#/components/schemas/collectionField'
        status:
          $ref: '#/components/schemas/collectionStatus'

    collectionField:
      type: object
      required:
        - approvalNotes
        - rejectionNotes
        - renewalNotes
      additionalProperties: false
      properties:
        approvalNotes:
          type: string
        rejectionNotes:
          type: string
        renewalNotes:
          type: string

    collectionStatus:
      type: object
      additionalProperties: false
      required:
        - canApprove
      properties:
        canApprove:
          type: boolean

    collectionLabelList:
      type: array
      items:
        $ref: '#/components/schemas/label'

    collectionCreateOrReplace:
      type: object
      required:
        - name
        - settings
        - grants
      additionalProperties: false
      properties:
        name:
          type: string
        description:
          type: string
          nullable: true
        settings:
          $ref: '#/components/schemas/collectionSettings'
        labels:
          type: array
          items:
            $ref: '#/components/schemas/label'
          

    error:
      type: object
      properties:
        error:
          type: string
        detail:
          type: string          

    collectionApprover_Object:
      type: object
      required:
        - collectionId
        - userId
        - status
      additionalProperties: true
      properties:
        collectionId:
          type: integer
        userId:
          type: integer
        status:
          type: string
        firstName:
          type: string
        lastName:
          type: string
        userEmail:
          type: string

    label_Object:
      type: object
      required:
        - labelId
        - labelName
        - description
        - poamCount
      additionalProperties: false
      properties:
        labelId:
          type: integer
        labelName:
          type: string
        description:
          type: string
        poamCount:
          type: integer 

    label:
      type: object
      required:
        - name
        - description
        - color
        - labelID
      additionalProperties: false
      properties:
        name:
          type: string
          maxLength: 30
        description:
          type: string
          maxLength: 255
        color:
          type: string
        labelID:
          type: string

    labelCreate:
      type: object
      required:
        - name
        - description
        - color
      additionalProperties: false
      properties:
        name:
          type: string
          maxLength: 30
        description:
          type: string
          maxLength: 255
        color:
          type: string

    labelID:
      type: string
      maxLength: 36

    poamApprover_Object:
      type: object
      required:
        - poamId
        - userId
        - approved
      additionalProperties: true
      properties:
        poamId:
          type: integer
        userId:
          type: integer
        approved:
          type: string
        approvedDate:
          type: string
        comments:
          type: string
        firstName:
          type: string
        lastName:
          type: string
        userEmail:
          type: string          

    poamAssignees_Object:
      type: object
      required:
        - poamId
        - userId
      additionalProperties: false
      properties:
        poamId:
          type: integer
        userId:
          type: integer        
      
    poamAssets_Object:
      type: object
      required:
        - poamId
        - assetId
      additionalProperties: false
      properties:
        poamId:
          type: integer
        assetId:
          type: integer

    poamExtensionObject:
      type: object
      required:
        - poamId
      additionalProperties: true
      properties:
        poamId:
          type: integer
        extensionTimeAllowed:
          type: integer
        extensionJustification:
          type: string
        extensionMilestones:
          type: string
      
    poam_Object:
      type: object
      required:
        - poamId
        - collectionId
        - vulnerabilitySource
        - aaPackage
        - rawSeverity
        - ownerId
        - status
        - poamType
      additionalProperties: true
      properties:
        poamId:
          type: integer
        collectionId:
          type: integer
        vulnerabilitySource:
          type: string
        stigTitle:
          type: string
        iavmNumber:
          type: string
        aaPackage:
          type: string
        vulnerabilityId:
          type: string
        description:
          type: string
        rawSeverity:
          type: string
        adjSeverity:
          type: string
        scheduledCompletionDate:
          type: string
        ownerId:
          type: integer
        mitigations:
          type: string
        requiredResources:
          type: string
        milestones:
          type: string
        residualRisk:
          type: string
        businessImpactRating:
          type: string
        businessImpactDescription:
          type: string
        notes:
          type: string
        status:
          type: string
        poamType:
          type: string
        vulnIdRestricted:
          type: string
        submittedDate:
          type: string
        assets:
          type: array
          items:
            type: object
            properties:
              assetId:
                type: integer
        assignees:
          type: array
          items:
            type: object
            properties:
              userId:
                type: integer

    register:
      required:
        - email
        - userName
        - firstName
        - lastName
      type: object
      additionalProperties: true
      properties:
        email:
          type: string
        userName:
          type: string
        firstName:
          type: string
        lastName:
          type: string
        collectionAccessRequest:
          type: array
          items:
            type: object
            properties:
              collectionId:
                type: integer  

    register_Response:
      type: object
      additionalProperties: false
      properties:
        token:
          type: string 
          
    user:
      type: object
      required:
        - userId
        - userName
        - email
        - displayName
        - canAdmin
        - canCreateCollection
        - created
        - lastAccess
        - isAdmin
      additionalProperties: true
      properties:
        userId:
          type: string
          maxLength: 255
          readOnly: true
        username:
          type: string
          maxLength: 255
          readOnly: true
        email:
          type: string
          readOnly: true
        displayName:
          type: string
          maxLength: 255
          readOnly: true
        canAdmin:
          type: boolean
        canCreateCollection:
          type: boolean
        created:
          type: string
          format: date
          # pattern: '^\d{4}-(0[1-9]|1[012])-(0[1-9][12][0-9]|3[0-1])$'
        lastAccess:
          type: string
          format: date
          # pattern: '^\d{4}-(0[1-9]|1[012])-(0[1-9][12][0-9]|3[0-1])$'
        isAdmin:
          type: integer

    current_user_Response:
      type: object
      required:
        - userId
        - userName
        - userEmail
        - firstName
        - lastName
        - created
        - lastAccess
        - lastCollectionAccessedId
        - accountStatus
        - fullName
        - defaultTheme
        - isAdmin
        - permissions
      additionalProperties: false
      properties:
        userId:
          type: integer
          readOnly: true
        userName:
          type: string
          maxLength: 20
          readOnly: true
        userEmail:
          type: string
          maxLength: 100
          readOnly: true
        firstName:
          type: string
          maxLength: 50
          readOnly: true
        lastName:
          type: string
          maxLength: 50
        created:
          type: string
          format: date
          # pattern: '^\d{4}-(0[1-9]|1[012])-(0[1-9][12][0-9]|3[0-1])$'
        lastAccess:
          type: string
          format: date
          # pattern: '^\d{4}-(0[1-9]|1[012])-(0[1-9][12][0-9]|3[0-1])$'
        lastCollectionAccessedId:
          type: integer
        accountStatus:
          type: string
          maxLength: 45
        fullName:
          type: string
          maxLength: 225
        defaultTheme:
          type: string
          maxLength: 20
        isAdmin:
          type: integer
        permissions:
          type: array
          items:
            type: object
            required:
              - userId
              - collectionId
              - canOwn
              - canMaintain
              - canApprove
              - canView
            properties:
              userId:
                type: integer
              collectionId:
                type: integer
              canOwn:
                type: integer
              canMaintain:
                type: integer
              canApprove:
                type: integer
              canView:
                type: integer

    user_Response:
      type: object
      required:
        - userId
        - userName
        - userEmail
        - firstName
        - lastName
        - created
        - lastAccess
        - lastCollectionAccessedId
        - accountStatus
        - fullName
        - defaultTheme
        - isAdmin
      additionalProperties: false
      properties:
        userId:
          type: integer
          readOnly: true
        userName:
          type: string
          maxLength: 20
          readOnly: true
        userEmail:
          type: string
          maxLength: 100
          readOnly: true
        firstName:
          type: string
          maxLength: 50
          readOnly: true
        lastName:
          type: string
          maxLength: 50
        created:
          type: string
          format: date
          # pattern: '^\d{4}-(0[1-9]|1[012])-(0[1-9][12][0-9]|3[0-1])$'
        lastAccess:
          type: string
          format: date
          # pattern: '^\d{4}-(0[1-9]|1[012])-(0[1-9][12][0-9]|3[0-1])$'
        lastCollectionAccessedId:
          type: integer
        accountStatus:
          type: string
          maxLength: 45
        fullName:
          type: string
          maxLength: 225
        defaultTheme:
          type: string
          maxLength: 20
        isAdmin:
          type: integer

    user_Update:
      type: object
      required:
        - userId
        - userEmail
        - firstName
        - lastName
        - accountStatus
        - lastCollectionAccessedId
        - defaultTheme
        - isAdmin
      additionalProperties: true
      properties:
        userId:
          type: integer
        userEmail:
          type: string
        firstName:
          type: string
          maxLength: 50
        lastName:
          type: string
          maxLength: 50
        accountStatus:
          type: string
          maxLength: 45
        lastCollectionAccessedId:
          type: integer
        defaultTheme:
          type: string
          maxLength: 20
        isAdmin:
          type: integer
        updateSettingsOnly:
          type: integer
          
    user_Login:
      required:
        - email
      type: object
      additionalProperties: false
      properties:
        email:
          type: string
          
    user_LoginOut:
      required:
        - inout
      type: object
      additionalProperties: false
      properties:
        inout:
          type: string           

    user_Login_Response:
      type: object
      additionalProperties: false
      properties:
        message:
          type: string          
          
    user_Token:
      required:
        - userId
        - userName
        - userEmail
        - firstName
        - lastName
        - lastCollectionAccessedId
        - accountStatus
        - fullName
        - defaultTheme
      additionalProperties: false
      properties:
        userId:
          type: integer
        userName:
          type: string
          maxLength: 20
        userEmail:
          type: string
        firstName:
          type: string
          maxLength: 50
        lastName:
          type: string
          maxLength: 50
        lastCollectionAccessedId:
          type: integer
        accountStatus:
          type: string
          maxLength: 45
        fullName:
          type: string
          maxLength: 225
        defaultTheme:
          type: string
          maxLength: 20
          
    user_Permissions:
      type: object
      required:
        - userId
        - collectionId
        - canOwn
        - canMaintain
        - canApprove
        - canView
      additionalProperties: true
      properties:
        userId:
          type: integer
        collectionId:
          type: integer
        canOwn:
          type: boolean
        canMaintain:
          type: boolean
        canApprove:
          type: boolean
        canView:
          type: boolean
        firstName:
          type: string
        lastName:
          type: string
        fullName:
          type: string
        userEmail:
          type: string

    update_user_Permissions:
      type: object
      required:
        - userId
        - oldCollectionId
        - newCollectionId
        - canOwn
        - canMaintain
        - canApprove
        - canView
      additionalProperties: true
      properties:
        userId:
          type: integer
        oldCollectionId:
          type: integer
        newCollectionId:
          type: integer
        canOwn:
          type: boolean
        canMaintain:
          type: boolean
        canApprove:
          type: boolean
        canView:
          type: boolean
        firstName:
          type: string
        lastName:
          type: string
        fullName:
          type: string
        userEmail:
          type: string

    userCreateOrReplace:
      required:
        - userName
        - userEmail
        - firstName
        - lastName
        - lastCollectionAccessedId
        - accountStatus
        - fullName
        - defaultTheme
      type: object
      additionalProperties: false
      properties:
        userName:
          type: string
        userEmail:
          type: string
        firstName:
          type: string
        lastName:
          type: string
        lastCollectionAccessedId:
          type: integer
        accountStatus:
          type: string
        fullName:
          type: string
        defaultTheme:
          type: string


  responses:
    forbidden:
      description: The requesting User does not have access rights to the content
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/error'

  parameters:
    collectionQuery:
      name: projection
      in: query
      description: Additional properties to include in the response.
      style: form
      explode: true
      schema:
        type: array
        items:
          type: string
          enum:
            - owners
            - statistics
            - labels

    collectionIdPath:
      name: collectionId
      in: path
      description: A path parameter that identifies a Collection
      required: true
      schema:
        type: string

    labelIdPath:
      name: labelId
      in: path
      required: true
      description: A path parameter that specifies a Label
      schema:
        $ref: '#/components/schemas/labelID'

    benchmarkIdQuery:
      name: benchmarkId
      in: query
      description: A query parameter that identifies a POAM
      schema:
        type: string
    assetIdQuery:
      name: assetId
      in: query
      description: A query parameter that identifies an Asset
      schema:
        type: string
    userIdPath:
      name: userId
      in: path
      description: A path parameter that identifies a User
      required: true
      schema:
        type: string

    collectionAuth:
      name: userName
      in: path
      required: true
      description: Returns collections belonging to a specif User
      schema:
        type: string    
        
        
  securitySchemes:
      oauth:
        type: openIdConnect
        openIdConnectUrl: https://localhost:2020/realms/RMFTools/.well-known/openid-configuration    

