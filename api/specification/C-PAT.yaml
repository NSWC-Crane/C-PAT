#/*
#!##########################################################################
#! CRANE PLAN OF ACTION AND MILESTONE AUTOMATION TOOL (C-PAT) SOFTWARE
#! Use is governed by the Open Source Academic Research License Agreement
#! contained in the LICENSE.MD file, which is part of this software package.
#! BY USING OR MODIFYING THIS SOFTWARE, YOU ARE AGREEING TO THE TERMS AND
#! CONDITIONS OF THE LICENSE.
#!##########################################################################
#*/

openapi: 3.1.1
info:
  title: C-PAT API
  description: An API for managing POAMs.
  contact:
    name: Christian Rodriguez
    email: christian.a.rodriguez8.ctr@us.navy.mil
  license:
    name: C-PATâ„¢ SOFTWARE OPEN SOURCE LICENSE AGREEMENT
    url: https://github.com/NSWC-Crane/C-PAT/blob/main/LICENSE.MD
  version: '1.2.6'
servers:
  - url: ''
paths:
  '/aaPackages':
    get:
      summary: Return all A&A Packages
      operationId: getAAPackages
      responses:
        '200':
          description: A&A Packages array response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/aaPackage_Object'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
      tags:
        - AAPackage
      security:
        - oauth:
            - 'c-pat:read'

  '/aaPackage/{aaPackageId}':
    parameters:
      - in: path
        name: aaPackageId
        required: true
        schema:
          type: integer
    get:
      summary: Return an A&A Package Name by aaPackageId
      operationId: getAAPackage
      responses:
        '200':
          description: A&A Package object response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/aaPackage_Object'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
      tags:
        - AAPackage
      security:
        - oauth:
            - 'c-pat:read'
    delete:
      summary: Delete an A&A Package by aaPackageId
      operationId: deleteAAPackage
      responses:
        '204':
          description: A&A Package deleted successfully
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
      tags:
        - AAPackage
      security:
        - oauth:
            - 'c-pat:op'

  '/aaPackage':
    post:
      summary: Add an A&A Package
      operationId: postAAPackage
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/aaPackage_Object'
      responses:
        '201':
          description: A&A Package created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/aaPackage_Object'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
      tags:
        - AAPackage
      security:
        - oauth:
            - 'c-pat:op'
    put:
      summary: Update an A&A Package
      operationId: putAAPackage
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/aaPackage_Object'
      responses:
        '200':
          description: A&A Package updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/aaPackage_Object'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
      tags:
        - AAPackage
      security:
        - oauth:
            - 'c-pat:op'

  /ai/mitigation:
    post:
      summary: Generate mitigation statement using AI
      operationId: generateMitigation
      requestBody:
        required: true
        content:
          text/plain:
            schema:
              type: string
              description: The prompt for generating mitigation
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  mitigation:
                    type: string
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
      tags:
        - AI
      security:
        - oauth:
            - 'c-pat:read'

  '/appConfig':
    get:
      summary: Return all App Configuration settings
      operationId: getAppConfiguration
      responses:
        '200':
          description: App Configuration array response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/appConfiguration_Object'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
      tags:
        - AppConfiguration
      security:
        - oauth:
            - 'c-pat:read'

  '/appConfiguration':
    put:
      summary: Update an App Configuration setting
      operationId: putAppConfiguration
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/appConfiguration_Object'
      responses:
        '200':
          description: App Configuration updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/appConfiguration_Object'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
      tags:
        - AppConfiguration
      security:
        - oauth:
            - 'c-pat:op'

  /assets/delta/teams:
    get:
      summary: Return a list of all AD Team names
      operationId: getADTeamsList
      responses:
        '200':
          description: List of available AD Team names
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
                  description: AD Team name
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
      tags:
        - ADTeams
      security:
        - oauth:
            - 'c-pat:read'

  /assets/delta/list:
    get:
      summary: Return a master list of assets for delta comparison
      operationId: getAssetDeltaList
      responses:
        '200':
          description: Asset array response
          content:
            application/json:
              schema:
                type: object
                properties:
                  assets:
                    type: array
                    items:
                      type: object
                      properties:
                        key:
                          type: string
                        value:
                          type: string
                        eMASS:
                          type: [boolean, 'null']
                        assignedTeam:
                          type: [object, 'null']
                          properties:
                            assignedTeamId:
                              type: integer
                            assignedTeamName:
                              type: string
                          required:
                            - assignedTeamId
                            - assignedTeamName
                      required:
                        - key
                        - value
                required:
                  - assets
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
      tags:
        - Asset
      security:
        - oauth:
            - 'c-pat:op'

  /assets/delta/list/{collectionId}:
    parameters:
      - in: path
        name: collectionId
        required: true
        schema:
          type: integer
    get:
      summary: Return a master list of assets for delta comparison
      operationId: getAssetDeltaListByCollection
      responses:
        '200':
          description: Asset array response
          content:
            application/json:
              schema:
                type: object
                properties:
                  assets:
                    type: array
                    items:
                      type: object
                      properties:
                        key:
                          type: string
                        value:
                          type: string
                        eMASS:
                          type: [boolean, 'null']
                        collectionId:
                          type: [integer, 'null']
                        assignedTeam:
                          type: [object, 'null']
                          properties:
                            assignedTeamId:
                              type: integer
                            assignedTeamName:
                              type: string
                          required:
                            - assignedTeamId
                            - assignedTeamName
                      required:
                        - key
                        - value
                  assetDeltaUpdated:
                    type: [string, 'null']
                  emassHardwareListUpdated:
                    type: [string, 'null']
                required:
                  - assets
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
      tags:
        - Asset
      security:
        - oauth:
            - 'c-pat:op'

  /assets/collection/{collectionId}:
    parameters:
      - in: path
        name: collectionId
        required: true
        schema:
          type: integer
    get:
      summary: Return all assets belonging to a specific collection
      operationId: getAssetsByCollection
      responses:
        '200':
          description: Asset array response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AssetResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
      tags:
        - Asset
      security:
        - oauth:
            - 'c-pat:read'

  /asset/name/{assetName}:
    parameters:
      - in: path
        name: assetName
        required: true
        schema:
          type: string
    get:
      summary: Return an asset by Asset Name
      operationId: getAssetByName
      responses:
        '200':
          description: Asset array response
          content:
            application/json:
              schema:
                type: object
                properties:
                  asset:
                    type: array
                    items:
                      $ref: '#/components/schemas/AssetObject'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
      tags:
        - Asset
      security:
        - oauth:
            - 'c-pat:read'

  /asset/{assetId}:
    parameters:
      - in: path
        name: assetId
        required: true
        schema:
          type: integer
    get:
      summary: Return an asset by Asset Id
      operationId: getAsset
      responses:
        '200':
          description: Asset array response
          content:
            application/json:
              schema:
                type: object
                properties:
                  asset:
                    type: array
                    items:
                      $ref: '#/components/schemas/AssetObject'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
      tags:
        - Asset
      security:
        - oauth:
            - 'c-pat:read'
    delete:
      summary: Delete an Asset by Asset Id
      operationId: deleteAsset
      responses:
        '204':
          description: Asset successfully deleted
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
      tags:
        - Asset
      security:
        - oauth:
            - 'c-pat:write'

  /assets/{poamId}:
    parameters:
      - in: path
        name: poamId
        required: true
        schema:
          type: integer
    delete:
      summary: Delete assets by poamId
      operationId: deleteAssetsByPoamId
      responses:
        '204':
          description: Assets successfully deleted
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
      tags:
        - Asset
      security:
        - oauth:
            - 'c-pat:write'

  /asset:
    post:
      summary: Add an asset
      operationId: postAsset
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AssetObject'
      responses:
        '201':
          description: Return the added asset response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AssetObject'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
      tags:
        - Asset
      security:
        - oauth:
            - 'c-pat:write'
    put:
      summary: Update an Asset
      operationId: putAsset
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AssetObject'
      responses:
        '200':
          description: Return the updated asset response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AssetObject'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
      tags:
        - Asset
      security:
        - oauth:
            - 'c-pat:write'

  /assetLabels/{collectionId}:
    parameters:
      - in: path
        name: collectionId
        required: true
        schema:
          type: integer
    get:
      summary: Return all asset labels and corresponding assets for a specific collection
      operationId: getAssetLabels
      responses:
        '200':
          description: Asset array response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/assetLabel_Object'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
      tags:
        - AssetLabel
      security:
        - oauth:
            - 'c-pat:read'

  /assetLabels/asset/{assetId}:
    parameters:
      - in: path
        name: assetId
        required: true
        schema:
          type: integer
    get:
      summary: Return an asset label by assetId
      operationId: getAssetLabelsByAsset
      responses:
        '200':
          description: Asset array response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/assetLabel_Object'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
      tags:
        - AssetLabel
      security:
        - oauth:
            - 'c-pat:read'

  /assetLabels/label/{labelId}:
    parameters:
      - in: path
        name: labelId
        required: true
        schema:
          type: integer
    get:
      summary: Return an asset label by labelId
      operationId: getAssetLabelsByLabel
      responses:
        '200':
          description: Asset array response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/assetLabel_Object'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
      tags:
        - AssetLabel
      security:
        - oauth:
            - 'c-pat:read'

  /assetLabel/asset/{assetId}/label/{labelId}:
    parameters:
      - in: path
        name: assetId
        required: true
        schema:
          type: integer
      - in: path
        name: labelId
        required: true
        schema:
          type: integer
    get:
      summary: Return an asset label by assetId and labelId
      operationId: getAssetLabel
      responses:
        '200':
          description: Asset array response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/assetLabel_Object'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
      tags:
        - AssetLabel
      security:
        - oauth:
            - 'c-pat:read'
    delete:
      summary: Delete an asset label by assetId and labelId
      operationId: deleteAssetLabel
      responses:
        '204':
          description: null asset response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AssetObject'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
      tags:
        - AssetLabel
      security:
        - oauth:
            - 'c-pat:write'

  /assetLabel:
    post:
      summary: Add an asset label
      operationId: postAssetLabel
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/assetLabel_Object'
      responses:
        '201':
          description: return the added asset response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/assetLabel_Object'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
      tags:
        - AssetLabel
      security:
        - oauth:
            - 'c-pat:write'

  '/assignedTeams':
    get:
      summary: Return all Assigned Team names
      operationId: getAssignedTeams
      responses:
        '200':
          description: Assigned Teams array response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/assignedTeam_Object'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
      tags:
        - AssignedTeams
      security:
        - oauth:
            - 'c-pat:read'

  '/assignedTeams/{assignedTeamId}':
    parameters:
      - in: path
        name: assignedTeamId
        required: true
        schema:
          type: integer
    get:
      summary: Return an Assigned Team Name by assignedTeamId
      operationId: getAssignedTeam
      responses:
        '200':
          description: Assigned Team object response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/assignedTeam_Object'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
      tags:
        - AssignedTeams
      security:
        - oauth:
            - 'c-pat:read'
    delete:
      summary: Delete an Assigned Team by assignedTeamId
      operationId: deleteAssignedTeam
      responses:
        '204':
          description: Assigned Team deleted successfully
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
      tags:
        - AssignedTeams
      security:
        - oauth:
            - 'c-pat:op'

  '/assignedTeam':
    post:
      summary: Add an Assigned Team
      operationId: postAssignedTeam
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/assignedTeam_Object'
      responses:
        '201':
          description: Assigned Team created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/assignedTeam_Object'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
      tags:
        - AssignedTeams
      security:
        - oauth:
            - 'c-pat:op'
    put:
      summary: Update an Assigned Team Name
      operationId: putAssignedTeam
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/assignedTeam_Object'
      responses:
        '200':
          description: Assigned Team updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/assignedTeam_Object'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
      tags:
        - AssignedTeams
      security:
        - oauth:
            - 'c-pat:op'

  '/assignedTeams/permissions':
    post:
      summary: Create a new team permission
      operationId: postAssignedTeamPermission
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/assignedTeamPermission_Request'
      responses:
        '201':
          description: Team permission created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/assignedTeamPermission_Object'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
      tags:
        - AssignedTeams
      security:
        - oauth:
            - 'c-pat:write'

  '/assignedTeams/permissions/{assignedTeamId}/{collectionId}':
    parameters:
      - in: path
        name: assignedTeamId
        required: true
        schema:
          type: integer
      - in: path
        name: collectionId
        required: true
        schema:
          type: integer
    delete:
      summary: Delete a team permission
      operationId: deleteAssignedTeamPermission
      responses:
        '200':
          description: Team permission deleted successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
        '404':
          description: Permission not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
      tags:
        - AssignedTeams
      security:
        - oauth:
            - 'c-pat:write'

  /collections/basiclist:
    get:
      tags:
        - Collection
      summary: Return a list of collection names and corresponding C-PAT collectionIds
      operationId: getCollectionBasicList
      responses:
        '200':
          description: Collection list retrieved successfully
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/collectionBasicList'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
      security:
        - oauth:
            - 'c-pat:read'

  '/collections':
    get:
      tags:
        - Collection
      summary: Get a list of collections accessible to the user
      operationId: getCollections
      parameters:
        - $ref: '#/components/parameters/ElevateQuery'
      responses:
        '200':
          description: Collection list retrieved successfully
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/collection'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
      security:
        - oauth:
            - 'c-pat:read'

  /collection:
    post:
      tags:
        - Collection
      summary: Create a Collection
      operationId: postCollection
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/collection'
      responses:
        '201':
          description: Collection created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/collection'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
      security:
        - oauth:
            - 'c-pat:write'
    put:
      summary: Update a Collection
      operationId: putCollection
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/collection'
      responses:
        '200':
          description: Collection updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/collection'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
      tags:
        - Collection
      security:
        - oauth:
            - 'c-pat:write'

  /collection/{collectionId}:
    parameters:
      - $ref: '#/components/parameters/ElevateQuery'
      - in: path
        name: collectionId
        required: true
        schema:
          type: integer
    delete:
      summary: Delete a Collection by ID
      operationId: deleteCollection
      responses:
        '204':
          description: Collection deleted successfully
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
        '403':
          description: Forbidden - insufficient privileges
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
        '404':
          description: Collection not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
        '409':
          description: Conflict - collection has related records
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
      tags:
        - Collection
      security:
        - oauth:
            - 'c-pat:op'

  /iav/vramUpdatedDate:
    get:
      summary: Get VRAM data updated date
      description: Retrieves the last updated date of the VRAM data
      operationId: getVramDataUpdatedDate
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  value:
                    type: string
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
      tags:
        - IAV
      security:
        - oauth:
            - 'c-pat:read'

  /iav/iavSummary:
    get:
      summary: Get IAV Summary
      description: Retrieves IAV table data
      operationId: getIAVTableData
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  tableData:
                    type: array
                    items:
                      $ref: '#/components/schemas/IAVTableData'
                  nessusPluginsMapped:
                    type: [string, 'null']
                    description: Last update timestamp for Nessus plugins mapping
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
      tags:
        - IAV
      security:
        - oauth:
            - 'c-pat:read'

  /iav/pluginInfo:
    post:
      summary: Retrieve IAV and Navy Comply Date for Plugin IDs
      description: Retrieves IAV and Navy Comply Date information for given Plugin IDs
      operationId: getIAVInfoForPlugins
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                pluginIDs:
                  type: array
                  items:
                    type: integer
              required:
                - pluginIDs
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    pluginID:
                      type: integer
                    iav:
                      type: string
                    navyComplyDate:
                      type: string
                      format: date
                    supersededBy:
                      type: string
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
      tags:
        - IAV
      security:
        - oauth:
            - 'c-pat:read'

  /iav/pluginIDs:
    get:
      summary: Retrieves mapped IAV pluginIDs
      description: Get all unique pluginIDs that have an associated IAV as a comma-separated string
      operationId: getIAVPluginIds
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  pluginIDs:
                    type: string
                    description: Comma-separated list of unique plugin IDs
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
      tags:
        - IAV
      security:
        - oauth:
            - 'c-pat:read'

  /mapPluginIds:
    post:
      summary: Maps Plugin IDs to IAVs
      description: Maps Plugin IDs to IAVs
      operationId: mapIAVPluginIds
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: array
              items:
                type: object
                properties:
                  iav:
                    type: string
                    pattern: '^\d{4}-[A-Z]-\d{4}$'
                    description: IAV in the format 0000-A-0000
                  pluginID:
                    type: string
                    description: Comma-separated list of plugin IDs
                required:
                  - iav
                  - pluginID
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  updatedCount:
                    type: integer
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
      tags:
        - IAV
      security:
        - oauth:
            - 'c-pat:op'

  '/import/poams':
    post:
      summary: Parse and import .xls, .xlsx, or .xlsm eMASS POAM exports
      operationId: uploadPoamFile
      x-eov-file-handler: true
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                file:
                  type: string
                  format: binary
                  description: .xls, .xlsx, or .xlsm eMASS POAM export file
                lastCollectionAccessedId:
                  type: string
                  description: ID of the last accessed collection
              required:
                - file
      responses:
        '201':
          description: File uploaded successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '400':
          description: Bad request - invalid file format, missing file, or missing lastCollectionAccessedId
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
      tags:
        - Import
      security:
        - oauth:
            - 'c-pat:op'

  '/import/assetlist/{collectionId}':
    parameters:
      - name: collectionId
        in: path
        required: true
        schema:
          type: integer
        description: The ID of the collection to associate with the asset list
    post:
      summary: Parse and import an asset list
      operationId: importAssetListFile
      x-eov-file-handler: true
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                file:
                  type: string
                  format: binary
                  description: .xls, .xlsx, or .xlsm files
              required:
                - file
      responses:
        '201':
          description: File uploaded successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '400':
          description: Bad request - invalid file format, missing file, or missing collectionId
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
      tags:
        - Import
      security:
        - oauth:
            - 'c-pat:op'

  '/import/vram':
    post:
      summary: Parse and import VRAM excel IAV exports to provide up-to-date comply by dates
      operationId: importVRAMExcel
      x-eov-file-handler: true
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                file:
                  type: string
                  format: binary
                  description: .xls, .xlsx, or .xlsm VRAM IAV export files
              required:
                - file
      responses:
        '201':
          description: File uploaded successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '400':
          description: Bad request - invalid file format, missing file, or missing userId
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
      tags:
        - Import
      security:
        - oauth:
            - 'c-pat:op'

  '/labels/{collectionId}':
    get:
      summary: Return all labels for a collection
      operationId: getLabels
      parameters:
        - in: path
          name: collectionId
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Collection Labels array response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/label_Object'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
      tags:
        - Label
      security:
        - oauth:
            - 'c-pat:read'

  '/label/{collectionId}':
    parameters:
      - in: path
        name: collectionId
        required: true
        schema:
          type: integer
    post:
      summary: Add a label
      operationId: postLabel
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/label_Object'
      responses:
        '201':
          description: Label created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/label_Object'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
      tags:
        - Label
      security:
        - oauth:
            - 'c-pat:write'

  '/label/{collectionId}/{labelId}':
    parameters:
      - in: path
        name: collectionId
        required: true
        schema:
          type: integer
      - in: path
        name: labelId
        required: true
        schema:
          type: integer
    get:
      summary: Return a label by labelId
      operationId: getLabel
      responses:
        '200':
          description: Label object response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/label_Object'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
      tags:
        - Label
      security:
        - oauth:
            - 'c-pat:read'
    put:
      summary: Update a Label
      operationId: putLabel
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/label_Object'
      responses:
        '200':
          description: Label updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/label_Object'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
      tags:
        - Label
      security:
        - oauth:
            - 'c-pat:write'
    delete:
      summary: Delete a label by labelId
      operationId: deleteLabel
      responses:
        '204':
          description: Label deleted successfully
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
      tags:
        - Label
      security:
        - oauth:
            - 'c-pat:write'

  /marketplace/themes:
    get:
      summary: Get all themes
      operationId: getAllThemes
      responses:
        '200':
          description: Successfully retrieved all themes
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThemeResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
      tags:
        - Marketplace
      security:
        - oauth:
            - 'c-pat:read'

  /marketplace/purchase:
    post:
      summary: Purchase a theme
      description: Purchases a theme for the user if they have enough points.
      operationId: purchaseTheme
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PurchaseThemeRequest'
      responses:
        '200':
          description: Successfully purchased the theme
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessResponse'
        '400':
          description: Bad request or not enough points
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
      tags:
        - Marketplace
      security:
        - oauth:
            - 'c-pat:read'

  /marketplace/user-themes:
    get:
      summary: Get all purchased themes
      operationId: getUserThemes
      responses:
        '200':
          description: Successfully retrieved purchased themes
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserThemesResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
      tags:
        - Marketplace
      security:
        - oauth:
            - 'c-pat:read'

  /marketplace/user-points:
    get:
      summary: Get available points balance
      operationId: getUserPoints
      responses:
        '200':
          description: Successfully retrieved purchased themes
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserPointsResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
      tags:
        - Marketplace
      security:
        - oauth:
            - 'c-pat:read'

  '/metrics/collection/{collectionId}/assetlabel':
    parameters:
      - $ref: '#/components/parameters/collectionIdPath'
    get:
      summary: Get asset labels and label counts by Collection
      operationId: getCollectionAssetLabel
      responses:
        '200':
          description: Asset labels retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/assetLabel'
        '204':
          description: No Content
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
      tags:
        - Metrics
      security:
        - oauth:
            - 'c-pat:read'

  '/metrics/collection/{collectionId}/poamlabel':
    parameters:
      - $ref: '#/components/parameters/collectionIdPath'
    get:
      summary: Get POAM labels and label counts by Collection
      operationId: getCollectionPoamLabel
      responses:
        '200':
          description: POAM labels retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/poamLabel'
        '204':
          description: No Content
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
      tags:
        - Metrics
      security:
        - oauth:
            - 'c-pat:read'

  '/metrics/collection/{collectionId}/poamstatus':
    parameters:
      - $ref: '#/components/parameters/collectionIdPath'
    get:
      summary: Get POAM status and status counts by Collection
      operationId: getCollectionPoamStatus
      responses:
        '200':
          description: POAM status retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/poamStatus'
        '204':
          description: No Content
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
      tags:
        - Metrics
      security:
        - oauth:
            - 'c-pat:read'

  '/metrics/collection/{collectionId}/poamseverity':
    parameters:
      - $ref: '#/components/parameters/collectionIdPath'
    get:
      summary: Get POAM severity and severity counts by Collection
      operationId: getCollectionPoamSeverity
      responses:
        '200':
          description: POAM severity retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/poamSeverity'
        '204':
          description: No Content
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
      tags:
        - Metrics
      security:
        - oauth:
            - 'c-pat:read'

  '/metrics/collection/{collectionId}/poamScheduledCompletion':
    parameters:
      - $ref: '#/components/parameters/collectionIdPath'
    get:
      summary: Get POAM scheduled completion counts by Collection
      operationId: getCollectionPoamScheduledCompletion
      responses:
        '200':
          description: POAM scheduled completion counts retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/poamScheduledCompletion'
        '204':
          description: No Content
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
      tags:
        - Metrics
      security:
        - oauth:
            - 'c-pat:read'

  '/metrics/collection/{collectionId}/monthlypoamstatus':
    parameters:
      - $ref: '#/components/parameters/collectionIdPath'
    get:
      summary: Get a status status and status counts grouped under Open or Closed from POAMs submitted within the last 30 days for a specific collection
      operationId: getCollectionMonthlyPoamStatus
      responses:
        '200':
          description: POAM status retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/poamStatus'
        '204':
          description: No Content
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
      tags:
        - Metrics
      security:
        - oauth:
            - 'c-pat:read'

  '/metrics/available/assetlabel':
    get:
      summary: Get all asset labels and label counts available to the user
      operationId: getAvailableAssetLabel
      responses:
        '200':
          description: Asset labels retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/assetLabel'
        '204':
          description: No Content
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
      tags:
        - Metrics
      security:
        - oauth:
            - 'c-pat:read'

  '/metrics/available/poamlabel':
    get:
      summary: Get all POAM labels and label counts available to the user
      operationId: getAvailablePoamLabel
      responses:
        '200':
          description: POAM labels retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/poamLabel'
        '204':
          description: No Content
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
      tags:
        - Metrics
      security:
        - oauth:
            - 'c-pat:read'

  '/metrics/available/poamstatus':
    get:
      summary: Get all POAM status and status counts available to the user
      operationId: getAvailablePoamStatus
      responses:
        '200':
          description: POAM status retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/poamStatus'
        '204':
          description: No Content
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
      tags:
        - Metrics
      security:
        - oauth:
            - 'c-pat:read'

  '/metrics/available/poamseverity':
    get:
      summary: Get all POAM severity and severity counts available to the user
      operationId: getAvailablePoamSeverity
      responses:
        '200':
          description: POAM severity retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/poamSeverity'
        '204':
          description: No Content
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
      tags:
        - Metrics
      security:
        - oauth:
            - 'c-pat:read'

  '/metrics/available/monthlypoamseverity':
    get:
      summary: Get all POAM severity and severity counts from within the last 30 days available to the user
      operationId: getAvailableMonthlyPoamSeverity
      responses:
        '200':
          description: POAM severity retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/poamSeverity'
        '204':
          description: No Content
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
      tags:
        - Metrics
      security:
        - oauth:
            - 'c-pat:read'

  '/metrics/available/monthlypoamstatus':
    get:
      summary: Get a status of all POAMs available to the user with status and status counts grouped under Open or Closed from POAMs submitted within the last 30 days
      operationId: getAvailableMonthlyPoamStatus
      responses:
        '200':
          description: POAM status retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/poamStatus'
        '204':
          description: No Content
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
      tags:
        - Metrics
      security:
        - oauth:
            - 'c-pat:read'

  '/metrics/available/poamScheduledCompletion':
    get:
      summary: Get all POAM scheduled completion and scheduled completion counts available to the user
      operationId: getAvailablePoamScheduledCompletion
      responses:
        '200':
          description: POAM scheduled completion counts retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/poamScheduledCompletion'
        '204':
          description: No Content
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
      tags:
        - Metrics
      security:
        - oauth:
            - 'c-pat:read'

  /notifications/all:
    get:
      summary: Get all notifications for a user
      operationId: getAllNotifications
      responses:
        '200':
          description: Notification array response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/notification'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
      tags:
        - Notification
      security:
        - oauth:
            - 'c-pat:read'

  /notifications/unread:
    get:
      summary: Get all unread notifications
      operationId: getUnreadNotifications
      responses:
        '200':
          description: Notification array response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/notification'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
      tags:
        - Notification
      security:
        - oauth:
            - 'c-pat:read'

  /notifications/unread/count:
    get:
      summary: Get a count of all unread notifications
      operationId: getUnreadNotificationCount
      responses:
        '200':
          description: Notification count response
          content:
            application/json:
              schema:
                type: string
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
      tags:
        - Notification
      security:
        - oauth:
            - 'c-pat:read'

  /notifications/delete/{notificationId}:
    parameters:
      - in: path
        name: notificationId
        required: true
        schema:
          type: integer
    delete:
      summary: Delete a notification
      operationId: deleteNotification
      responses:
        '204':
          description: Notification dismissed successfully
        '404':
          description: Notification not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
      tags:
        - Notification
      security:
        - oauth:
            - 'c-pat:read'

  /notifications/all/delete:
    delete:
      summary: Deletes all notifications
      operationId: deleteAllNotifications
      responses:
        '204':
          description: Notification dismissed successfully
        '404':
          description: Notification not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
      tags:
        - Notification
      security:
        - oauth:
            - 'c-pat:read'

  /notifications/dismiss/{notificationId}:
    parameters:
      - in: path
        name: notificationId
        required: true
        schema:
          type: integer
    put:
      summary: Dismiss an individual notification
      operationId: dismissNotification
      responses:
        '200':
          description: Notification array response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/notification'
        '404':
          description: Notification not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
      tags:
        - Notification
      security:
        - oauth:
            - 'c-pat:read'

  /notifications/all/dismiss:
    put:
      summary: Dismiss all notifications
      operationId: dismissAllNotifications
      responses:
        '204':
          description: Notification dismissed successfully
        '404':
          description: Notification not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
      tags:
        - Notification
      security:
        - oauth:
            - 'c-pat:read'

  /op/appinfo:
    get:
      tags:
        - Operation
      summary: Return information about the application deployment
      operationId: getAppInfo
      parameters:
        - $ref: '#/components/parameters/ElevateQuery'
      responses:
        '200':
          description: AppInfo response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppInfo'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
      security:
        - oauth:
            - 'c-pat:op'

  /op/configuration:
    get:
      summary: Return API version and classification
      operationId: getConfiguration
      responses:
        '200':
          description: Configuration response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiConfiguration'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
      tags:
        - Operation
      security: []
    post:
      summary: Set a configuration item
      operationId: setConfigurationItem
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConfigurationItem'
      responses:
        '200':
          description: Configuration item updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessMessage'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
      tags:
        - Operation
      security:
        - oauth:
            - 'c-pat:read'
    delete:
      summary: Delete a configuration item
      operationId: deleteConfigurationItem
      parameters:
        - name: key
          in: query
          required: true
          schema:
            $ref: '#/components/schemas/String255'
      responses:
        '200':
          description: Configuration item deleted successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessMessage'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
      tags:
        - Operation
      security:
        - oauth:
            - 'c-pat:op'

  /op/definition:
    get:
      tags:
        - Operation
      summary: Return the API definition
      operationId: getDefinition
      security: []
      parameters:
        - $ref: '#/components/parameters/JsonPathQuery'
      responses:
        '200':
          description: Definition response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDefinition'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'

  '/permissions/{collectionId}':
    parameters:
      - in: path
        name: collectionId
        required: true
        schema:
          type: integer
    get:
      summary: Get the permission assignments of a collection by collectionId
      operationId: getCollectionPermissions
      responses:
        '200':
          description: Collection permissions retrieved successfully
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/user_Permissions'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
      tags:
        - Permissions
      security:
        - oauth:
            - 'c-pat:write'

  '/permission/{userId}/{collectionId}':
    parameters:
      - $ref: '#/components/parameters/ElevateQuery'
      - in: path
        name: userId
        required: true
        schema:
          type: integer
      - in: path
        name: collectionId
        required: true
        schema:
          type: integer
    delete:
      summary: Delete a collection permission by userId and collectionId
      operationId: deletePermission
      responses:
        '204':
          description: Permission deleted successfully
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
      tags:
        - Permissions
      security:
        - oauth:
            - 'c-pat:op'

  '/permission':
    post:
      summary: Add a user collection permission
      operationId: postPermission
      parameters:
        - $ref: '#/components/parameters/ElevateQuery'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/user_Permissions'
      responses:
        '201':
          description: Permission created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/user_Permissions'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
      tags:
        - Permissions
      security:
        - oauth:
            - 'c-pat:op'
    put:
      summary: Update user collection permissions
      operationId: putPermission
      parameters:
        - $ref: '#/components/parameters/ElevateQuery'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/update_user_Permissions'
      responses:
        '200':
          description: Permission updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/user_Permissions'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
      tags:
        - Permissions
      security:
        - oauth:
            - 'c-pat:op'

  '/poamApprovers/{poamId}':
    parameters:
      - in: path
        name: poamId
        required: true
        schema:
          type: integer
    get:
      summary: Return poamApprovers by poamId
      operationId: getPoamApprovers
      responses:
        '200':
          description: Poam Approvers array response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/poamApprover_Response'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
      tags:
        - PoamApprover
      security:
        - oauth:
            - 'c-pat:read'

  '/poamApprovers/collection/{collectionId}':
    parameters:
      - in: path
        name: collectionId
        required: true
        schema:
          type: integer
    get:
      summary: Return poamApprovers by collectionId
      operationId: getPoamApproversByCollection
      responses:
        '200':
          description: Poam Approvers array response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/poamApprover_Response'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
      tags:
        - PoamApprover
      security:
        - oauth:
            - 'c-pat:read'

  '/poamApprover/poam/{poamId}/user/{userId}':
    parameters:
      - in: path
        name: poamId
        required: true
        schema:
          type: integer
      - in: path
        name: userId
        required: true
        schema:
          type: integer
    delete:
      summary: Delete a poamApprover by userId and poamId
      operationId: deletePoamApprover
      responses:
        '204':
          description: Poam Approver deleted
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
      tags:
        - PoamApprover
      security:
        - oauth:
            - 'c-pat:write'

  '/poamApprover':
    post:
      summary: Add a poamApprover
      operationId: postPoamApprover
      responses:
        '201':
          description: Poam Approver created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/poamApprover_Object'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
      tags:
        - PoamApprover
      security:
        - oauth:
            - 'c-pat:write'
    put:
      summary: Updates a poamApprover
      operationId: putPoamApprover
      responses:
        '200':
          description: Poam Approver updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/poamApprover_Object'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
      tags:
        - PoamApprover
      security:
        - oauth:
            - 'c-pat:write'

  '/poamAssets':
    get:
      summary: Return all poamassets
      operationId: getPoamAssets
      responses:
        '200':
          description: PoamAsset array response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/poamAssets_Object'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
      tags:
        - PoamAssets
      security:
        - oauth:
            - 'c-pat:read'

  '/poamAssets/{collectionId}':
    get:
      summary: Return poamassets by collectionId
      operationId: getPoamAssetsByCollectionId
      parameters:
        - in: path
          name: collectionId
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: PoamAssets array response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/poamAssets_Object'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
      tags:
        - PoamAssets
      security:
        - oauth:
            - 'c-pat:read'

  '/poamAssets/assets/{assetId}':
    get:
      summary: Return poamsAssets by assetId
      operationId: getPoamAssetsByAssetId
      parameters:
        - in: path
          name: assetId
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: PoamAssets array response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/poamAssets_Object'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
      tags:
        - PoamAssets
      security:
        - oauth:
            - 'c-pat:read'

  '/poamAssets/poam/{poamId}':
    get:
      summary: Return poamassets by poamId
      operationId: getPoamAssetsByPoamId
      parameters:
        - in: path
          name: poamId
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: PoamAssets array response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/poamAssets_Object'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
      tags:
        - PoamAssets
      security:
        - oauth:
            - 'c-pat:read'
    delete:
      summary: Delete all assets associated to a POAM by poamId
      operationId: deletePoamAssetByPoamId
      parameters:
        - in: path
          name: poamId
          required: true
          schema:
            type: integer
      responses:
        '204':
          description: No content
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
      tags:
        - PoamAssets
      security:
        - oauth:
            - 'c-pat:write'

  '/poamAsset/poam/{poamId}/asset/{assetId}':
    delete:
      summary: Delete a PoamAsset by poamId and assetId
      operationId: deletePoamAsset
      parameters:
        - in: path
          name: poamId
          required: true
          schema:
            type: integer
        - in: path
          name: assetId
          required: true
          schema:
            type: integer
      responses:
        '204':
          description: No content
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
      tags:
        - PoamAssets
      security:
        - oauth:
            - 'c-pat:write'

  '/poamAsset':
    post:
      summary: Add a poam asset
      operationId: postPoamAsset
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/poamAssets_Object'
      responses:
        '201':
          description: PoamAsset created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/poamAssets_Object'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
      tags:
        - PoamAssets
      security:
        - oauth:
            - 'c-pat:write'

  /poamAssignedTeams:
    get:
      summary: Get all POAMs assigned teams
      operationId: getPoamAssignedTeams
      responses:
        '200':
          description: Successful response with all POAMs assigned teams
          content:
            application/json:
              schema:
                type: object
                properties:
                  poamAssignedTeams:
                    type: array
                    items:
                      $ref: '#/components/schemas/poamAssignedTeam_Object'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
      tags:
        - PoamAssignedTeam
      security:
        - oauth:
            - 'c-pat:read'

  /poamAssignedTeams/poam/{poamId}:
    get:
      summary: Get a POAMs assigned teams by POAM ID
      operationId: getPoamAssignedTeamsByPoamId
      parameters:
        - name: poamId
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Successful response with POAM assigned teams
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/poamAssignedTeam_Object'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
      tags:
        - PoamAssignedTeam
      security:
        - oauth:
            - 'c-pat:read'

  /poamAssignedTeam/poam/{poamId}/{assignedTeamId}:
    delete:
      summary: Delete a POAMs assigned team
      operationId: deletePoamAssignedTeam
      parameters:
        - name: poamId
          in: path
          required: true
          schema:
            type: integer
        - name: assignedTeamId
          in: path
          required: true
          schema:
            type: integer
      responses:
        '204':
          description: POAMs assigned team deleted successfully
        '400':
          description: Bad request - missing required parameters
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
      tags:
        - PoamAssignedTeam
      security:
        - oauth:
            - 'c-pat:write'

  /poamAssignedTeam:
    post:
      summary: Create a new POAM assigned team
      operationId: postPoamAssignedTeam
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                assignedTeamId:
                  type: integer
                poamId:
                  type: integer
                automated:
                  type: boolean
              required:
                - assignedTeamId
                - poamId
      responses:
        '201':
          description: POAM assigned team created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  poamId:
                    type: integer
                  assignedTeamId:
                    type: integer
                  automated:
                    type: boolean
        '400':
          description: Bad request - missing required fields
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
      tags:
        - PoamAssignedTeam
      security:
        - oauth:
            - 'c-pat:write'

  /poamAssociatedVulnerabilities/poam/{poamId}:
    parameters:
      - in: path
        name: poamId
        required: true
        schema:
          type: integer
    get:
      summary: Return additional vulnerabilities associated with a POAM by poamId
      operationId: getPoamAssociatedVulnerabilitiesByPoam
      responses:
        '200':
          description: Associated Vulnerabilities response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/associatedVulnerabilities_Object'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
      tags:
        - PoamAssociatedVulnerability
      security:
        - oauth:
            - 'c-pat:read'

  /poamAssociatedVulnerabilities:
    post:
      summary: Add a poam Associated Vulnerability
      operationId: postPoamAssociatedVulnerability
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/associatedVulnerability_Object'
      responses:
        '201':
          description: Return the added poam response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/associatedVulnerability_Object'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
      tags:
        - PoamAssociatedVulnerability
      security:
        - oauth:
            - 'c-pat:write'

  /poamAssociatedVulnerabilities/poam/{poamId}/associatedVulnerability/{associatedVulnerability}:
    parameters:
      - in: path
        name: poamId
        required: true
        schema:
          type: integer
      - in: path
        name: associatedVulnerability
        required: true
        schema:
          type: string
    delete:
      summary: Delete a Poam Associated Vulnerability by poamId and Associated Vulnerability
      operationId: deletePoamAssociatedVulnerability
      responses:
        '204':
          description: Successful deletion
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
      tags:
        - PoamAssociatedVulnerability
      security:
        - oauth:
            - 'c-pat:write'

  '/poamAttachments/poam/{poamId}':
    get:
      summary: Return attachments by poamId
      operationId: getPoamAttachmentsByPoamId
      parameters:
        - in: path
          name: poamId
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: PoamAttachments array response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PoamAttachment_Object'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
      tags:
        - PoamAttachments
      security:
        - oauth:
            - 'c-pat:read'

  '/poamAttachment':
    post:
      summary: Add a POAM attachment
      operationId: postPoamAttachment
      x-eov-file-handler: true
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                file:
                  type: string
                  format: binary
                  description: a file
                poamId:
                  type: string
                  description: ID of the last POAM
              required:
                - file
      responses:
        '201':
          description: PoamAttachment created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PoamAttachment_Object'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
      tags:
        - PoamAttachments
      security:
        - oauth:
            - 'c-pat:write'

  '/poamAttachment/poam/{poamId}/attachment/{attachmentId}':
    get:
      summary: Download a POAM attachment
      operationId: downloadPoamAttachment
      parameters:
        - in: path
          name: poamId
          required: true
          schema:
            type: integer
        - in: path
          name: attachmentId
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Successful response
          content:
            application/octet-stream:
              schema:
                type: string
                format: binary
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
        '404':
          description: Attachment not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
      tags:
        - PoamAttachments
      security:
        - oauth:
            - 'c-pat:read'

  '/poamAttachment/poam/{poamId}/{attachmentId}':
    delete:
      summary: Delete a PoamAttachment by poamId and attachmentId
      operationId: deletePoamAttachment
      parameters:
        - in: path
          name: poamId
          required: true
          schema:
            type: integer
        - in: path
          name: attachmentId
          required: true
          schema:
            type: integer
      responses:
        '204':
          description: No content
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
      tags:
        - PoamAttachments
      security:
        - oauth:
            - 'c-pat:write'

  '/poam/{poamId}/chat':
    parameters:
      - in: path
        name: poamId
        required: true
        schema:
          type: integer
    get:
      summary: Return chat messages for a specific POAM
      operationId: getMessagesByPoamId
      responses:
        '200':
          description: Array of chat messages
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/chatMessage'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
        '403':
          $ref: '#/components/responses/forbidden'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
      tags:
        - PoamChat
      security:
        - oauth:
            - 'c-pat:read'
    post:
      summary: Create a new chat message for a POAM
      operationId: createMessage
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - text
              properties:
                text:
                  type: string
                  description: The message text
      responses:
        '201':
          description: Message created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/chatMessage'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
        '403':
          $ref: '#/components/responses/forbidden'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
      tags:
        - PoamChat
      security:
        - oauth:
            - 'c-pat:write'

  '/poam/{poamId}/chat/{messageId}':
    parameters:
      - in: path
        name: poamId
        required: true
        schema:
          type: integer
      - in: path
        name: messageId
        required: true
        schema:
          type: integer
    delete:
      summary: Delete a chat message
      operationId: deleteMessage
      responses:
        '204':
          description: Message deleted successfully
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
        '403':
          description: Unauthorized - not the message owner
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
        '404':
          description: Message not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
      tags:
        - PoamChat
      security:
        - oauth:
            - 'c-pat:write'

  /poamExtension/{poamId}:
    get:
      summary: Return POAM extension by POAM ID
      operationId: getPoamExtension
      tags:
        - PoamExtension
      security:
        - oauth:
            - 'c-pat:read'
      parameters:
        - in: path
          name: poamId
          schema:
            type: integer
          required: true
          description: The ID of the POAM
      responses:
        '200':
          description: POAM extension details or empty array if no extensions found
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/poamExtensionObject'
        '403':
          $ref: '#/components/responses/forbidden'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
    delete:
      summary: Delete POAM extension by POAM ID
      operationId: deletePoamExtension
      tags:
        - PoamExtension
      security:
        - oauth:
            - 'c-pat:write'
      parameters:
        - in: path
          name: poamId
          schema:
            type: integer
          required: true
          description: The ID of the POAM
      responses:
        '200':
          description: Success message
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: 'POAM extension deleted successfully'
        '403':
          $ref: '#/components/responses/forbidden'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'

  /poamExtension:
    put:
      summary: Add or update POAM extension
      operationId: putPoamExtension
      tags:
        - PoamExtension
      security:
        - oauth:
            - 'c-pat:write'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/poamExtensionObject'
      responses:
        '200':
          description: POAM extension updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/poamExtensionObject'
        '403':
          $ref: '#/components/responses/forbidden'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'

  /poamLabels/{collectionId}:
    get:
      summary: Return all poams with labels for a specific collection
      operationId: getPoamLabels
      parameters:
        - in: path
          name: collectionId
          schema:
            type: integer
          required: true
      responses:
        '200':
          description: Poam array response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/poamLabel_Object'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
      tags:
        - PoamLabel
      security:
        - oauth:
            - 'c-pat:read'

  /poamLabels:
    get:
      summary: Return all poams containing labels that are available to the user
      operationId: getAvailablePoamLabels
      responses:
        '200':
          description: Poam array response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/poamLabel_Object'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
      tags:
        - PoamLabel
      security:
        - oauth:
            - 'c-pat:read'

  /poamLabels/poam/{poamId}:
    parameters:
      - in: path
        name: poamId
        required: true
        schema:
          type: integer
    get:
      summary: Return labels associated with a POAM by poamId
      operationId: getPoamLabelsByPoam
      responses:
        '200':
          description: Poam array response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/poamLabel_Object'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
      tags:
        - PoamLabel
      security:
        - oauth:
            - 'c-pat:read'

  /poamLabels/poams/{labelId}:
    parameters:
      - in: path
        name: labelId
        required: true
        schema:
          type: integer
    get:
      summary: Return POAMs associated with a POAM label by labelId
      operationId: getPoamsByLabel
      responses:
        '200':
          description: Poam array response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/poams_label_Object'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
      tags:
        - PoamLabel
      security:
        - oauth:
            - 'c-pat:read'

  /poamLabels/label/{labelId}:
    parameters:
      - in: path
        name: labelId
        required: true
        schema:
          type: integer
    get:
      summary: Return a poam label by labelId
      operationId: getPoamLabelByLabel
      responses:
        '200':
          description: Poam array response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/poamLabel_Object'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
      tags:
        - PoamLabel
      security:
        - oauth:
            - 'c-pat:read'

  /poamLabel/poam/{poamId}/label/{labelId}:
    parameters:
      - in: path
        name: poamId
        required: true
        schema:
          type: integer
      - in: path
        name: labelId
        required: true
        schema:
          type: integer
    get:
      summary: Return a poam label by poamId and labelId
      operationId: getPoamLabel
      responses:
        '200':
          description: Poam object response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/poamLabel_Object'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
      tags:
        - PoamLabel
      security:
        - oauth:
            - 'c-pat:read'
    delete:
      summary: Delete a Poam Label by poamId and labelId
      operationId: deletePoamLabel
      responses:
        '204':
          description: Successful deletion
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
      tags:
        - PoamLabel
      security:
        - oauth:
            - 'c-pat:write'

  /poamLabel:
    post:
      summary: Add a poam label
      operationId: postPoamLabel
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/poamLabel_Object'
      responses:
        '201':
          description: Return the added poam response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/poamLabel_Object'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
      tags:
        - PoamLabel
      security:
        - oauth:
            - 'c-pat:write'

  /poamLog/{poamId}:
    parameters:
      - in: path
        name: poamId
        required: true
        schema:
          type: integer
    get:
      summary: Return the log associated with a POAM by poamId
      operationId: getPoamLogByPoamId
      responses:
        '200':
          description: Poam log array response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/poamLog_Object'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
      tags:
        - PoamLog
      security:
        - oauth:
            - 'c-pat:read'

  /poamMilestones/{poamId}:
    get:
      summary: Get all milestones for a specific POAM
      operationId: getPoamMilestones
      parameters:
        - in: path
          name: poamId
          required: true
          schema:
            type: integer
          description: The ID of the POAM
      responses:
        '200':
          description: Successfully retrieved milestones
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PoamMilestonesResponse'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
      tags:
        - PoamMilestones
      security:
        - oauth:
            - 'c-pat:read'
    post:
      summary: Add a new milestone to a POAM
      description: Creates a new milestone. The milestoneId is auto-generated upon creation.
      operationId: postPoamMilestone
      parameters:
        - in: path
          name: poamId
          required: true
          schema:
            type: integer
          description: The ID of the POAM
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PoamMilestoneRequest'
      responses:
        '201':
          description: Successfully created a new milestone
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PoamMilestone'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
      tags:
        - PoamMilestones
      security:
        - oauth:
            - 'c-pat:write'

  /poamMilestones/{poamId}/{milestoneId}:
    delete:
      summary: Delete a specific milestone
      description: Deletes the milestone identified by milestoneId for a given POAM.
      operationId: deletePoamMilestone
      parameters:
        - in: path
          name: poamId
          required: true
          schema:
            type: integer
        - in: path
          name: milestoneId
          required: true
          schema:
            type: integer
      responses:
        '204':
          description: Successfully deleted the milestone
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
      tags:
        - PoamMilestones
      security:
        - oauth:
            - 'c-pat:write'
    put:
      summary: Update a specific milestone
      description: Updates the milestone identified by milestoneId for a given POAM.
      operationId: putPoamMilestone
      parameters:
        - in: path
          name: poamId
          required: true
          schema:
            type: integer
          description: The ID of the POAM to which the milestone belongs.
        - in: path
          name: milestoneId
          required: true
          schema:
            type: integer
          description: The ID of the milestone to update.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PoamMilestoneUpdateRequest'
      responses:
        '200':
          description: Successfully updated the milestone
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PoamMilestone'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
      tags:
        - PoamMilestones
      security:
        - oauth:
            - 'c-pat:write'

  /poams:
    get:
      summary: Return all POAMs available to a user
      operationId: getAvailablePoams
      parameters:
        - in: query
          name: approvers
          schema:
            type: boolean
        - in: query
          name: assets
          schema:
            type: boolean
        - in: query
          name: assignedTeams
          schema:
            type: boolean
        - in: query
          name: associatedVulnerabilities
          schema:
            type: boolean
        - in: query
          name: labels
          schema:
            type: boolean
        - in: query
          name: milestones
          schema:
            type: boolean
        - in: query
          name: teamMitigations
          schema:
            type: boolean
      responses:
        '200':
          description: POAM array response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/poam_Object'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
      tags:
        - Poam
      security:
        - oauth:
            - 'c-pat:read'

  /poam/{poamId}:
    parameters:
      - in: path
        name: poamId
        required: true
        schema:
          type: integer
    get:
      summary: Return a POAM by ID
      operationId: getPoam
      parameters:
        - in: query
          name: approvers
          schema:
            type: boolean
        - in: query
          name: assets
          schema:
            type: boolean
        - in: query
          name: assignedTeams
          schema:
            type: boolean
        - in: query
          name: associatedVulnerabilities
          schema:
            type: boolean
        - in: query
          name: labels
          schema:
            type: boolean
        - in: query
          name: milestones
          schema:
            type: boolean
        - in: query
          name: teamMitigations
          schema:
            type: boolean
      responses:
        '200':
          description: POAM object response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/poam_Object'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
      tags:
        - Poam
      security:
        - oauth:
            - 'c-pat:read'
    delete:
      summary: Delete a POAM by ID
      operationId: deletePoam
      responses:
        '204':
          description: POAM deleted successfully
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
      tags:
        - Poam
      security:
        - oauth:
            - 'c-pat:write'

  /poams/collection/{collectionId}:
    parameters:
      - in: path
        name: collectionId
        required: true
        schema:
          type: integer
    get:
      summary: Return POAMs by collection ID
      operationId: getPoamsByCollectionId
      parameters:
        - in: query
          name: approvers
          schema:
            type: boolean
        - in: query
          name: assets
          schema:
            type: boolean
        - in: query
          name: assignedTeams
          schema:
            type: boolean
        - in: query
          name: associatedVulnerabilities
          schema:
            type: boolean
        - in: query
          name: labels
          schema:
            type: boolean
        - in: query
          name: milestones
          schema:
            type: boolean
        - in: query
          name: teamMitigations
          schema:
            type: boolean
      responses:
        '200':
          description: POAM array response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/poam_Object'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
      tags:
        - Poam
      security:
        - oauth:
            - 'c-pat:read'

  /poams/ownership/{userId}:
    parameters:
      - in: path
        name: userId
        required: true
        schema:
          type: integer
    get:
      summary: Return POAMs owned or submitted by a user
      operationId: getPoamsByOwnership
      parameters:
        - in: query
          name: approvers
          schema:
            type: boolean
        - in: query
          name: assets
          schema:
            type: boolean
        - in: query
          name: assignedTeams
          schema:
            type: boolean
        - in: query
          name: associatedVulnerabilities
          schema:
            type: boolean
        - in: query
          name: labels
          schema:
            type: boolean
        - in: query
          name: milestones
          schema:
            type: boolean
        - in: query
          name: teamMitigations
          schema:
            type: boolean
      responses:
        '200':
          description: POAM array response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/poam_Object'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
      tags:
        - Poam
      security:
        - oauth:
            - 'c-pat:read'

  /poam/vulnerabilityIds:
    get:
      summary: Return a list of Vulnerability IDs with existing POAMs
      operationId: getVulnerabilityIdsWithPoam
      responses:
        '200':
          description: Successfully retrieved Vulnerability ID list
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    poamId:
                      type: string
                    status:
                      type: string
                    vulnerabilityId:
                      type: string
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
      tags:
        - Poam
      security:
        - oauth:
            - 'c-pat:read'

  /poam/{collectionId}/vulnerabilityIds:
    parameters:
      - in: path
        name: collectionId
        required: true
        schema:
          type: integer
    get:
      summary: Return a list of Vulnerability IDs with existing POAMs by collection
      operationId: getVulnerabilityIdsWithPoamByCollection
      responses:
        '200':
          description: Successfully retrieved Vulnerability ID list
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    poamId:
                      type: string
                    status:
                      type: string
                    vulnerabilityId:
                      type: string
                    vulnerabilityTitle:
                      type: string
                    parentPoamId:
                      type: string
                    parentStatus:
                      type: string
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
      tags:
        - Poam
      security:
        - oauth:
            - 'c-pat:read'

  /poam/{collectionId}/taskOrders:
    parameters:
      - in: path
        name: collectionId
        required: true
        schema:
          type: integer
    get:
      summary: Return a list of Vulnerability IDs with an associated task order by collection
      operationId: getVulnerabilityIdsWithTaskOrderByCollection
      responses:
        '200':
          description: Successfully retrieved Vulnerability ID list
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    poamId:
                      type: string
                    status:
                      type: string
                    vulnerabilityId:
                      type: string
                    taskOrderNumber:
                      type: string
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
      tags:
        - Poam
      security:
        - oauth:
            - 'c-pat:read'

  '/poam':
    post:
      summary: Add a POAM
      operationId: postPoam
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/poam_Object'
      responses:
        '201':
          description: POAM added successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/poam_Object'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
      tags:
        - Poam
      security:
        - oauth:
            - 'c-pat:write'
    put:
      summary: Update a POAM
      operationId: putPoam
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/poam_Object'
      responses:
        '200':
          description: POAM updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/poam_Object'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
      tags:
        - Poam
      security:
        - oauth:
            - 'c-pat:write'

  '/poam/{poamId}/status':
    parameters:
      - in: path
        name: poamId
        required: true
        schema:
          type: integer
    put:
      summary: Update a POAMs status
      operationId: updatePoamStatus
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/poam_status_object'
      responses:
        '200':
          description: POAM updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/poam_Object'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
      tags:
        - Poam
      security:
        - oauth:
            - 'c-pat:write'

  /poamTeamMitigations/poam/{poamId}:
    get:
      summary: Get all team mitigations for a specific POAM
      operationId: getPoamTeamMitigationsByPoamId
      parameters:
        - in: path
          name: poamId
          required: true
          schema:
            type: integer
          description: The ID of the POAM
      responses:
        '200':
          description: Successfully retrieved team mitigations
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/poamTeamMitigation_Object'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
      tags:
        - PoamTeamMitigation
      security:
        - oauth:
            - 'c-pat:read'

  /poamTeamMitigation:
    post:
      summary: Create a new team mitigation
      operationId: postPoamTeamMitigation
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                poamId:
                  type: integer
                assignedTeamId:
                  type: integer
                mitigationText:
                  type: string
                isActive:
                  type: boolean
              required:
                - poamId
                - assignedTeamId
      responses:
        '201':
          description: Team mitigation created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/poamTeamMitigation_Object'
        '400':
          description: Bad request - missing required fields
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
      tags:
        - PoamTeamMitigation
      security:
        - oauth:
            - 'c-pat:write'

  /poamTeamMitigation/{poamId}/{assignedTeamId}:
    parameters:
      - in: path
        name: poamId
        required: true
        schema:
          type: integer
      - in: path
        name: assignedTeamId
        required: true
        schema:
          type: integer
    put:
      summary: Update a team mitigation
      operationId: updatePoamTeamMitigation
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                mitigationText:
                  type: string
              required:
                - mitigationText
      responses:
        '200':
          description: Team mitigation updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/poamTeamMitigation_Object'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
      tags:
        - PoamTeamMitigation
      security:
        - oauth:
            - 'c-pat:write'
    delete:
      summary: Delete a team mitigation
      operationId: deletePoamTeamMitigation
      responses:
        '204':
          description: Team mitigation deleted successfully
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
      tags:
        - PoamTeamMitigation
      security:
        - oauth:
            - 'c-pat:write'

  /poamTeamMitigation/{poamId}/{assignedTeamId}/status:
    parameters:
      - in: path
        name: poamId
        required: true
        schema:
          type: integer
      - in: path
        name: assignedTeamId
        required: true
        schema:
          type: integer
    patch:
      summary: Update a team mitigation status
      operationId: updatePoamTeamMitigationStatus
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                isActive:
                  type: boolean
              required:
                - isActive
      responses:
        '200':
          description: Team mitigation status updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/poamTeamMitigation_Object'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
      tags:
        - PoamTeamMitigation
      security:
        - oauth:
            - 'c-pat:write'

  '/tenableFilters/{collectionId}':
    get:
      summary: Return all Tenable Filters for a collection
      operationId: getTenableFilters
      parameters:
        - in: path
          name: collectionId
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Tenable Filters array response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/tenableFilter_Object'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
      tags:
        - TenableFilters
      security:
        - oauth:
            - 'c-pat:read'

  '/tenableFilter/{collectionId}/{tenableFilterId}':
    parameters:
      - in: path
        name: collectionId
        required: true
        schema:
          type: integer
      - in: path
        name: tenableFilterId
        required: true
        schema:
          type: integer
    get:
      summary: Return a tenableFilter by tenableFilterId
      operationId: getTenableFilter
      responses:
        '200':
          description: Tenable Filter object response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tenableFilter_Object'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
      tags:
        - TenableFilters
      security:
        - oauth:
            - 'c-pat:read'
    put:
      summary: Update a Tenable Filter
      operationId: putTenableFilter
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/tenableFilter_Object'
      responses:
        '200':
          description: TenableFilter updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tenableFilter_Object'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
      tags:
        - TenableFilters
      security:
        - oauth:
            - 'c-pat:write'
    delete:
      summary: Delete a Tenable Filter by tenableFilterId
      operationId: deleteTenableFilter
      responses:
        '204':
          description: Tenable Filter deleted successfully
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
      tags:
        - TenableFilters
      security:
        - oauth:
            - 'c-pat:write'

  '/tenableFilter/{collectionId}':
    parameters:
      - in: path
        name: collectionId
        required: true
        schema:
          type: integer
    post:
      summary: Add a Tenable Filter
      operationId: postTenableFilter
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/tenableFilter_Object'
      responses:
        '201':
          description: TenableFilter created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tenableFilter_Object'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
      tags:
        - TenableFilters
      security:
        - oauth:
            - 'c-pat:write'

  '/user':
    get:
      tags:
        - User
      summary: Return the current user's information
      operationId: getCurrentUser
      responses:
        '200':
          description: User response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/user'
        '404':
          description: User not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
      security:
        - oauth:
            - 'c-pat:read'
    put:
      tags:
        - User
      security:
        - oauth:
            - 'c-pat:op'
      summary: Update properties of a User
      operationId: updateUser
      parameters:
        - $ref: '#/components/parameters/ElevateQuery'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/user_Update'
      responses:
        '200':
          description: User response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/user'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'

  /user/updateTheme:
    put:
      summary: Updates a users default theme
      operationId: updateUserTheme
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateThemeRequest'
      responses:
        '200':
          description: Successfully updated the theme
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessResponse'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
      tags:
        - User
      security:
        - oauth:
            - 'c-pat:read'

  /user/updatePoints:
    put:
      summary: Updates a users points
      operationId: updateUserPoints
      parameters:
        - $ref: '#/components/parameters/ElevateQuery'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdatePointsRequest'
      responses:
        '200':
          description: Successfully updated the users points
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessResponse'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
      tags:
        - User
      security:
        - oauth:
            - 'c-pat:read'

  /user/updateLastCollection:
    put:
      summary: Updates a users last collection accessed Id
      operationId: updateUserLastCollectionAccessed
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateLastCollectionRequest'
      responses:
        '200':
          description: Successfully updated the users last collection accessed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessResponse'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
      tags:
        - User
      security:
        - oauth:
            - 'c-pat:read'

  /user/{userId}/disable:
    patch:
      summary: Disables a user account
      operationId: disableUser
      parameters:
        - $ref: '#/components/parameters/ElevateQuery'
        - in: path
          name: userId
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: User disabled successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessResponse'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
      tags:
        - User
      security:
        - oauth:
            - 'c-pat:op'

  '/users':
    get:
      tags:
        - User
      security:
        - oauth:
            - 'c-pat:op'
      summary: Return all users for admin processing
      operationId: getUsers
      parameters:
        - $ref: '#/components/parameters/ElevateQuery'
      responses:
        '200':
          description: User response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/user'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'

  '/user/{userId}':
    parameters:
      - $ref: '#/components/parameters/ElevateQuery'
      - in: path
        name: userId
        required: true
        schema:
          type: integer
    get:
      tags:
        - User
      security:
        - oauth:
            - 'c-pat:read'
      summary: Return a User
      operationId: getUserByUserID
      responses:
        '200':
          description: User response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/user'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'

  '/teams/{assignedTeamId}':
    parameters:
      - in: path
        name: assignedTeamId
        required: true
        schema:
          type: integer
    get:
      summary: Get all users assigned to a team
      operationId: getTeamAssignments
      responses:
        '200':
          description: Team assignments retrieved successfully
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/user_team_assignment'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
      tags:
        - UserTeamAssignments
      security:
        - oauth:
            - 'c-pat:read'

  '/user/{userId}/teams/{assignedTeamId}':
    parameters:
      - $ref: '#/components/parameters/ElevateQuery'
      - in: path
        name: userId
        required: true
        schema:
          type: integer
      - in: path
        name: assignedTeamId
        required: true
        schema:
          type: integer
    delete:
      summary: Remove a user from a team
      operationId: deleteTeamAssignment
      responses:
        '204':
          description: Team assignment deleted successfully
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
      tags:
        - UserTeamAssignments
      security:
        - oauth:
            - 'c-pat:op'

  '/user/teams':
    post:
      summary: Add a user to a team
      operationId: postTeamAssignment
      parameters:
        - $ref: '#/components/parameters/ElevateQuery'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/user_team_assignment'
      responses:
        '201':
          description: Team assignment created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/user_team_assignment'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
      tags:
        - UserTeamAssignments
      security:
        - oauth:
            - 'c-pat:op'
    put:
      summary: Update a users team assignment
      operationId: putTeamAssignment
      parameters:
        - $ref: '#/components/parameters/ElevateQuery'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/update_user_team_assignment'
      responses:
        '200':
          description: Team assignment updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/user_team_assignment'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
      tags:
        - UserTeamAssignments
      security:
        - oauth:
            - 'c-pat:op'

  '/vulnerability/poam/{vulnerabilityId}':
    parameters:
      - in: path
        name: vulnerabilityId
        required: true
        schema:
          type: string
    get:
      summary: Return POAMs by vulnerabilityId
      operationId: getPoamsByVulnerabilityId
      responses:
        '200':
          description: POAM array response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/poam_Object'
        '403':
          $ref: '#/components/responses/forbidden'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
      tags:
        - Vulnerability
      security:
        - oauth:
            - 'c-pat:read'

  '/vulnerability/existingPoams':
    get:
      summary: Return a list of vulnerabilities associated with existing POAMs
      operationId: getExistingVulnerabilityPoams
      responses:
        '200':
          description: Successful response with existing vulnerability POAMs
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    poamId:
                      type: integer
                    status:
                      type: string
                    vulnerabilityId:
                      type: string
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
      tags:
        - Vulnerability
      security:
        - oauth:
            - 'c-pat:read'

components:
  schemas:
    ApiClassification:
      type: string
      enum:
        - NONE
        - U
        - FOUO
        - CUI
        - C
        - S
        - TS
        - SCI
    ApiConfiguration:
      additionalProperties: false
      type: object
      properties:
        classification:
          $ref: '#/components/schemas/ApiClassification'
        version:
          $ref: '#/components/schemas/ApiVersion'
    ApiDefinition:
      oneOf:
        - type: object
        - type: array
    ApiVersion:
      $ref: '#/components/schemas/Version'
    AppInfo:
      type: object
      properties:
        date:
          type: string
          format: date-time
        schema:
          $ref: '#/components/schemas/String255'
        version:
          $ref: '#/components/schemas/ApiVersion'
        requests:
          $ref: '#/components/schemas/AppInfoRequests'
        users:
          $ref: '#/components/schemas/AppInfoUsers'
        mysql:
          $ref: '#/components/schemas/AppInfoMySql'
        nodejs:
          $ref: '#/components/schemas/AppInfoNodejs'
      required:
        - date
        - schema
        - version
        - requests
        - mysql
        - nodejs
    AppInfoNodejs:
      type: object
      properties:
        version:
          $ref: '#/components/schemas/ApiVersion'
        uptime:
          type: number
        os:
          type: object
          properties:
            platform:
              $ref: '#/components/schemas/String255'
            arch:
              $ref: '#/components/schemas/String255'
            osMachine:
              $ref: '#/components/schemas/String255'
            osName:
              $ref: '#/components/schemas/String255'
            osRelease:
              $ref: '#/components/schemas/String255'
            loadAverage:
              $ref: '#/components/schemas/String255'
        environment:
          additionalProperties:
            type: string
        memory:
          type: object
          properties:
            rss:
              type: number
            heapTotal:
              type: number
            heapUsed:
              type: number
            external:
              type: number
            arrayBuffers:
              type: number
            maxRss:
              type: number
        cpus:
          type: array
          items:
            type: object
            properties:
              model:
                $ref: '#/components/schemas/String255'
              speed:
                type: number
    AppInfoMySql:
      type: object
      properties:
        version:
          $ref: '#/components/schemas/ApiVersion'
        tables:
          type: object
        variables:
          type: object
        status:
          type: object
    AppInfoUsers:
      type: object
      properties:
        userInfo:
          additionalProperties:
            $ref: '#/components/schemas/AppInfoUserInfo'
        userPrivilegeCounts:
          type: object
          properties:
            overall:
              additionalProperties:
                type: number
            activeInLast30Days:
              additionalProperties:
                type: number
            activeInLast90Days:
              additionalProperties:
                type: number
    AppInfoUserInfo:
      type: object
      properties:
        username:
          $ref: '#/components/schemas/Username'
        created:
          type: string
          format: date-time
        lastAccess:
          type: [number, 'null']
        privileges:
          type: array
          items:
            $ref: '#/components/schemas/String255'
    AppInfoRequests:
      type: object
      properties:
        totalRequests:
          type: number
        totalApiRequests:
          type: number
        totalRequestDuration:
          type: number
        operationIds:
          additionalProperties:
            $ref: '#/components/schemas/AppInfoOperation'
    AppInfoOperation:
      type: object
      properties:
        totalRequests:
          type: number
        totalDuration:
          type: number
        elevatedRequests:
          type: number
        minDuration:
          type: number
        maxDuration:
          type: number
        maxDurationUpdates:
          type: number
        retried:
          type: number
        averageRetries:
          type: number
        totalResLength:
          type: number
        minResLength:
          type: number
        maxResLength:
          type: number
        totalReqLength:
          type: number
        minReqLength:
          type: number
        maxReqLength:
          type: number
        projections:
          type: object
        clients:
          type: object
          additionalProperties:
            type: number
        users:
          type: object
          additionalProperties:
            type: number
    ConfigurationItem:
      type: object
      required:
        - key
        - value
      properties:
        key:
          $ref: '#/components/schemas/String45'
        value:
          $ref: '#/components/schemas/String255'
    SuccessMessage:
      type: object
      properties:
        message:
          type: string
    String255:
      maxLength: 255
      type: string
    String45:
      maxLength: 45
      type: string
    Version:
      description: |
        API version string
      pattern: ^\d+\.\d+\.\d+$
      type: string
    VersionString:
      $ref: '#/components/schemas/String255'
    AssetResponse:
      type: object
      properties:
        asset:
          type: array
          items:
            $ref: '#/components/schemas/AssetObject'
    AssetObject:
      type: object
      required:
        - assetName
        - collectionId
      properties:
        assetId:
          type: integer
        assetName:
          type: string
        fullyQualifiedDomainName:
          type: [string, 'null']
        collectionId:
          type: integer
        description:
          type: [string, 'null']
        ipAddress:
          type: [string, 'null']
        macAddress:
          type: [string, 'null']
        nonComputing:
          type: [integer, 'null']
        assetOrigin:
          type: [string, 'null']

    assetLabel_Object:
      type: object
      required:
        - assetId
        - collectionId
        - labelId
      additionalProperties: true
      properties:
        assetId:
          type: integer
        collectionId:
          type: integer
        labelId:
          type: integer

    collection:
      type: object
      required:
        - collectionName
      additionalProperties: true
      properties:
        collectionId:
          type: integer
        collectionName:
          type: string
        description:
          type: [string, 'null']
        systemType:
          type: [string, 'null']
        systemName:
          type: [string, 'null']
        ccsafa:
          type: [string, 'null']
        aaPackage:
          type: [string, 'null']
        predisposingConditions:
          type: [string, 'null']
        created:
          type: string
          format: date
        collectionOrigin:
          type: [string, 'null']
        originCollectionId:
          type: [integer, 'null']
        manualCreationAllowed:
          type: [boolean, 'null']
    collectionBasicList:
      type: object
      additionalProperties: false
      properties:
        collectionId:
          type: integer
        collectionName:
          type: string
        collectionOrigin:
          type: [string, 'null']
        originCollectionId:
          type: [integer, 'null']
        systemType:
          type: [string, 'null']
        systemName:
          type: [string, 'null']
        ccsafa:
          type: [string, 'null']
        aaPackage:
          type: [string, 'null']
        predisposingConditions:
          type: [string, 'null']
        manualCreationAllowed:
          type: boolean
          default: true

    error:
      type: object
      properties:
        error:
          type: string
        detail:
          type: string

    SuccessResponse:
      type: object
      properties:
        message:
          type: string

    label_Object:
      type: object
      required:
        - labelName
        - collectionId
      additionalProperties: true
      properties:
        labelId:
          type: integer
        collectionId:
          type: integer
        labelName:
          type: string
        description:
          type: string

    tenableFilter_Object:
      type: object
      required:
        - filterName
        - collectionId
      additionalProperties: false
      properties:
        filterId:
          type: integer
        collectionId:
          type: integer
        filterName:
          type: string
        filter:
          type: string
        createdBy:
          type: [string, 'null']

    aaPackage_Object:
      type: object
      required:
        - aaPackage
      properties:
        aaPackageId:
          type: integer
        aaPackage:
          type: string

    appConfiguration_Object:
      type: object
      required:
        - settingName
        - settingValue
      properties:
        settingName:
          type: string
        settingValue:
          type: string

    assignedTeam_Object:
      type: object
      required:
        - assignedTeamName
      properties:
        assignedTeamId:
          type: integer
        assignedTeamName:
          type: string
        adTeam:
          type: [string, 'null']
        automated:
          type: boolean
        permissions:
          type: array
          items:
            $ref: '#/components/schemas/permission_Object'
          description: Array of collection IDs this team has access to

    assignedTeamPermission_Request:
      type: object
      required:
        - assignedTeamId
        - collectionId
      properties:
        assignedTeamId:
          type: integer
          description: ID of the assigned team
        collectionId:
          type: integer
          description: ID of the collection to grant permission for

    assignedTeamPermission_Object:
      type: object
      required:
        - assignedTeamId
        - collectionId
      properties:
        assignedTeamId:
          type: integer
          description: ID of the assigned team
        collectionId:
          type: integer
          description: ID of the collection permission is granted for

    permission_Object:
      type: object
      required:
        - collectionId
        - collectionName
      properties:
        collectionId:
          type: integer
          description: ID of the collection this team has access to
        collectionName:
          type: string
          description: Name of the collection this team has access to

    IAVTableData:
      type: object
      properties:
        iav:
          type: string
        pluginID:
          type: [string, 'null']
          description: Comma-separated list of plugin IDs associated with this IAV
        status:
          type: [string, 'null']
        title:
          type: string
        iavCat:
          type: [integer, 'null']
          format: int32
        type:
          type: string
          maxLength: 1
        releaseDate:
          type: [string, 'null']
          format: date
        navyComplyDate:
          type: [string, 'null']
          format: date
        supersededBy:
          type: [string, 'null']
        knownExploits:
          type: [string, 'null']
        knownDodIncidents:
          type: [string, 'null']
        nessusPlugins:
          type: integer
          format: int32
      required:
        - iav
        - title
        - type

    notification:
      type: object
      properties:
        notificationId:
          type: integer
        userId:
          type: integer
        title:
          type: string
        message:
          type: string
        timestamp:
          type: string
          format: date-time
        read:
          type: integer
      required:
        - notificationId
        - userId
        - title
        - message
        - timestamp
        - read

    poamApprover_Object:
      type: object
      required:
        - poamId
        - userId
        - approvalStatus
      additionalProperties: true
      properties:
        poamId:
          type: integer
        userId:
          type: integer
        approvalStatus:
          type: string
        approvedDate:
          type: [string, 'null']
          format: date
        comments:
          type: [string, 'null']
        hqs:
          type: [boolean, 'null']

    poamApprover_Response:
      type: object
      required:
        - poamId
        - userId
        - approvalStatus
      additionalProperties: true
      properties:
        poamId:
          type: integer
        userId:
          type: integer
        approvalStatus:
          type: string
        approvedDate:
          type: [string, 'null']
          format: date
        comments:
          type: [string, 'null']

    poamAssignedTeam_Object:
      type: object
      required:
        - poamId
        - assignedTeamId
      additionalProperties: true
      properties:
        poamId:
          type: integer
        assignedTeamId:
          type: integer
        assignedTeamName:
          type: string
        adTeam:
          type: [string, 'null']
        automated:
          type: boolean
        poamStatus:
          type: string
        complete:
          type: [string, 'null']

    poamAssets_Object:
      type: object
      required:
        - poamId
        - assetId
      additionalProperties: true
      properties:
        poamId:
          type: integer
        assetId:
          type: integer

    PoamAttachment_Object:
      type: object
      properties:
        attachmentId:
          type: integer
        poamId:
          type: integer
        filename:
          type: string
        fileSize:
          type: integer
        mimeType:
          type: string
        uploadDate:
          type: string
          format: date-time
        uploadedBy:
          type: integer

    chatMessage:
      type: object
      properties:
        messageId:
          type: integer
          description: Unique identifier for the message
        userId:
          type: integer
          description: ID of the user who created the message
        poamId:
          type: integer
          description: ID of the POAM this message belongs to
        text:
          type: string
          description: Message content
        createdAt:
          type: string
          format: date-time
          description: When the message was created
        user:
          type: object
          properties:
            firstName:
              type: string
            lastName:
              type: string
            userName:
              type: string

    poamExtensionObject:
      type: object
      required:
        - poamId
      additionalProperties: true
      properties:
        poamId:
          type: integer
        extensionTimeAllowed:
          type: integer
        extensionJustification:
          type: string
        mitigations:
          type: [string, 'null']
        requiredResources:
          type: [string, 'null']
        residualRisk:
          type: [string, 'null']
        likelihood:
          type: [string, 'null']
        localImpact:
          type: [string, 'null']
        impactDescription:
          type: [string, 'null']
        status:
          type: string

    poam_status_object:
      type: object
      required:
        - poamId
        - status
      additionalProperties: true
      properties:
        poamId:
          type: integer
        status:
          type: string

    poam_Object:
      type: object
      required:
        - poamId
        - collectionId
        - vulnerabilitySource
        - rawSeverity
        - submitterId
        - status
      additionalProperties: true
      properties:
        poamId:
          type: integer
        collectionId:
          type: integer
        vulnerabilitySource:
          type: string
        vulnerabilityTitle:
          type: [string, 'null']
        stigBenchmarkId:
          type: [string, 'null']
        stigCheckData:
          type: [string, 'null']
        tenablePluginData:
          type: [string, 'null']
        iavmNumber:
          type: [string, 'null']
        taskOrderNumber:
          type: [string, 'null']
        iavComplyByDate:
          type: [string, 'null']
          format: date
        aaPackage:
          type: string
        vulnerabilityId:
          type: [string, 'null']
        description:
          type: string
        rawSeverity:
          type: string
        adjSeverity:
          type: [string, 'null']
        scheduledCompletionDate:
          type: string
          format: date
        closedDate:
          type: [string, 'null']
          format: date
        submitterId:
          type: integer
        mitigations:
          type: [string, 'null']
        predisposingConditions:
          type: [string, 'null']
        requiredResources:
          type: [string, 'null']
        residualRisk:
          type: [string, 'null']
        likelihood:
          type: [string, 'null']
        localImpact:
          type: [string, 'null']
        impactDescription:
          type: [string, 'null']
        status:
          type: string
        submittedDate:
          type: [string, 'null']
          format: date
        hqs:
          type: [boolean, 'null']
        isGlobalFinding:
          type: [boolean, 'null']
        approvers:
          type: array
          items:
            type: object
            properties:
              userId:
                type: integer
              approvalStatus:
                type: string
                default: 'Not Reviewed'
              approvedDate:
                type: [string, 'null']
                format: date
              comments:
                type: [string, 'null']
              hqs:
                type: [boolean, 'null']
            required:
              - userId
        assignedTeams:
          type: array
          items:
            type: object
            properties:
              assignedTeamId:
                type: integer
              automated:
                type: boolean
                default: false
            required:
              - assignedTeamId
        assets:
          type: array
          items:
            type: object
            properties:
              assetId:
                type: integer
              assetName:
                type: string
            oneOf:
              - required: ['assetId']
              - required: ['assetName']
            additionalProperties: false
        associatedVulnerabilities:
          oneOf:
            - type: string
              description: Comma-separated list of vulnerability IDs
            - type: array
              items:
                type: string
        labels:
          type: array
          items:
            type: object
            properties:
              labelId:
                type: integer
            required:
              - labelId
        milestones:
          type: array
          items:
            type: object
            properties:
              milestoneId:
                type: [integer, 'null']
              milestoneDate:
                type: [string, 'null']
                format: date
              milestoneComments:
                type: [string, 'null']
              milestoneChangeDate:
                type: [string, 'null']
                format: date
              milestoneChangeComments:
                type: [string, 'null']
              milestoneStatus:
                type: [string, 'null']
              assignedTeamId:
                type: [integer, 'null']
        teamMitigations:
          type: array
          items:
            type: object
            properties:
              assignedTeamId:
                type: integer
              mitigationText:
                type: string
                default: ''
              isActive:
                type: boolean
                default: true
            required:
              - assignedTeamId

    poamTeamMitigation_Object:
      type: object
      properties:
        mitigationId:
          type: integer
        poamId:
          type: integer
        assignedTeamId:
          type: integer
        assignedTeamName:
          type: string
        mitigationText:
          type: string
        isActive:
          type: boolean
      required:
        - poamId
        - assignedTeamId

    associatedVulnerability_Object:
      type: object
      required:
        - poamId
        - associatedVulnerability
      additionalProperties: true
      properties:
        poamId:
          type: integer
        associatedVulnerability:
          type: string

    associatedVulnerabilities_Object:
      type: object
      required:
        - poamId
        - associatedVulnerability
      additionalProperties: true
      properties:
        poamId:
          type: integer
        associatedVulnerability:
          type: string
        poamStatus:
          type: string

    poams_label_Object:
      type: object
      required:
        - poamId
        - labelId
      additionalProperties: true
      properties:
        poamId:
          type: integer
        labelId:
          type: integer
        labelName:
          type: string
        vulnerabilityId:
          type: string
        vulnerabilityTitle:
          type: string
        rawSeverity:
          type: string

    poamLabel_Object:
      type: object
      required:
        - poamId
        - labelId
      additionalProperties: true
      properties:
        poamId:
          type: integer
        collectionId:
          type: integer
        labelId:
          type: integer

    poamLog_Object:
      type: object
      properties:
        Timestamp:
          type: string
          format: date-time
          description: The timestamp when the log entry was created.
        User:
          type: string
          description: The full name of the user who made the change.
        Action:
          type: string
          description: The action performed (e.g., "POAM Created", "POAM Updated").
      required:
        - Timestamp
        - User
        - Action

    PoamMilestonesResponse:
      type: array
      items:
        $ref: '#/components/schemas/PoamMilestone'

    PoamMilestone:
      type: object
      additionalProperties: true
      properties:
        milestoneId:
          type: integer
        poamId:
          type: integer
        milestoneDate:
          type: [string, 'null']
          format: date
        milestoneComments:
          type: [string, 'null']
        milestoneChangeDate:
          type: [string, 'null']
          format: date
        milestoneChangeComments:
          type: [string, 'null']
        milestoneStatus:
          type: [string, 'null']
        assignedTeamId:
          type: [integer, 'null']

    PoamMilestoneRequest:
      type: object
      additionalProperties: true
      properties:
        milestoneId:
          type: integer
        poamId:
          type: integer
        milestoneDate:
          type: [string, 'null']
          format: date
        milestoneComments:
          type: [string, 'null']
        milestoneChangeDate:
          type: [string, 'null']
          format: date
        milestoneChangeComments:
          type: [string, 'null']
        milestoneStatus:
          type: [string, 'null']
        assignedTeamId:
          type: [integer, 'null']

    PoamMilestoneUpdateRequest:
      type: object
      additionalProperties: true
      properties:
        milestoneId:
          type: integer
        poamId:
          type: integer
        milestoneDate:
          type: [string, 'null']
          format: date
        milestoneComments:
          type: [string, 'null']
        milestoneChangeDate:
          type: [string, 'null']
          format: date
        milestoneChangeComments:
          type: [string, 'null']
        milestoneStatus:
          type: [string, 'null']
        assignedTeamId:
          type: [integer, 'null']

    assetLabel:
      type: object
      properties:
        label:
          type: string
        labelCount:
          type: integer

    ThemeResponse:
      type: array
      items:
        type: object
        properties:
          themeId:
            type: integer
          themeIdentifier:
            type: string
          themeName:
            type: string
          themeDescription:
            type: string
          cost:
            type: integer

    PurchaseThemeRequest:
      type: object
      properties:
        userId:
          type: integer
        themeId:
          type: integer
      required:
        - userId
        - themeId

    UserThemesResponse:
      type: array
      items:
        type: object
        properties:
          themeId:
            type: integer
          themeIdentifier:
            type: string
          themeName:
            type: string
          themeDescription:
            type: string
          cost:
            type: integer

    UserPointsResponse:
      type: object
      properties:
        userId:
          type: integer
        points:
          type: integer

    poamStatus:
      type: object
      properties:
        status:
          type: string
        statusCount:
          type: integer

    poamLabel:
      type: object
      properties:
        label:
          type: string
        labelCount:
          type: integer

    poamSeverity:
      type: object
      properties:
        severity:
          type: string
        severityCount:
          type: integer

    poamScheduledCompletion:
      type: object
      properties:
        scheduledCompletion:
          type: string
        scheduledCompletionCount:
          type: integer

    UpdateThemeRequest:
      type: object
      properties:
        userId:
          type: integer
        defaultTheme:
          type: string
      required:
        - userId
        - defaultTheme

    UpdatePointsRequest:
      type: object
      properties:
        userId:
          type: integer
        points:
          type: integer
      required:
        - userId
        - points

    UpdateLastCollectionRequest:
      type: object
      properties:
        userId:
          type: integer
        lastCollectionAccessedId:
          type: integer
      required:
        - userId
        - lastCollectionAccessedId

    user:
      type: object
      required:
        - userId
        - userName
        - lastCollectionAccessedId
        - accountStatus
      additionalProperties: true
      properties:
        userId:
          type: integer
          readOnly: true
        userName:
          type: string
          maxLength: 20
          readOnly: true
        email:
          type: string
          maxLength: 100
        phoneNumber:
          type: string
          maxLength: 20
        firstName:
          type: string
          maxLength: 50
        lastName:
          type: string
          maxLength: 50
        created:
          type: string
          format: date
        lastAccess:
          type: string
          format: date
        lastCollectionAccessedId:
          type: integer
        accountStatus:
          type: string
          maxLength: 45
        fullName:
          type: string
          maxLength: 225
        officeOrg:
          type: [string, 'null']
          maxLength: 100
        defaultTheme:
          type: [string, 'null']
          maxLength: 255
        lastClaims:
          type: [object, 'null']
        points:
          type: [integer, 'null']
        isAdmin:
          type: boolean
        permissions:
          type: array
          items:
            type: object
            required:
              - userId
              - collectionId
              - accessLevel
            properties:
              userId:
                type: integer
              collectionId:
                type: integer
              accessLevel:
                type: integer
        assignedTeams:
          type: array
          items:
            type: object
            required:
              - userId
              - accessLevel
            properties:
              assignedTeamId:
                type: integer
              accessLevel:
                type: integer

    user_Update:
      type: object
      required:
        - userId
        - email
        - firstName
        - lastName
        - accountStatus
        - lastCollectionAccessedId
      additionalProperties: true
      properties:
        userId:
          type: integer
        email:
          type: string
        phoneNumber:
          type: string
        lastAccess:
          type: [string, 'null']
        firstName:
          type: string
          maxLength: 50
        lastName:
          type: string
          maxLength: 50
        accountStatus:
          type: string
          maxLength: 45
        officeOrg:
          type: [string, 'null']
          maxLength: 100
        lastCollectionAccessedId:
          type: integer
        defaultTheme:
          type: [string, 'null']
          maxLength: 255
        lastClaims:
          type: [object, 'null']
        points:
          type: [integer, 'null']

    user_Permissions:
      type: object
      required:
        - userId
        - collectionId
        - accessLevel
      additionalProperties: true
      properties:
        userId:
          type: integer
        collectionId:
          type: integer
        accessLevel:
          type: integer
        firstName:
          type: string
        lastName:
          type: string
        fullName:
          type: string
        email:
          type: string

    update_user_Permissions:
      type: object
      required:
        - userId
        - oldCollectionId
        - newCollectionId
        - accessLevel
      additionalProperties: true
      properties:
        userId:
          type: integer
        oldCollectionId:
          type: integer
        newCollectionId:
          type: integer
        accessLevel:
          type: integer
        firstName:
          type: string
        lastName:
          type: string
        fullName:
          type: string
        email:
          type: string

    user_team_assignment:
      type: object
      required:
        - userId
        - assignedTeamId
        - accessLevel
      additionalProperties: true
      properties:
        userId:
          type: integer
        assignedTeamId:
          type: integer
        accessLevel:
          type: integer
        fullName:
          type: string
        userName:
          type: string
        email:
          type: string

    Username:
      $ref: '#/components/schemas/String255'

    update_user_team_assignment:
      type: object
      required:
        - userId
        - oldAssignedTeamId
        - newAssignedTeamId
        - accessLevel
      additionalProperties: true
      properties:
        userId:
          type: integer
        oldAssignedTeamId:
          type: integer
        newAssignedTeamId:
          type: integer
        accessLevel:
          type: integer

  responses:
    forbidden:
      description: The requesting User does not have access rights to the content
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/error'

  parameters:
    ElevateQuery:
      name: elevate
      in: query
      description: Elevate the user context for this request if user is permitted (isAdmin)
      schema:
        type: boolean
        default: false

    collectionIdPath:
      name: collectionId
      in: path
      description: A path parameter that identifies a Collection
      required: true
      schema:
        type: string

    JsonPathQuery:
      name: jsonpath
      in: query
      description: A JSONPath expression
      schema:
        $ref: '#/components/schemas/String255'

  securitySchemes:
    oauth:
      type: openIdConnect
      openIdConnectUrl: ''
