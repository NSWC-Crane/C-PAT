#/*
#!#######################################################################
#! C-PATTM SOFTWARE
#! CRANE C-PATTM plan of action and milestones software. Use is governed by the Open Source Academic Research License Agreement contained in the file
#! crane_C_PAT.1_license.txt, which is part of this software package. BY
#! USING OR MODIFYING THIS SOFTWARE, YOU ARE AGREEING TO THE TERMS AND    
#! CONDITIONS OF THE LICENSE.  
#!########################################################################
#*/

openapi: 3.0.1
info:
  title: C-PAT API
  description: An API for managing POAMs.
  contact:
    name: Christian Rodriguez
    email: christian.a.rodriguez8.ctr@us.navy.mil
  version: '0.2'
servers:
  - url: 'http://localhost:8086/api'
paths:
  /assets:
    get:
      summary: Return all assets
      operationId: getAssets
      responses:
        '200':
          description: Asset array response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AssetResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
      tags:
        - Asset
      security:
        - oauth:
            - 'c-pat:op'
  
  /assets/collection/{collectionId}:
    parameters:
      - in: path
        name: collectionId
        required: true
        schema:
          type: integer
    get:
      summary: Return all assets belonging to a specific collection
      operationId: getAssetsByCollection
      responses:
        '200':
          description: Asset array response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AssetResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
      tags:
        - Asset
      security:
        - oauth:
            - 'c-pat:read'
  
  /asset/name/{assetName}:
    parameters:
      - in: path
        name: assetName
        required: true
        schema:
          type: string
    get:
      summary: Return an asset by userName
      operationId: getAssetByName
      responses:
        '200':
          description: Asset array response
          content:
            application/json:
              schema:
                type: object
                properties:
                  asset:
                    type: array
                    items:
                      $ref: '#/components/schemas/AssetObject'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
      tags:
        - Asset
      security:
        - oauth:
            - 'c-pat:read'
  
  /asset/{assetId}:
    parameters:
      - in: path
        name: assetId
        required: true
        schema:
          type: integer
    get:
      summary: Return an asset by assetId
      operationId: getAsset
      responses:
        '200':
          description: Asset array response
          content:
            application/json:
              schema:
                type: object
                properties:
                  asset:
                    type: array
                    items:
                      $ref: '#/components/schemas/AssetObject'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
      tags:
        - Asset
      security:
        - oauth:
            - 'c-pat:read'
    delete:
      summary: Delete an Asset by assetId
      operationId: deleteAsset
      responses:
        '204':
          description: Asset successfully deleted
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
      tags:
        - Asset
      security:
        - oauth:
            - 'c-pat:read'

  /assets/{poamId}:
    parameters:
      - in: path
        name: poamId
        required: true
        schema:
          type: integer
    delete:
      summary: Delete assets by poamId
      operationId: deleteAssetsByPoamId
      responses:
        '204':
          description: Assets successfully deleted
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
      tags:
        - Asset
      security:
        - oauth:
            - 'c-pat:read'
  
  /asset:
    post:
      summary: Add an asset
      operationId: postAsset
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AssetObject'
      responses:
        '201':
          description: Return the added asset response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AssetObject'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
      tags:
        - Asset
      security:
        - oauth:
            - 'c-pat:read'
    put:
      summary: Update an Asset
      operationId: putAsset
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AssetObject'
      responses:
        '200':
          description: Return the updated asset response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AssetObject'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
      tags:
        - Asset
      security:
        - oauth:
            - 'c-pat:read'

  /assetLabels/{collectionId}:
    parameters:
      - in: path
        name: collectionId
        required: true
        schema:
          type: integer
    get:
      summary: Return all asset labels and corresponding assets for a specific collection
      operationId: getAssetLabels
      responses:
        '200':
          description: Asset array response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/assetLabel_Object'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
      tags:
        - AssetLabel
      security:
        - oauth:
            - 'c-pat:read'
            
  /assetLabels/asset/{assetId}:
    parameters:
      - in: path
        name: assetId
        required: true
        schema:
          type: integer
    get:
      summary: Return an asset label by assetId
      operationId: getAssetLabelsByAsset
      responses:
        '200':
          description: Asset array response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/assetLabel_Object'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
      tags:
        - AssetLabel
      security:
        - oauth:
            - 'c-pat:read'

  /assetLabels/label/{labelId}:
    parameters:
      - in: path
        name: labelId
        required: true
        schema:
          type: integer
    get:
      summary: Return an asset label by labelId
      operationId: getAssetLabelsByLabel
      responses:
        '200':
          description: Asset array response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/assetLabel_Object'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
      tags:
        - AssetLabel
      security:
        - oauth:
            - 'c-pat:read'
            
  /assetLabel/asset/{assetId}/label/{labelId}:
    parameters:
      - in: path
        name: assetId
        required: true
        schema:
          type: integer
      - in: path
        name: labelId
        required: true
        schema:
          type: integer
    get:
      summary: Return an asset label by assetId and labelId
      operationId: getAssetLabel
      responses:
        '200':
          description: Asset array response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/assetLabel_Object'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
      tags:
        - AssetLabel
      security:
        - oauth:
            - 'c-pat:read'
    delete:
      summary: Delete an asset label by assetId and labelId
      operationId: deleteAssetLabel
      responses:
        '204':
          description: null asset response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AssetObject'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
      tags:
        - AssetLabel
      security:
        - oauth:
            - 'c-pat:read'
            
  /assetLabel:
    post:
      summary: Add an asset label
      operationId: postAssetLabel
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/assetLabel_Object'
      responses:
        '201':
          description: return the added asset response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/assetLabel_Object'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
      tags:
        - AssetLabel
      security:
        - oauth:
            - 'c-pat:read'

  /collections/basiclist:
    get:
      tags:
        - Collection
      summary: Return a list of collection names and corresponding C-PAT collectionIds
      operationId: getCollectionBasicList
      responses:
        '200':
          description: Collection list retrieved successfully
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/collectionNameAndId'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
  
  '/collections/{userName}':
    get:
      tags:
        - Collection
      summary: Get a list of collections accessible to the user
      operationId: getCollections
      parameters:
        - $ref: '#/components/parameters/collectionAuth'
      responses:
        '200':
          description: Collection list retrieved successfully
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/collection'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'

  /collection:
    post:
      tags:
        - Collection  
      summary: Create a Collection
      operationId: postCollection
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/collection'
      responses:
        '201':
          description: Collection created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/collection'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
  
    put:
      summary: Update a Collection
      operationId: putCollection
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/collection'
      responses:
        '200':
          description: Collection updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/collection'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
      tags: 
        - Collection

  '/import/poams':
    post:
      summary: Parse and import .xls, .xlsx, or .xlsm eMASS POAM exports
      operationId: uploadPoamFile
      x-eov-file-handler: true
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                file:
                  type: string
                  format: binary
                  description: .xls, .xlsx, or .xlsm eMASS POAM export file
                lastCollectionAccessedId:
                  type: string
                  description: ID of the last accessed collection
              required:
                - file
      responses:
        '201':
          description: File uploaded successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '400':
          description: Bad request - invalid file format, missing file, or missing lastCollectionAccessedId
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
      tags:
        - Import
      security:
        - oauth:
            - 'c-pat:op'
  
  '/import/stigmanager/collection':
    post:
      summary: Endpoint to receive collection and assets data from STIG Manager
      operationId: postStigManagerCollection
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                collection:
                  $ref: '#/components/schemas/STIGMANCollection'
                assets:
                  type: array
                  items:
                    $ref: '#/components/schemas/STIGMANAsset'
      responses:
        '201':
          description: Collection and assets imported successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '400':
          description: Bad request - invalid data format or missing data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
      tags:
        - Import
      security:
        - oauth:
            - 'c-pat:read'
  
  '/import/stigmanager/assets':
    post:
      summary: Endpoint to receive asset data from STIG Manager
      operationId: postStigManagerAssets
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                assets:
                  type: array
                  items:
                    $ref: '#/components/schemas/STIGMANAsset'
      responses:
        '201':
          description: Assets imported successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  assets:
                    type: array
                    items:
                      $ref: '#/components/schemas/AssetObject'
        '400':
          description: Bad request - invalid data format or missing data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
      tags:
        - Import

  '/update/stigmanager/poamassets':
    put:
      summary: Endpoint to receive updated asset data from STIG Manager
      operationId: updatePoamAssetsWithStigManagerData
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: array
              items:
                type: object
                required:
                  - assets
                  - collectionId
                  - poamId
                properties:
                  assets:
                    type: array
                    items: {}
                  collectionId:
                    type: integer
                  poamId:
                    type: integer
                  poamLog:
                    type: array
                    items:
                      type: object
                      properties:
                        userId:
                          type: integer
      responses:
        '200':
          description: Poam Assets updated with stigman data
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/stigmanPoamAssetUpdate'
        '400':
          description: Bad request - invalid data format or missing data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
      tags:
        - Import
      security:
        - oauth:
            - 'c-pat:read'

  '/labels/{collectionId}':
    get:
      summary: Return all labels for a collection
      operationId: getLabels
      parameters:
        - in: path
          name: collectionId
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Collection Labels array response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/label_Object'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
      tags:
        - Label
      security:
        - oauth:
            - 'c-pat:read'
  
  '/label/{collectionId}/{labelId}':
    parameters:
      - in: path
        name: collectionId
        required: true
        schema:
          type: integer
      - in: path
        name: labelId
        required: true
        schema:
          type: integer
    get:
      summary: Return a label by labelId
      operationId: getLabel
      responses:
        '200':
          description: Label object response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/label_Object'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
      tags:
        - Label
      security:
        - oauth:
            - 'c-pat:read'
    delete:
      summary: Delete a label by labelId
      operationId: deleteLabel
      responses:
        '204':
          description: Label deleted successfully
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
      tags:
        - Label
      security:
        - oauth:
            - 'c-pat:read'
  
  '/label/{collectionId}':
    parameters:
      - in: path
        name: collectionId
        required: true
        schema:
          type: integer
    post:
      summary: Add a label
      operationId: postLabel
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/label_Object'
      responses:
        '201':
          description: Label created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/label_Object'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
      tags:
        - Label
      security:
        - oauth:
            - 'c-pat:read'
    put:
      summary: Update a Label
      operationId: putLabel
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/label_Object'
      responses:
        '200':
          description: Label updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/label_Object'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
      tags:
        - Label
      security:
        - oauth:
            - 'c-pat:read'

  '/metrics/collection/{collectionId}/assetlabel':
    parameters:
      - $ref: '#/components/parameters/collectionIdPath'
    get:
      summary: Get asset labels and label counts by Collection
      operationId: getCollectionAssetLabel
      responses:
        '200':
          description: Asset labels retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/assetLabel'
        '204':
          description: No Content
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
      tags:
        - Metrics
      security:
        - oauth:
            - 'c-pat:read'
  
  '/metrics/collection/{collectionId}/poamlabel':
    parameters:
      - $ref: '#/components/parameters/collectionIdPath'
    get:
      summary: Get POAM labels and label counts by Collection
      operationId: getCollectionPoamLabel
      responses:
        '200':
          description: POAM labels retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/poamLabel'
        '204':
          description: No Content
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
      tags:
        - Metrics
      security:
        - oauth:
            - 'c-pat:read'
  
  '/metrics/collection/{collectionId}/poamstatus':
    parameters:
      - $ref: '#/components/parameters/collectionIdPath'
    get:
      summary: Get POAM status and status counts by Collection
      operationId: getCollectionPoamStatus
      responses:
        '200':
          description: POAM status retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/poamStatus'
        '204':
          description: No Content
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
      tags:
        - Metrics
      security:
        - oauth:
            - 'c-pat:read'
  
  '/metrics/collection/{collectionId}/poamseverity':
    parameters:
      - $ref: '#/components/parameters/collectionIdPath'
    get:
      summary: Get POAM severity and severity counts by Collection
      operationId: getCollectionPoamSeverity
      responses:
        '200':
          description: POAM severity retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/poamSeverity'
        '204':
          description: No Content
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
      tags:
        - Metrics
      security:
        - oauth:
            - 'c-pat:read'
  
  '/metrics/collection/{collectionId}/poamScheduledCompletion':
    parameters:
      - $ref: '#/components/parameters/collectionIdPath'
    get:
      summary: Get POAM scheduled completion counts by Collection
      operationId: getCollectionPoamScheduledCompletion
      responses:
        '200':
          description: POAM scheduled completion counts retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/poamScheduledCompletion'
        '204':
          description: No Content
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
      tags:
        - Metrics
      security:
        - oauth:
            - 'c-pat:read'

  '/metrics/collection/{collectionId}/monthlypoamstatus':
    parameters:
      - $ref: '#/components/parameters/collectionIdPath'
    get:
      summary: Get a status status and status counts grouped under Open or Closed from POAMs submitted within the last 30 days for a specific collection
      operationId: getCollectionMonthlyPoamStatus
      responses:
        '200':
          description: POAM status retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/poamStatus'
        '204':
          description: No Content
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
      tags:
        - Metrics
      security:
        - oauth:
            - 'c-pat:read'

  '/metrics/available/{userId}/assetlabel':
    parameters:
      - $ref: '#/components/parameters/userIdPath'
    get:
      summary: Get all asset labels and label counts available to the user
      operationId: getAvailableAssetLabel
      responses:
        '200':
          description: Asset labels retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/assetLabel'
        '204':
          description: No Content
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
      tags:
        - Metrics
      security:
        - oauth:
            - 'c-pat:op'
  
  '/metrics/available/{userId}/poamlabel':
    parameters:
      - $ref: '#/components/parameters/userIdPath'
    get:
      summary: Get all POAM labels and label counts available to the user
      operationId: getAvailablePoamLabel
      responses:
        '200':
          description: POAM labels retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/poamLabel'
        '204':
          description: No Content
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
      tags:
        - Metrics
      security:
        - oauth:
            - 'c-pat:op'
  
  '/metrics/available/{userId}/poamstatus':
    parameters:
      - $ref: '#/components/parameters/userIdPath'
    get:
      summary: Get all POAM status and status counts available to the user
      operationId: getAvailablePoamStatus
      responses:
        '200':
          description: POAM status retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/poamStatus'
        '204':
          description: No Content
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
      tags:
        - Metrics
      security:
        - oauth:
            - 'c-pat:op'
  
  '/metrics/available/{userId}/poamseverity':
    parameters:
      - $ref: '#/components/parameters/userIdPath'
    get:
      summary: Get all POAM severity and severity counts available to the user
      operationId: getAvailablePoamSeverity
      responses:
        '200':
          description: POAM severity retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/poamSeverity'
        '204':
          description: No Content
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
      tags:
        - Metrics
      security:
        - oauth:
            - 'c-pat:op'

  '/metrics/available/{userId}/monthlypoamseverity':
    parameters:
      - $ref: '#/components/parameters/userIdPath'
    get:
      summary: Get all POAM severity and severity counts from within the last 30 days available to the user
      operationId: getAvailableMonthlyPoamSeverity
      responses:
        '200':
          description: POAM severity retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/poamSeverity'
        '204':
          description: No Content
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
      tags:
        - Metrics
      security:
        - oauth:
            - 'c-pat:op'

  '/metrics/available/{userId}/monthlypoamstatus':
    parameters:
      - $ref: '#/components/parameters/userIdPath'
    get:
      summary: Get a status of all POAMs available to the user with status and status counts grouped under Open or Closed from POAMs submitted within the last 30 days
      operationId: getAvailableMonthlyPoamStatus
      responses:
        '200':
          description: POAM status retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/poamStatus'
        '204':
          description: No Content
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
      tags:
        - Metrics
      security:
        - oauth:
            - 'c-pat:op'
  
  '/metrics/available/{userId}/poamScheduledCompletion':
    parameters:
      - $ref: '#/components/parameters/userIdPath'
    get:
      summary: Get all POAM scheduled completion and scheduled completion counts available to the user
      operationId: getAvailablePoamScheduledCompletion
      responses:
        '200':
          description: POAM scheduled completion counts retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/poamScheduledCompletion'
        '204':
          description: No Content
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
      tags:
        - Metrics
      security:
        - oauth:
            - 'c-pat:op'

  '/metrics/available/{userId}/collectionpoamcount':
    parameters:
      - $ref: '#/components/parameters/userIdPath'
    get:
      summary: Get a count of poams for each collection available to the user
      operationId: getAvailableCollectionPoamCounts
      responses:
        '200':
          description: POAM counts retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/collectionPoamCounts'
        '204':
          description: No Content
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
      tags:
        - Metrics
      security:
        - oauth:
            - 'c-pat:op'

  /notifications/all/{userId}:
    parameters:
      - in: path
        name: userId
        required: true
        schema:
          type: integer
    get:
      summary: Get all notifications for a user
      operationId: getAllNotificationsByUserId
      responses:
        '200':
          description: Notification array response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/notification'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
      tags:
        - Notification
      security:
        - oauth:
            - 'c-pat:read'

  /notifications/unread/{userId}:
    parameters:
      - in: path
        name: userId
        required: true
        schema:
          type: integer
    get:
      summary: Get all unread notifications for a user
      operationId: getUnreadNotificationsByUserId
      responses:
        '200':
          description: Notification array response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/notification'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
      tags:
        - Notification
      security:
        - oauth:
            - 'c-pat:read'

  /notifications/unread/count/{userId}:
    parameters:
      - in: path
        name: userId
        required: true
        schema:
          type: integer
    get:
      summary: Get a count of all unread notifications for a user
      operationId: getUnreadNotificationCountByUserId
      responses:
        '200':
          description: Notification count response
          content:
            application/json:
              schema:
                type: string
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
      tags:
        - Notification
      security:
        - oauth:
            - 'c-pat:read'

  /notifications/delete/{notificationId}:
    parameters:
      - in: path
        name: notificationId
        required: true
        schema:
          type: integer
    delete:
      summary: Delete a notification
      operationId: deleteNotificationByNotificationId
      responses:
        '204':
          description: Notification dismissed successfully
        '404':
          description: Notification not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
      tags:
        - Notification
      security:
        - oauth:
            - 'c-pat:read'

  /notifications/all/delete/{userId}:
    parameters:
      - in: path
        name: userId
        required: true
        schema:
          type: integer
    delete:
      summary: Delete a notification
      operationId: deleteAllNotificationsByUserId
      responses:
        '204':
          description: Notification dismissed successfully
        '404':
          description: Notification not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
      tags:
        - Notification
      security:
        - oauth:
            - 'c-pat:read'

  /notifications/dismiss/{notificationId}:
    parameters:
      - in: path
        name: notificationId
        required: true
        schema:
          type: integer
    put:
      summary: Dismiss a notification
      operationId: dismissNotificationByNotificationId
      responses:
        '200':
          description: Notification array response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/notification'
        '404':
          description: Notification not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
      tags:
        - Notification
      security:
        - oauth:
            - 'c-pat:read'

  /notifications/all/dismiss/{userId}:
    parameters:
      - in: path
        name: userId
        required: true
        schema:
          type: integer
    put:
      summary: Dismiss all notifications for a user
      operationId: dismissAllNotificationsByUserId
      responses:
        '204':
          description: Notification dismissed successfully
        '404':
          description: Notification not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
      tags:
        - Notification
      security:
        - oauth:
            - 'c-pat:read'

  '/collection/{collectionId}/user/{userName}':
    parameters:
      - $ref: '#/components/parameters/collectionIdPath'
      - in: path
        name: userName
        required: true
        schema:
          type: string
    get:
      tags:
        - Permissions
      summary: Return collection permissions for a user
      operationId: getCollectionPermission
      responses:
        '200':
          description: Collection retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/collection'
        '204':
          description: No Content
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'

  '/collection/permissions/{collectionId}':
    parameters:
      - in: path
        name: collectionId
        required: true
        schema:
          type: integer
    get:
      summary: Get all permissions for a specific collection
      operationId: getCollectionPermissions
      responses:
        '200':
          description: Collection permissions retrieved successfully
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/user_Permissions'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
      tags:
        - Permissions

  '/permission/{userId}/{collectionId}':
    parameters:
      - in: path
        name: userId
        required: true
        schema:
          type: integer
      - in: path
        name: collectionId
        required: true
        schema:
          type: integer
    delete:
      summary: Delete a collection permission by userId and collectionId
      operationId: deletePermission
      responses:
        '204':
          description: Permission deleted successfully
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
      tags:
        - Permissions
      security:
        - oauth:
            - 'c-pat:op'

  '/permission':
    post:
      summary: Add a user collection permission
      operationId: postPermission
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/user_Permissions'
      responses:
        '201':
          description: Permission created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/user_Permissions'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
      tags:
        - Permissions
      security:
        - oauth:
            - 'c-pat:op'
  
    put:
      summary: Update user collection permissions
      operationId: putPermission
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/update_user_Permissions'
      responses:
        '200':
          description: Permission updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/user_Permissions'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
      tags:
        - Permissions
      security:
        - oauth:
            - 'c-pat:op'

  '/poamApprovers/{poamId}':
    parameters:
      - in: path
        name: poamId
        required: true
        schema:
          type: integer
    get:
      summary: Return poamApprovers by poamId
      operationId: getPoamApprovers
      responses:
        '200':
          description: Poam Approvers array response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/poamApprover_Object'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
      tags:
        - PoamApprover
      security:
        - oauth:
            - 'c-pat:read'

  '/poamApprovers/user/{userId}':
    parameters:
      - in: path
        name: userId
        required: true
        schema:
          type: integer   
    get:
      summary: Return poamApprovers by userId
      operationId: getPoamApproversByUserId
      responses:
        '200':
          description: Poam Approvers array response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/poamApprover_Object'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
      tags:
        - PoamApprover
      security:
        - oauth:
            - 'c-pat:op'

  '/poamApprovers/collection/{collectionId}':
    parameters:
      - in: path
        name: collectionId
        required: true
        schema:
          type: integer 
    get:
      summary: Return poamApprovers by collectionId
      operationId: getPoamApproversByCollection
      responses:
        '200':
          description: Poam Approvers array response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/poamApprover_Object'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
      tags:
        - PoamApprover
      security:
        - oauth:
            - 'c-pat:op'
  
  '/poamApprovers/collection/{collectionId}/user/{userId}':
    parameters:
      - in: path
        name: collectionId
        required: true
        schema:
          type: integer
      - in: path
        name: userId
        required: true
        schema:
          type: integer   
    get:
      summary: Return poamApprovers by collectionId and userId
      operationId: getPoamApproversByCollectionUser
      responses:
        '200':
          description: Poam Approvers array response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/poamApprover_Object'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
      tags:
        - PoamApprover
      security:
        - oauth:
            - 'c-pat:op'
  
  '/poamApprover/poam/{poamId}/user/{userId}':
    parameters:
      - in: path
        name: poamId
        required: true
        schema:
          type: integer
      - in: path
        name: userId
        required: true
        schema:
          type: integer   
    delete:
      summary: Delete a poamApprover by userId and poamId
      operationId: deletePoamApprover
      responses:
        '204':
          description: Poam Approver deleted
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
      tags:
        - PoamApprover
      security:
        - oauth:
            - 'c-pat:op'
  
  '/poamApprover':
    post:
      summary: Add a poamApprover
      operationId: postPoamApprover
      responses:
        '201':
          description: Poam Approver created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/poamApprover_Object'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
      tags:
        - PoamApprover
      security:
        - oauth:
            - 'c-pat:op'
    put:
      summary: Updates a poamApprover
      operationId: putPoamApprover
      responses:
        '200':
          description: Poam Approver updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/poamApprover_Object'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
      tags:
        - PoamApprover
      security:
        - oauth:
            - 'c-pat:op'

  '/poamAssets':
    get:
      summary: Return all poamassets
      operationId: getPoamAssets
      responses:
        '200':
          description: PoamAsset array response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/poamAssets_Object'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
      tags:
        - PoamAssets
      security:
        - oauth:
            - 'c-pat:read'

  '/poamAssets/assets/{assetId}':
    get:
      summary: Return poamsAssets by assetId
      operationId: getPoamAssetsByAssetId
      parameters:
        - in: path
          name: assetId
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: PoamAssets array response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/poamAssets_Object'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
      tags:
        - PoamAssets
      security:
        - oauth:
            - 'c-pat:read'
  
  '/poamAssets/poam/{poamId}':
    get:
      summary: Return poamassets by poamId
      operationId: getPoamAssetsByPoamId
      parameters:
        - in: path
          name: poamId
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: PoamAssets array response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/poamAssets_Object'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
      tags:
        - PoamAssets
      security:
        - oauth:
            - 'c-pat:read'
    delete:
      summary: Delete all assets associated to a POAM by poamId
      operationId: deletePoamAssetByPoamId
      parameters:
        - in: path
          name: poamId
          required: true
          schema:
            type: integer
      responses:
        '204':
          description: No content
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
      tags:
        - PoamAssets
      security:
        - oauth:
            - 'c-pat:read'
  
  '/poamAsset/poam/{poamId}/asset/{assetId}':
    delete:
      summary: Delete a PoamAsset by poamId and assetId
      operationId: deletePoamAsset
      parameters:
        - in: path
          name: poamId
          required: true
          schema:
            type: integer
        - in: path
          name: assetId
          required: true
          schema:
            type: integer
      responses:
        '204':
          description: No content
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
      tags:
        - PoamAssets
      security:
        - oauth:
            - 'c-pat:read'
  
  '/poamAsset':
    post:
      summary: Add a poam asset
      operationId: postPoamAsset
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/poamAssets_Object'
      responses:
        '201':
          description: PoamAsset created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/poamAssets_Object'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
      tags:
        - PoamAssets
      security:
        - oauth:
            - 'c-pat:read'

  /poamAssignees:
    get:
      summary: Get all POAM assignees
      operationId: getPoamAssignees
      responses:
        '200':
          description: Successful response with POAM assignees
          content:
            application/json:
              schema:
                type: object
                properties:
                  poamAssignees:
                    type: array
                    items:
                      $ref: '#/components/schemas/poamAssignee_Object'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
      tags:
        - PoamAssignees
      security:
        - oauth:
            - 'c-pat:read'

  /poamAssignees/poam/{poamId}:
    get:
      summary: Get POAM assignees by POAM ID
      operationId: getPoamAssigneesByPoamId
      parameters:
        - name: poamId
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Successful response with POAM assignees
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/poamAssignee_Object'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
      tags:
        - PoamAssignees
      security:
        - oauth:
            - 'c-pat:read'

  /poamAssignees/user/{userId}:
    get:
      summary: Get POAM assignees by user ID
      operationId: getPoamAssigneesByUserId
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Successful response with POAM assignees
          content:
            application/json:
              schema:
                type: object
                properties:
                  poamAssignees:
                    type: array
                    items:
                      $ref: '#/components/schemas/poamAssignee_Object'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
      tags:
        - PoamAssignees
      security:
        - oauth:
            - 'c-pat:read'

  /poamAssignee/poam/{poamId}/user/{userId}:
    get:
      summary: Get a specific POAM assignee by POAM ID and user ID
      operationId: getPoamAssignee
      parameters:
        - name: poamId
          in: path
          required: true
          schema:
            type: integer
        - name: userId
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Successful response with the POAM assignee
          content:
            application/json:
              schema:
                type: object
                properties:
                  poamAssignee:
                    type: array
                    items:
                      $ref: '#/components/schemas/poamAssignee_Object'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
      tags:
        - PoamAssignees
      security:
        - oauth:
            - 'c-pat:read'
    delete:
      summary: Delete a POAM assignee
      operationId: deletePoamAssignee
      parameters:
        - name: poamId
          in: path
          required: true
          schema:
            type: integer
        - name: userId
          in: path
          required: true
          schema:
            type: integer
        - name: requestorId
          in: header
          required: false
          schema:
            type: integer
          description: ID of the user making the request for logging purposes
      responses:
        '204':
          description: POAM assignee deleted successfully
        '400':
          description: Bad request - missing required parameters
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
      tags:
        - PoamAssignees
      security:
        - oauth:
            - 'c-pat:read'
            
  /poamAssignee:
    post:
      summary: Create a new POAM assignee
      operationId: postPoamAssignee
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                userId:
                  type: integer
                poamId:
                  type: integer
                poamLog:
                  type: array
                  items:
                    type: object
                    properties:
                      userId:
                        type: integer
              required:
                - userId
                - poamId
      responses:
        '201':
          description: POAM assignee created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  poamId:
                    type: integer
                  userId:
                    type: integer
        '400':
          description: Bad request - missing required fields
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
      tags:
        - PoamAssignees
      security:
        - oauth:
            - 'c-pat:read'

  /poamExtension/{poamId}:
    get:
      summary: Return POAM extension by POAM ID
      operationId: getPoamExtension
      tags:
        - PoamExtension
      security:
        - oauth:
          - 'c-pat:read'
      parameters:
        - in: path
          name: poamId
          schema:
            type: integer
          required: true
          description: The ID of the POAM
      responses:
        '200':
          description: POAM extension details or empty array if no extensions found
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/poamExtensionObject'
        '403':
          $ref: '#/components/responses/forbidden'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
    delete:
      summary: Delete POAM extension by POAM ID
      operationId: deletePoamExtension
      tags:
        - PoamExtension
      security:
        - oauth:
          - 'c-pat:read'
      parameters:
        - in: path
          name: poamId
          schema:
            type: integer
          required: true
          description: The ID of the POAM
      responses:
        '200':
          description: Success message
          content:
            application/json:
              schema:
                type: object
                properties: 
                  message:
                    type: string
                    example: "POAM extension deleted successfully"
        '403':
          $ref: '#/components/responses/forbidden'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'

  /poamExtension:
    put:
      summary: Add or update POAM extension
      operationId: putPoamExtension
      tags:
        - PoamExtension
      security:
        - oauth:
          - 'c-pat:read' 
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/poamExtensionObject'
      responses:
        '200':
          description: POAM extension updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/poamExtensionObject'
        '403':
          $ref: '#/components/responses/forbidden'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'

  /poamLabels/{collectionId}:
    get:
      summary: Return all poams with labels for a specific collection
      operationId: getPoamLabels
      parameters:
        - in: path
          name: collectionId
          schema:
            type: integer
          required: true
      responses:
        '200':
          description: Poam array response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/poamLabel_Object'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
      tags:
        - PoamLabel
      security:
        - oauth:
            - 'c-pat:read'

  /poamLabels/available/{userId}:
    get:
      summary: Return all poams with labels available to a user
      operationId: getAvailablePoamLabels
      parameters:
        - in: path
          name: userId
          schema:
            type: integer
          required: true
      responses:
        '200':
          description: Poam array response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/poamLabel_Object'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
      tags:
        - PoamLabel
      security:
        - oauth:
            - 'c-pat:op'
            
  /poamLabels/poam/{poamId}:
    parameters:
      - in: path
        name: poamId
        required: true
        schema:
          type: integer
    get:
      summary: Return labels associated with a POAM by poamId
      operationId: getPoamLabelsByPoam
      responses:
        '200':
          description: Poam array response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/poamLabel_Object'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
      tags:
        - PoamLabel
      security:
        - oauth:
            - 'c-pat:read'
    
  /poamLabels/label/{labelId}:
    parameters:
      - in: path
        name: labelId
        required: true
        schema:
          type: integer
    get:
      summary: Return a poam label by labelId
      operationId: getPoamLabelByLabel
      responses:
        '200':
          description: Poam array response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/poamLabel_Object'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
      tags:
        - PoamLabel
      security:
        - oauth:
            - 'c-pat:read'
            
  /poamLabel/poam/{poamId}/label/{labelId}:
    parameters:
      - in: path
        name: poamId
        required: true
        schema:
          type: integer
      - in: path
        name: labelId
        required: true
        schema:
          type: integer
    get:
      summary: Return a poam label by poamId and labelId
      operationId: getPoamLabel
      responses:
        '200':
          description: Poam object response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/poamLabel_Object'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
      tags:
        - PoamLabel
      security:
        - oauth:
            - 'c-pat:read'
    delete:
      summary: Delete a Poam Label by poamId and labelId
      operationId: deletePoamLabel
      responses:
        '204':
          description: Successful deletion
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
      tags:
        - PoamLabel
      security:
        - oauth:
            - 'c-pat:read'
            
  /poamLabel:
    post:
      summary: Add a poam label
      operationId: postPoamLabel
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/poamLabel_Object'
      responses:
        '201':
          description: Return the added poam response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/poamLabel_Object'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
      tags:
        - PoamLabel
      security:
        - oauth:
            - 'c-pat:read'

  /poamLog/{poamId}:
    parameters:
      - in: path
        name: poamId
        required: true
        schema:
          type: integer
    get:
      summary: Return the log associated with a POAM by poamId
      operationId: getPoamLogByPoamId
      responses:
        '200':
          description: Poam log array response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/poamLog_Object'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
      tags:
        - PoamLog
      security:
        - oauth:
            - 'c-pat:read'

  /poamMilestones/{poamId}:
    get:
      summary: Get all milestones for a specific POAM
      operationId: getPoamMilestones
      parameters:
        - in: path
          name: poamId
          required: true
          schema:
            type: integer
          description: The ID of the POAM
      responses:
        '200':
          description: Successfully retrieved milestones
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PoamMilestonesResponse'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
      tags:
        - PoamMilestones
      security:
        - oauth:
            - 'c-pat:read'
    post:
      summary: Add a new milestone to a POAM
      description: Creates a new milestone. The milestoneId is auto-generated upon creation.
      operationId: postPoamMilestone
      parameters:
        - in: path
          name: poamId
          required: true
          schema:
            type: integer
          description: The ID of the POAM
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PoamMilestoneRequest'
      responses:
        '201':
          description: Successfully created a new milestone
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PoamMilestone'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
      tags:
        - PoamMilestones
      security:
        - oauth:
            - 'c-pat:read'
  
  /poamMilestones/{poamId}/{milestoneId}:
    delete:
      summary: Delete a specific milestone
      description: Deletes the milestone identified by milestoneId for a given POAM.
      operationId: deletePoamMilestone
      parameters:
        - in: path
          name: poamId
          required: true
          schema:
            type: integer
        - in: path
          name: milestoneId
          required: true
          schema:
            type: integer
      responses:
        '204':
          description: Successfully deleted the milestone
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
      tags:
        - PoamMilestones
      security:
        - oauth:
            - 'c-pat:read'
    put:
      summary: Update a specific milestone
      description: Updates the milestone identified by milestoneId for a given POAM.
      operationId: putPoamMilestone
      parameters:
        - in: path
          name: poamId
          required: true
          schema:
            type: integer
          description: The ID of the POAM to which the milestone belongs.
        - in: path
          name: milestoneId
          required: true
          schema:
            type: integer
          description: The ID of the milestone to update.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PoamMilestoneUpdateRequest'
      responses:
        '200':
          description: Successfully updated the milestone
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PoamMilestone'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
      tags:
        - PoamMilestones
      security:
        - oauth:
            - 'c-pat:read'

  /poamExtensionMilestones/{poamId}:
    get:
      summary: Get all Extension Milestones for a specific POAM
      operationId: getPoamExtensionMilestones
      parameters:
        - in: path
          name: poamId
          required: true
          schema:
            type: integer
          description: The ID of the POAM
      responses:
        '200':
          description: Successfully retrieved Extension Milestones
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PoamExtensionMilestonesResponse'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
      tags:
        - PoamExtensionMilestones
      security:
        - oauth:
            - 'c-pat:read'
    post:
      summary: Add a new Extension Milestone to a POAM
      description: Creates a new Extension Milestone. The extensionMilestoneId is auto-generated upon creation.
      operationId: postPoamExtensionMilestone
      parameters:
        - in: path
          name: poamId
          required: true
          schema:
            type: integer
          description: The ID of the POAM
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PoamExtensionMilestoneRequest'
      responses:
        '201':
          description: Successfully created a new ExtensionMilestone
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PoamExtensionMilestone'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
      tags:
        - PoamExtensionMilestones
      security:
        - oauth:
            - 'c-pat:read'
  
  /poamExtensionMilestones/{poamId}/{extensionMilestoneId}:
    put:
      summary: Update a specific Extension Milestone
      description: Updates the Extension Milestone identified by extensionMilestoneId for a given POAM.
      operationId: putPoamExtensionMilestone
      parameters:
        - in: path
          name: poamId
          required: true
          schema:
            type: integer
          description: The ID of the POAM to which the Extension Milestone belongs.
        - in: path
          name: extensionMilestoneId
          required: true
          schema:
            type: integer
          description: The ID of the Extension Milestone to update.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PoamExtensionMilestoneUpdateRequest'
      responses:
        '200':
          description: Successfully updated the Extension Milestone
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PoamExtensionMilestone'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
      tags:
        - PoamExtensionMilestones
      security:
        - oauth:
            - 'c-pat:read'
    delete:
      summary: Delete a specific Extension Milestone
      description: Deletes the Extension Milestone identified by extensionMilestoneId for a given POAM.
      operationId: deletePoamExtensionMilestone
      parameters:
        - in: path
          name: poamId
          required: true
          schema:
            type: integer
        - in: path
          name: extensionMilestoneId
          required: true
          schema:
            type: integer
      responses:
        '204':
          description: Successfully deleted the Extension Milestone
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
      tags:
        - PoamExtensionMilestones
      security:
        - oauth:
            - 'c-pat:read'

  /poams/{userId}:
    parameters:
      - in: path
        name: userId
        required: true
        schema:
          type: integer
    get:
      summary: Return all POAMs available to a user
      operationId: getAvailablePoams
      parameters:
        - in: query
          name: approvers
          schema:
            type: boolean
        - in: query
          name: assignees
          schema:
            type: boolean
        - in: query
          name: assets
          schema:
            type: boolean
      responses:
        '200':
          description: POAM array response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/poam_Object'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
      tags:
        - Poam
      security:
        - oauth:
            - 'c-pat:op'
  
  /poam/{poamId}:
    parameters:
      - in: path
        name: poamId
        required: true
        schema:
          type: integer
    get:
      summary: Return a POAM by ID
      operationId: getPoam
      parameters:
        - in: query
          name: approvers
          schema:
            type: boolean
        - in: query
          name: assignees
          schema:
            type: boolean
        - in: query
          name: assets
          schema:
            type: boolean
      responses:
        '200':
          description: POAM object response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/poam_Object'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
      tags:
        - Poam
      security:
        - oauth:
            - 'c-pat:read'
    delete:
      summary: Delete a POAM by ID
      operationId: deletePoam
      responses:
        '204':
          description: POAM deleted successfully
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
      tags:
        - Poam
      security:
        - oauth:
            - 'c-pat:read'
  
  /poams/collection/{collectionId}:
    parameters:
      - in: path
        name: collectionId
        required: true
        schema:
          type: integer
    get:
      summary: Return POAMs by collection ID
      operationId: getPoamsByCollectionId
      parameters:
        - in: query
          name: approvers
          schema:
            type: boolean
        - in: query
          name: assignees
          schema:
            type: boolean
        - in: query
          name: assets
          schema:
            type: boolean
      responses:
        '200':
          description: POAM array response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/poam_Object'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
      tags:
        - Poam
      security:
        - oauth:
            - 'c-pat:read'
  
  /poams/submitter/{submitterId}:
    parameters:
      - in: path
        name: submitterId
        required: true
        schema:
          type: integer
    get:
      summary: Return POAMs by Submitter ID
      operationId: getPoamsBySubmitterId
      parameters:
        - in: query
          name: approvers
          schema:
            type: boolean
        - in: query
          name: assignees
          schema:
            type: boolean
        - in: query
          name: assets
          schema:
            type: boolean
      responses:
        '200':
          description: POAM array response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/poam_Object'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
      tags:
        - Poam
      security:
        - oauth:
            - 'c-pat:read'
  
  '/poam':
    post:
      summary: Add a POAM
      operationId: postPoam
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/poam_Object'
      responses:
        '201':
          description: POAM added successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/poam_Object'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
      tags:
        - Poam
      security:
        - oauth:
            - 'c-pat:read'
    put:
      summary: Update a POAM
      operationId: putPoam
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/poam_Object'
      responses:
        '200':
          description: POAM updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/poam_Object'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
      tags:
        - Poam
      security:
        - oauth:
            - 'c-pat:read'

  '/poam/status/{poamId}':
    parameters:
      - in: path
        name: poamId
        required: true
        schema:
          type: integer
    put:
      summary: Update a POAMs status
      operationId: updatePoamStatus
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/poam_status_object'
      responses:
        '200':
          description: POAM updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/poam_Object'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
      tags:
        - Poam
      security:
        - oauth:
            - 'c-pat:read'

  '/user':
    get:
      tags:
        - User
      summary: Return the current user's information
      operationId: getCurrentUser
      responses:
        '200':
          description: User response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/current_user_Response'
        '404':
          description: User not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
      security:
        - oauth:
            - 'c-pat:read'
    put:
      tags:
        - User
      security:
        - oauth:
            - 'c-pat:read'        
      summary: Update certain properties of a User
      operationId: updateUser
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/user_Update'
      responses:
        '200':
          description: User response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/user_Response'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
  
  '/users':
    get:
      tags:
        - User
      security:
        - oauth:
            - 'c-pat:op'        
      summary: Return all users for admin processing (assigning collections and permissions)
      operationId: getUsers
      responses:
        '200':
          description: User response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/current_user_Response'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
  
  '/user/{userId}':
    parameters:
      - in: path
        name: userId
        required: true
        schema:
          type: integer
    get:
      tags:
        - User
      security:
        - oauth:
            - 'c-pat:op'        
      summary: Return a User
      operationId: getUserByUserID
      responses:
        '200':
          description: User response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/user'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
    delete:
      tags:
        - User
      security:
        - oauth:
            - 'c-pat:op'        
      summary: Delete a User
      operationId: deleteUser
      responses:
        '200':
          description: User response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/user'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'

  '/user/name/{userName}':
    parameters:
      - in: path
        name: userName
        required: true
        schema:
          type: string
    get:
      tags:
        - User
      security:
        - oauth:
            - 'c-pat:op'        
      summary: Return a User by userName
      operationId: getUserByUserName
      responses:
        '200':
          description: User response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/user'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'

  '/user/basic/{userId}':
    parameters:
      - in: path
        name: userId
        required: true
        schema:
          type: integer
    get:
      tags:
        - User
      security:
        - oauth:
            - 'c-pat:read'        
      summary: Return basic user information by userId
      operationId: getBasicUserByUserID
      responses:
        '200':
          description: Basic user response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/basic_user'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
                
  '/user/loginState':
    put:
      tags:
        - User
      security:
        - oauth:
            - 'c-pat:read'        
      summary: Writes stdout log to indicate login or logout
      operationId: loginState
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/user_loginState'
      responses:
        '201':
          description: Login/Logout response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/user_Login_Response'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'

  '/vulnerability/poam/{vulnerabilityId}':
    parameters:
      - in: path
        name: vulnerabilityId
        required: true
        schema:
          type: string
    get:
      summary: Return POAMs by vulnerabilityId
      operationId: getPoamsByVulnerabilityId
      responses:
        '200':
          description: POAM array response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/poam_Object'
        '403':
          $ref: '#/components/responses/forbidden'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
      tags:
        - Vulnerability
      security:
        - oauth:
            - 'c-pat:read'

  '/vulnerability/existingPoams':
    get:
      summary: Return a list of vulnerabilities associated with existing POAMs
      operationId: getExistingVulnerabilityPoams
      responses:
        '200':
          description: Successful response with existing vulnerability POAMs
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    poamId:
                      type: integer
                    vulnerabilityId:
                      type: string
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
      tags:
        - Vulnerability
      security:
        - oauth:
            - 'c-pat:read'

  /op/configuration:
    get:
      summary: Return API version and classification
      operationId: getConfiguration
      responses:
        '200':
          description: Configuration response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiConfiguration'
      tags:
        - Operation
      security: []
    post:
      summary: Set a configuration item
      operationId: setConfigurationItem
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConfigurationItem'
      responses:
        '200':
          description: Configuration item updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessMessage'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
      tags:
        - Operation
      security:
        - oauth:
            - 'c-pat:op'    
    delete:
      summary: Delete a configuration item
      operationId: deleteConfigurationItem
      parameters:
        - name: key
          in: query
          required: true
          schema:
            $ref: '#/components/schemas/String255'
      responses:
        '200':
          description: Configuration item deleted successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessMessage'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
      tags:
        - Operation
      security:
        - oauth:
            - 'c-pat:op'

components:
  schemas:
    ApiClassification:
      type: string
      enum:
        - NONE
        - U
        - FOUO
        - CUI
        - C
        - S
        - TS
        - SCI
    ApiConfiguration:
      additionalProperties: false
      type: object
      properties:
        classification:
          $ref: '#/components/schemas/ApiClassification'
        commit:
          $ref: '#/components/schemas/CommitObject'
        version:
          $ref: '#/components/schemas/ApiVersion'
    ApiDefinition:
      oneOf:
        - type: object
        - type: array
    ApiVersion:
      $ref: '#/components/schemas/Version'
    ConfigurationItem:
      type: object
      required:
        - key
        - value
      properties:
        key:
          $ref: '#/components/schemas/String45'
        value:
          $ref: '#/components/schemas/String255'
    CommitBranch:
      type: string
    CommitDescribe:
      type: string
    CommitObject:
      type: object
      additionalProperties: false
      properties:
        branch:
          $ref: '#/components/schemas/CommitBranch'
        describe:
          $ref: '#/components/schemas/CommitDescribe'
        sha:
          $ref: '#/components/schemas/CommitSha'
        tag:
          $ref: '#/components/schemas/CommitTag'
    CommitSha:
      type: string
    CommitTag:
      type: string
    SuccessMessage:
      type: object
      properties:
        message:
          type: string
    String20:
      maxLength: 20
      type: string
    String20Nullable:
      maxLength: 20
      nullable: true
      type: string
    String255:
      maxLength: 255
      type: string
    String255Nullable:
      maxLength: 255
      nullable: true
      type: string
    String32767:
      maxLength: 32767
      type: string
    String32767Nullable:
      maxLength: 32767
      nullable: true
      type: string
    String45:
      maxLength: 45
      type: string
    String45Nullable:
      maxLength: 45
      nullable: true
      type: string
    String511:
      maxLength: 511
      type: string
    String511Nullable:
      maxLength: 511
      nullable: true
      type: string
    StringDate:
      format: date
      type: string
    StringDateNullable:
      format: date
      nullable: true
      type: string
    StringDateTime:
      format: date-time
      type: string
    StringDateTimeNullable:
      format: date-time
      nullable: true
      type: string
    StringHexColor:
      example: aa33cc
      pattern: ^[a-fA-F0-9]{6}$
      type: string
    StringIntId:
      maxLength: 10
      minLength: 1
      pattern: ^[0-9]{1,10}$
      type: string
    StringIntIdNullable:
      nullable: true
      pattern: ^[0-9]{1,10}$
      type: string
    StringIntIdReadOnly:
      pattern: ^[0-9]{1,10}$
      readOnly: true
      type: string
    StringMax:
      maxLength: 16777215
      type: string
    StringMaxNullable:
      maxLength: 16777215
      nullable: true
      type: string
    StringUuid:
      pattern: ^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$
      type: string
    StringUuidNullable:
      nullable: true
      pattern: ^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$
      type: string
    StringUuidReadOnly:
      pattern: ^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$
      readOnly: true
      type: string
    Version:
      description: |
        API version string
      pattern: ^\d+\.\d+\.\d+$
      type: string
    VersionString:
      $ref: '#/components/schemas/String255'
    STIGMANCollection:
      type: object
      properties:
        collectionId:
          type: string
        name:
          type: string
        description:
          type: string
          nullable: true
      required:
        - name
    STIGMANAsset:
      type: object
      properties:
        assetId:
          type: string
        name:
          type: string
    AssetResponse:
      type: object
      properties:
        asset:
          type: array
          items:
            $ref: '#/components/schemas/AssetObject'
    AssetObject:
      type: object
      required:
        - assetName
        - collectionId
      properties:
        assetId:
          type: integer
        assetName:
          type: string
        fullyQualifiedDomainName:
          type: string
          nullable: true
        collectionId:
          type: integer
        description:
          type: string
          nullable: true
        ipAddress:
          type: string
          nullable: true
        macAddress:
          type: string
          nullable: true
        nonComputing:
          type: integer
          nullable: true
        assetOrigin:
          type: string
          nullable: true

    assetLabel_Object:
      type: object
      required:
        - assetId
        - collectionId
        - labelId
      additionalProperties: true
      properties:
        assetId:
          type: integer
        collectionId:
          type: integer
        labelId:
          type: integer

    change_Workspace:
      required:
        - token
        - user
      type: object
      additionalProperties: false
      properties:
        token:
          type: string
        user:
          $ref: '#/components/schemas/user_Token'
          
    change_Workspace_Response:
      type: object
      additionalProperties: false
      properties:
        token:
          type: string          
          
    collection:
      type: object
      required:
        - collectionName
      additionalProperties: true
      properties:
        collectionId:
          type: integer
        collectionName:
          type: string
        description:
          type: string
          nullable: true
        created:
          type: string
          format: date   
        assetCount:
          type: integer
        poamCount:
          type: integer
        collectionOrigin:
          type: string
          nullable: true

    collectionNameAndId:
      type: object
      additionalProperties: false
      properties:
        collectionId:
          type: integer
        collectionName:
          type: string

    collectionField:
      type: object
      required:
        - approvalNotes
        - rejectionNotes
        - renewalNotes
      additionalProperties: false
      properties:
        approvalNotes:
          type: string
        rejectionNotes:
          type: string
        renewalNotes:
          type: string

    collectionLabelList:
      type: array
      items:
        $ref: '#/components/schemas/label'

    error:
      type: object
      properties:
        error:
          type: string
        detail:
          type: string          

    label_Object:
      type: object
      required:
        - labelName
        - collectionId
      additionalProperties: true
      properties:
        labelId:
          type: integer
        collectionId:
          type: integer
        labelName:
          type: string
        description:
          type: string

    label:
      type: object
      required:
        - name
        - description
        - color
        - labelID
      additionalProperties: false
      properties:
        name:
          type: string
          maxLength: 30
        description:
          type: string
          maxLength: 255
        color:
          type: string
        labelID:
          type: string

    labelCreate:
      type: object
      required:
        - name
        - description
        - color
      additionalProperties: false
      properties:
        name:
          type: string
          maxLength: 30
        description:
          type: string
          maxLength: 255
        color:
          type: string

    labelID:
      type: string
      maxLength: 36

    notification:
      type: object
      properties:
        notificationId:
          type: integer
        userId:
          type: integer
        title:
          type: string
        message:
          type: string
        timestamp:
          type: string
          format: date-time
        read:
          type: integer
      required:
        - notificationId
        - userId
        - title
        - message
        - timestamp
        - read

    poamApprover_Object:
      type: object
      required:
        - poamId
        - userId
        - approvalStatus
      additionalProperties: true
      properties:
        poamId:
          type: integer
        userId:
          type: integer
        approvalStatus:
          type: string
        approvedDate:
          type: string
          nullable: true
        comments:
          type: string
          nullable: true

    poamAssignee_Object:
      type: object
      required:
        - poamId
        - userId
      additionalProperties: true
      properties:
        poamId:
          type: integer
        userId:
          type: integer
        fullName:
          type: string
        poamStatus:
          type: string

    poamAssets_Object:
      type: object
      required:
        - poamId
        - assetId
      additionalProperties: true
      properties:
        poamId:
          type: integer
        assetId:
          type: integer

    poamExtensionObject:
      type: object
      required:
        - poamId
      additionalProperties: true
      properties:
        poamId:
          type: integer
        extensionTimeAllowed:
          type: integer
        extensionJustification:
          type: string

    poam_status_object:
      type: object
      required:
        - poamId
        - status
      additionalProperties: true
      properties:
        poamId:
          type: integer
        status:
          type: string
            
    poam_Object:
      type: object
      required:
        - poamId
        - collectionId
        - vulnerabilitySource
        - aaPackage
        - rawSeverity
        - submitterId
        - status
      additionalProperties: true
      properties:
        poamId:
          type: integer
        collectionId:
          type: integer
        vulnerabilitySource:
          type: string
        stigTitle:
          type: string
          nullable: true
        stigBenchmarkId:
          type: string
          nullable: true
        stigCheckData:
          type: string
          nullable: true
        iavmNumber:
          type: string
          nullable: true
        iavComplyByDate:
          type: string
          nullable: true
        aaPackage:
          type: string
        vulnerabilityId:
          type: string
          nullable: true
        description:
          type: string
        rawSeverity:
          type: string
        adjSeverity:
          type: string
          nullable: true
        scheduledCompletionDate:
          type: string
        closedDate:
          type: string
          nullable: true
        submitterId:
          type: integer
        mitigations:
          type: string
          nullable: true
        predisposingConditions:
          type: string
          nullable: true
        requiredResources:
          type: string
          nullable: true
        residualRisk:
          type: string
          nullable: true
        likelihood:
          type: string
          nullable: true
        relevanceOfThreat:
          type: string
          nullable: true
        businessImpactRating:
          type: string
          nullable: true
        businessImpactDescription:
          type: string
          nullable: true
        notes:
          type: string
          nullable: true
        status:
          type: string
        vulnIdRestricted:
          type: string
          nullable: true
        submittedDate:
          type: string
        approvers:
          type: array
          items:
            type: object
            properties:
              userId:
                type: integer
            additionalProperties: true
        assignees:
          type: array
          items:
            type: object
            properties:
              userId:
                type: integer
            additionalProperties: true
        assets:
          type: array
          items:
            type: object
            properties:
              assetId:
                type: integer
              assetName:
                type: string
            oneOf:
              - required: ['assetId']
              - required: ['assetName']
            additionalProperties: false

    poamLabel_Object:
      type: object
      required:
        - poamId
        - labelId
      additionalProperties: true
      properties:
        poamId:
          type: integer
        collectionId:
          type: integer
        labelId:
          type: integer

    poamLog_Object:
      type: object
      properties:
        Timestamp:
          type: string
          format: date-time
          description: The timestamp when the log entry was created.
        User:
          type: string
          description: The full name of the user who made the change.
        Action:
          type: string
          description: The action performed (e.g., "POAM Created", "POAM Updated").
      required:
        - Timestamp
        - User
        - Action
        
    PoamMilestonesResponse:
      type: object
      properties:
        poamMilestones:
          type: array
          items:
            $ref: '#/components/schemas/PoamMilestone'

    PoamMilestone:
      type: object
      properties:
        milestoneId:
          type: integer
        poamId:
          type: integer
        milestoneDate:
          type: string
          format: date
        milestoneComments:
          type: string
        milestoneStatus:
          type: string

    PoamMilestoneRequest:
      type: object
      additionalProperties: true
      properties:
        poamId:
          type: integer
        milestoneDate:
          type: string
        milestoneComments:
          type: string
        milestoneStatus:
          type: string

    PoamMilestoneUpdateRequest:
      type: object
      additionalProperties: true
      properties:
        milestoneDate:
          type: string
        milestoneComments:
          type: string
        milestoneStatus:
          type: string
      description: Schema for updating a milestone. All fields are optional, allowing partial updates.

    PoamExtensionMilestonesResponse:
      type: object
      properties:
        poamMilestones:
          type: array
          items:
            $ref: '#/components/schemas/PoamExtensionMilestone'

    PoamExtensionMilestone:
      type: object
      properties:
        milestoneId:
          type: integer
        poamId:
          type: integer
        milestoneDate:
          type: string
          format: date
        milestoneComments:
          type: string
        milestoneStatus:
          type: string

    PoamExtensionMilestoneRequest:
      type: object
      additionalProperties: true
      properties:
        poamId:
          type: integer
        milestoneDate:
          type: string
        milestoneComments:
          type: string
        milestoneStatus:
          type: string

    PoamExtensionMilestoneUpdateRequest:
      type: object
      additionalProperties: true
      properties:
        milestoneDate:
          type: string
        milestoneComments:
          type: string
        milestoneStatus:
          type: string
      description: Schema for updating a milestone. All fields are optional, allowing partial updates.

    assetLabel:
      type: object
      properties:
        label:
          type: string
        labelCount:
          type: integer

    stigmanPoamAssetUpdate:
      type: object
      properties:
        assetId:
          type: integer
        assetName:
          type: string
        poamId:
          type: integer

    poamStatus:
      type: object
      properties:
        status:
          type: string
        statusCount:
          type: integer

    poamLabel:
      type: object
      properties:
        label:
          type: string
        labelCount:
          type: integer

    poamSeverity:
      type: object
      properties:
        severity:
          type: string
        severityCount:
          type: integer

    poamScheduledCompletion:
      type: object
      properties:
        scheduledCompletion:
          type: string
        scheduledCompletionCount:
          type: integer

    collectionPoamCounts:
      type: object
      properties:
        collectionName:
          type: string
        poamCount:
          type: integer
          
    register:
      required:
        - email
        - userName
        - firstName
        - lastName
      type: object
      additionalProperties: true
      properties:
        email:
          type: string
        userName:
          type: string
        firstName:
          type: string
        lastName:
          type: string
        collectionAccessRequest:
          type: array
          items:
            type: object
            properties:
              collectionId:
                type: integer  

    register_Response:
      type: object
      additionalProperties: false
      properties:
        token:
          type: string 
          
    user:
      type: object
      required:
        - userId
        - userName
        - email
        - fullName
        - created
        - lastAccess
        - isAdmin
      additionalProperties: true
      properties:
        userId:
          type: integer
          readOnly: true
        username:
          type: string
          maxLength: 255
          readOnly: true
        email:
          type: string
          readOnly: true
        fullName:
          type: string
          maxLength: 255
          readOnly: true
        officeOrg:
          type: string
          maxLength: 100
          nullable: true
        lastClaims:
          type: object
          nullable: true
        isAdmin:
          type: integer
        created:
          type: string
          format: date
        lastAccess:
          type: string
          format: date

    basic_user:
      type: object
      required:
        - userId
        - email
        - fullName
      additionalProperties: true
      properties:
        userId:
          type: integer
          readOnly: true
        email:
          type: string
          readOnly: true
        firstName:
          type: string
          maxLength: 50
          readOnly: true
        lastName:
          type: string
          maxLength: 50
        fullName:
          type: string
          maxLength: 255
          readOnly: true
        officeOrg:
          type: string
          maxLength: 100
          nullable: true

    current_user_Response:
      type: object
      required:
        - userId
        - userName
        - email
        - firstName
        - lastName
        - created
        - lastAccess
        - lastCollectionAccessedId
        - accountStatus
        - fullName
        - defaultTheme
        - isAdmin
        - permissions
      additionalProperties: false
      properties:
        userId:
          type: integer
          readOnly: true
        userName:
          type: string
          maxLength: 20
          readOnly: true
        email:
          type: string
          maxLength: 100
          readOnly: true
        firstName:
          type: string
          maxLength: 50
          readOnly: true
        lastName:
          type: string
          maxLength: 50
        created:
          type: string
          format: date
        lastAccess:
          type: string
          format: date
        lastCollectionAccessedId:
          type: integer
        accountStatus:
          type: string
          maxLength: 45
        fullName:
          type: string
          maxLength: 225
        officeOrg:
          type: string
          maxLength: 100
          nullable: true
        defaultTheme:
          type: string
          maxLength: 20
        lastClaims:
          type: object
          nullable: true
        isAdmin:
          type: integer
        permissions:
          type: array
          items:
            type: object
            required:
              - userId
              - collectionId
              - accessLevel
            properties:
              userId:
                type: integer
              collectionId:
                type: integer
              accessLevel:
                type: integer

    user_Response:
      type: object
      required:
        - userId
        - userName
        - email
        - firstName
        - lastName
        - created
        - lastAccess
        - lastCollectionAccessedId
        - accountStatus
        - fullName
        - defaultTheme
        - isAdmin
      additionalProperties: false
      properties:
        userId:
          type: integer
          readOnly: true
        userName:
          type: string
          maxLength: 20
          readOnly: true
        email:
          type: string
          maxLength: 100
          readOnly: true
        firstName:
          type: string
          maxLength: 50
          readOnly: true
        lastName:
          type: string
          maxLength: 50
        created:
          type: string
          format: date
        lastAccess:
          type: string
          format: date
        lastCollectionAccessedId:
          type: integer
        accountStatus:
          type: string
          maxLength: 45
        fullName:
          type: string
          maxLength: 225
        officeOrg:
          type: string
          maxLength: 100
          nullable: true
        defaultTheme:
          type: string
          maxLength: 20
        lastClaims:
          type: object
          nullable: true
        isAdmin:
          type: integer

    user_Update:
      type: object
      required:
        - userId
        - email
        - firstName
        - lastName
        - accountStatus
        - lastCollectionAccessedId
        - defaultTheme
        - isAdmin
      additionalProperties: true
      properties:
        userId:
          type: integer
        email:
          type: string
        lastAccess:
          type: string
          nullable: true
        firstName:
          type: string
          maxLength: 50
        lastName:
          type: string
          maxLength: 50
        accountStatus:
          type: string
          maxLength: 45
        officeOrg:
          type: string
          maxLength: 100
          nullable: true
        lastCollectionAccessedId:
          type: integer
        defaultTheme:
          type: string
          maxLength: 20
        lastClaims:
          type: object
          nullable: true
        isAdmin:
          type: integer
          
    user_Login:
      required:
        - email
      type: object
      additionalProperties: false
      properties:
        email:
          type: string
          
    user_loginState:
      required:
        - loginState
      type: object
      additionalProperties: false
      properties:
        loginState:
          type: string           

    user_Login_Response:
      type: object
      additionalProperties: false
      properties:
        message:
          type: string          
          
    user_Token:
      required:
        - userId
        - userName
        - email
        - firstName
        - lastName
        - lastCollectionAccessedId
        - accountStatus
        - fullName
        - defaultTheme
      additionalProperties: false
      properties:
        userId:
          type: integer
        userName:
          type: string
          maxLength: 20
        email:
          type: string
        firstName:
          type: string
          maxLength: 50
        lastName:
          type: string
          maxLength: 50
        lastCollectionAccessedId:
          type: integer
        accountStatus:
          type: string
          maxLength: 45
        fullName:
          type: string
          maxLength: 225
        officeOrg:
          type: string
          maxLength: 100
          nullable: true
        defaultTheme:
          type: string
          maxLength: 20
          
    user_Permissions:
      type: object
      required:
        - userId
        - collectionId
        - accessLevel
      additionalProperties: true
      properties:
        userId:
          type: integer
        collectionId:
          type: integer
        accessLevel:
          type: integer
        firstName:
          type: string
        lastName:
          type: string
        fullName:
          type: string
        email:
          type: string

    update_user_Permissions:
      type: object
      required:
        - userId
        - oldCollectionId
        - newCollectionId
        - accessLevel
      additionalProperties: true
      properties:
        userId:
          type: integer
        oldCollectionId:
          type: integer
        newCollectionId:
          type: integer
        accessLevel:
          type: integer
        firstName:
          type: string
        lastName:
          type: string
        fullName:
          type: string
        email:
          type: string

    userCreateOrReplace:
      required:
        - userName
        - email
        - firstName
        - lastName
        - lastCollectionAccessedId
        - accountStatus
        - fullName
        - defaultTheme
      type: object
      additionalProperties: false
      properties:
        userName:
          type: string
        email:
          type: string
        firstName:
          type: string
        lastName:
          type: string
        lastCollectionAccessedId:
          type: integer
        accountStatus:
          type: string
        fullName:
          type: string
        officeOrg:
          type: string
          nullable: true
        defaultTheme:
          type: string

  responses:
    forbidden:
      description: The requesting User does not have access rights to the content
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/error'

  parameters:
    collectionQuery:
      name: projection
      in: query
      description: Additional properties to include in the response.
      style: form
      explode: true
      schema:
        type: array
        items:
          type: string
          enum:
            - submitters
            - statistics
            - labels

    collectionIdPath:
      name: collectionId
      in: path
      description: A path parameter that identifies a Collection
      required: true
      schema:
        type: string

    labelIdPath:
      name: labelId
      in: path
      required: true
      description: A path parameter that specifies a Label
      schema:
        $ref: '#/components/schemas/labelID'

    benchmarkIdQuery:
      name: benchmarkId
      in: query
      description: A query parameter that identifies a POAM
      schema:
        type: string
    assetIdQuery:
      name: assetId
      in: query
      description: A query parameter that identifies an Asset
      schema:
        type: string
    userIdPath:
      name: userId
      in: path
      description: A path parameter that identifies a User
      required: true
      schema:
        type: string
    collectionAuth:
      name: userName
      in: path
      required: true
      description: Returns collections belonging to a specif User
      schema:
        type: string    
                
  securitySchemes:
      oauth:
        type: openIdConnect
        openIdConnectUrl: https://localhost:8080/realms/RMFTools/.well-known/openid-configuration    

