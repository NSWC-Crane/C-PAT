{
  "id": "rmftools",
  "realm": "RMFTools",
  "displayName": "RMF Tools",
  "displayNameHtml": "RMF Tools Realm",
  "notBefore": 1592844870,
  "defaultSignatureAlgorithm": "RS256",
  "revokeRefreshToken": true,
  "refreshTokenMaxReuse": 0,
  "accessTokenLifespan": 300,
  "accessTokenLifespanForImplicitFlow": 1296000,
  "ssoSessionIdleTimeout": 1800,
  "ssoSessionMaxLifespan": 64800,
  "ssoSessionIdleTimeoutRememberMe": 0,
  "ssoSessionMaxLifespanRememberMe": 0,
  "offlineSessionIdleTimeout": 2592000,
  "offlineSessionMaxLifespanEnabled": false,
  "offlineSessionMaxLifespan": 5184000,
  "clientSessionIdleTimeout": 0,
  "clientSessionMaxLifespan": 0,
  "clientOfflineSessionIdleTimeout": 0,
  "clientOfflineSessionMaxLifespan": 0,
  "accessCodeLifespan": 60,
  "accessCodeLifespanUserAction": 300,
  "accessCodeLifespanLogin": 1800,
  "actionTokenGeneratedByAdminLifespan": 43200,
  "actionTokenGeneratedByUserLifespan": 300,
  "oauth2DeviceCodeLifespan": 600,
  "oauth2DevicePollingInterval": 5,
  "enabled": true,
  "sslRequired": "none",
  "registrationAllowed": true,
  "registrationEmailAsUsername": false,
  "rememberMe": false,
  "verifyEmail": false,
  "loginWithEmailAllowed": true,
  "duplicateEmailsAllowed": false,
  "resetPasswordAllowed": true,
  "editUsernameAllowed": true,
  "bruteForceProtected": false,
  "permanentLockout": false,
  "maxTemporaryLockouts": 0,
  "maxFailureWaitSeconds": 900,
  "minimumQuickLoginWaitSeconds": 60,
  "waitIncrementSeconds": 60,
  "quickLoginCheckMilliSeconds": 1000,
  "maxDeltaTimeSeconds": 43200,
  "failureFactor": 30,
  "roles": {
    "realm": [
      {
        "id": "06fd31ee-9069-433f-9ce4-f721bb6c1b9a",
        "name" : "user",
        "description": "User privileges",
        "composite": true,
        "composites": {
          "realm": [
            "offline_access"
          ],
          "client": {
            "realm-management": [
              "view-users"
            ]
          }
        },
        "clientRole": false,
        "containerId": "rmftools",
        "attributes": {}
      },
      {
        "id": "ce11ada3-03d7-4ea2-923d-3a6b94a92b74",
        "name" : "create_collection",
        "description": "Privilege granting permission to create Collections",
        "composite": false,
        "clientRole": false,
        "containerId": "rmftools",
        "attributes": {}
      },
      {
        "id": "2847f125-161a-408b-a1b4-ace9bc583024",
        "name" : "default-roles-rmftools",
        "description": "${role_default-roles}",
        "composite": true,
        "composites": {
          "realm": [
            "create_collection",
            "user"
          ],
          "client": {
            "realm-management": [
              "view-users"
            ],
            "account": [
              "view-profile",
              "manage-account"
            ]
          }
        },
        "clientRole": false,
        "containerId": "rmftools",
        "attributes": {}
      },
      {
        "id": "549a4a12-b688-45ca-8ec7-e6ac91b1fac2",
        "name" : "admin",
        "description": "Administrator privileges",
        "composite": false,
        "clientRole": false,
        "containerId": "rmftools",
        "attributes": {}
      },
      {
        "id": "70c9f9fd-75b2-4bd7-bb8c-29c25ab95327",
        "name" : "offline_access",
        "description": "${role_offline-access}",
        "composite": false,
        "clientRole": false,
        "containerId": "rmftools",
        "attributes": {}
      },
      {
        "id": "467f7b50-9890-439c-b3ea-130b9e5b31b2",
        "name" : "global_access",
        "description": "Privilege granting manage access to all Collections",
        "composite": false,
        "clientRole": false,
        "containerId": "rmftools",
        "attributes": {}
      },
      {
        "id": "d83db95b-7845-4b7c-879a-2738916a217a",
        "name" : "unassigned-scope",
        "composite": false,
        "clientRole": false,
        "containerId": "rmftools",
        "attributes": {}
      },
      {
        "id": "65a0ee07-cc7d-49d9-ad02-4c0db29564f3",
        "name" : "uma_authorization",
        "description": "${role_uma_authorization}",
        "composite": false,
        "clientRole": false,
        "containerId": "rmftools",
        "attributes": {}
      }
    ],
    "client" : {
      "cmsat-spa" : [ ],
      "realm-management" : [ {
        "id" : "5999cdb3-a3c8-45fb-ab78-488c827e64df",
        "name" : "view-realm",
        "description" : "${role_view-realm}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "2b7c931f-e732-4a23-8eb8-3ec42568a807",
        "attributes" : { }
      }, {
        "id" : "1021b7e2-d702-4904-95a5-e15752594386",
        "name" : "view-clients",
        "description" : "${role_view-clients}",
        "composite" : true,
        "composites" : {
          "client" : {
            "realm-management" : [ "query-clients" ]
          }
        },
        "clientRole" : true,
        "containerId" : "2b7c931f-e732-4a23-8eb8-3ec42568a807",
        "attributes" : { }
      }, {
        "id" : "c80bcbda-f2c2-4fdd-a3d9-a4d40a21c9b3",
        "name" : "create-client",
        "description" : "${role_create-client}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "2b7c931f-e732-4a23-8eb8-3ec42568a807",
        "attributes" : { }
      }, {
        "id" : "478012ef-e7f4-4307-93ff-4879dfa63377",
        "name" : "view-users",
        "description" : "${role_view-users}",
        "composite" : true,
        "composites" : {
          "client" : {
            "realm-management" : [ "query-groups", "query-users" ]
          }
        },
        "clientRole" : true,
        "containerId" : "2b7c931f-e732-4a23-8eb8-3ec42568a807",
        "attributes" : { }
      }, {
        "id" : "63639c21-b425-4d5a-89f9-7dd8fc9ce0ad",
        "name" : "manage-realm",
        "description" : "${role_manage-realm}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "2b7c931f-e732-4a23-8eb8-3ec42568a807",
        "attributes" : { }
      }, {
        "id" : "e79490c7-7153-4154-b314-de9d88baf3ea",
        "name" : "view-events",
        "description" : "${role_view-events}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "2b7c931f-e732-4a23-8eb8-3ec42568a807",
        "attributes" : { }
      }, {
        "id" : "3a192ba3-7108-4f6f-800d-d19dafabe488",
        "name" : "manage-clients",
        "description" : "${role_manage-clients}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "2b7c931f-e732-4a23-8eb8-3ec42568a807",
        "attributes" : { }
      }, {
        "id" : "021fdae7-3fa6-4c4f-8b1f-eaae2d833bea",
        "name" : "query-groups",
        "description" : "${role_query-groups}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "2b7c931f-e732-4a23-8eb8-3ec42568a807",
        "attributes" : { }
      }, {
        "id" : "afbddfa1-6d27-4044-ad2a-dec0da34e420",
        "name" : "query-users",
        "description" : "${role_query-users}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "2b7c931f-e732-4a23-8eb8-3ec42568a807",
        "attributes" : { }
      }, {
        "id" : "9ecaeea3-0334-403d-bb87-f2f5e138d59c",
        "name" : "manage-authorization",
        "description" : "${role_manage-authorization}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "2b7c931f-e732-4a23-8eb8-3ec42568a807",
        "attributes" : { }
      }, {
        "id" : "0e372897-6956-48bf-84a8-d4fb5a4c655c",
        "name" : "manage-identity-providers",
        "description" : "${role_manage-identity-providers}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "2b7c931f-e732-4a23-8eb8-3ec42568a807",
        "attributes" : { }
      }, {
        "id" : "b915f9e7-26e2-4f31-a838-3953a1b58e0c",
        "name" : "realm-admin",
        "description" : "${role_realm-admin}",
        "composite" : true,
        "composites" : {
          "client" : {
            "realm-management" : [ "view-realm", "view-clients", "view-users", "create-client", "manage-realm", "view-events", "query-groups", "manage-clients", "query-users", "manage-authorization", "manage-identity-providers", "manage-users", "query-realms", "manage-events", "impersonation", "view-identity-providers", "query-clients", "view-authorization" ]
          }
        },
        "clientRole" : true,
        "containerId" : "2b7c931f-e732-4a23-8eb8-3ec42568a807",
        "attributes" : { }
      }, {
        "id" : "1b2885ad-c0c9-4596-933a-10d974772bef",
        "name" : "manage-users",
        "description" : "${role_manage-users}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "2b7c931f-e732-4a23-8eb8-3ec42568a807",
        "attributes" : { }
      }, {
        "id" : "e1a6cea6-1fd1-45e2-9745-74c2077c8fc7",
        "name" : "query-realms",
        "description" : "${role_query-realms}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "2b7c931f-e732-4a23-8eb8-3ec42568a807",
        "attributes" : { }
      }, {
        "id" : "fa5c8452-0371-4fcc-9eb7-5528dfb12044",
        "name" : "manage-events",
        "description" : "${role_manage-events}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "2b7c931f-e732-4a23-8eb8-3ec42568a807",
        "attributes" : { }
      }, {
        "id" : "e429350e-b73d-4f91-9eeb-403f440d0583",
        "name" : "impersonation",
        "description" : "${role_impersonation}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "2b7c931f-e732-4a23-8eb8-3ec42568a807",
        "attributes" : { }
      }, {
        "id" : "ebd9871a-6401-4626-a0e5-7b9fb65c1164",
        "name" : "query-clients",
        "description" : "${role_query-clients}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "2b7c931f-e732-4a23-8eb8-3ec42568a807",
        "attributes" : { }
      }, {
        "id" : "6b37c6a9-c897-46e6-a6cb-9c0f11e916f1",
        "name" : "view-identity-providers",
        "description" : "${role_view-identity-providers}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "2b7c931f-e732-4a23-8eb8-3ec42568a807",
        "attributes" : { }
      }, {
        "id" : "3110555f-d88e-4bde-a1aa-afd854168d73",
        "name" : "view-authorization",
        "description" : "${role_view-authorization}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "2b7c931f-e732-4a23-8eb8-3ec42568a807",
        "attributes" : { }
      } ],
      "security-admin-console": [],
      "admin-cli": [],
      "account-console": [],
      "stig-manager": [],
      "broker": [
        {
          "id": "1c07f535-445c-42c5-adbf-41f59b2fb1bb",
          "name" : "read-token",
          "description": "${role_read-token}",
          "composite": false,
          "clientRole": true,
          "containerId": "80655c85-3360-44c1-a7fb-6c8507143a63",
          "attributes": {}
        }
      ],
      "account": [
        {
          "id": "2f98f0ec-bc2b-4cb2-93b3-a1c8af64c4bd",
          "name" : "view-applications",
          "description": "${role_view-applications}",
          "composite": false,
          "clientRole": true,
          "containerId": "af275fcf-65a1-44bc-90af-bd18c2a35b9d",
          "attributes": {}
        },
        {
          "id": "f45c6afe-3ca7-436f-990b-3f1874d38fd5",
          "name" : "manage-consent",
          "description": "${role_manage-consent}",
          "composite": true,
          "composites": {
            "client": {
              "account": [
                "view-consent"
              ]
            }
          },
          "clientRole": true,
          "containerId": "af275fcf-65a1-44bc-90af-bd18c2a35b9d",
          "attributes": {}
        },
        {
          "id": "433cf726-d185-4325-a584-c5f68a0479dd",
          "name" : "view-groups",
          "description": "${role_view-groups}",
          "composite": false,
          "clientRole": true,
          "containerId": "af275fcf-65a1-44bc-90af-bd18c2a35b9d",
          "attributes": {}
        },
        {
          "id": "dab01211-7d32-4abc-99bd-0f486bae06d5",
          "name" : "view-profile",
          "description": "${role_view-profile}",
          "composite": false,
          "clientRole": true,
          "containerId": "af275fcf-65a1-44bc-90af-bd18c2a35b9d",
          "attributes": {}
        },
        {
          "id": "b7c98f9f-dbc1-4ca7-a743-8851494268b2",
          "name" : "manage-account-links",
          "description": "${role_manage-account-links}",
          "composite": false,
          "clientRole": true,
          "containerId": "af275fcf-65a1-44bc-90af-bd18c2a35b9d",
          "attributes": {}
        },
        {
          "id": "0df2d353-7607-46f4-8726-7f5436b60b31",
          "name" : "delete-account",
          "description": "${role_delete-account}",
          "composite": false,
          "clientRole": true,
          "containerId": "af275fcf-65a1-44bc-90af-bd18c2a35b9d",
          "attributes": {}
        },
        {
          "id": "ed26f565-9361-4f29-94d1-f8d8eb671e25",
          "name" : "manage-account",
          "description": "${role_manage-account}",
          "composite": true,
          "composites": {
            "client": {
              "account": [
                "manage-account-links"
              ]
            }
          },
          "clientRole": true,
          "containerId": "af275fcf-65a1-44bc-90af-bd18c2a35b9d",
          "attributes": {}
        },
        {
          "id": "834a06d3-35f7-43cc-9d4a-f1db38d446b3",
          "name" : "view-consent",
          "description": "${role_view-consent}",
          "composite": false,
          "clientRole": true,
          "containerId": "af275fcf-65a1-44bc-90af-bd18c2a35b9d",
          "attributes": {}
        }
      ],
      "stigman-watcher": []
    }
  },
  "groups": [
    {
      "id": "c6d1b814-cc3a-44c4-aaff-0f02e05250a9",
      "name" : "group01",
      "path": "/group01",
      "subGroups": [],
      "attributes": {},
      "realmRoles": [],
      "clientRoles": {}
    },
    {
      "id": "8c100240-5e0d-40a9-9c6b-cc5244d4fd94",
      "name" : "group02",
      "path": "/group02",
      "subGroups": [],
      "attributes": {},
      "realmRoles": [],
      "clientRoles": {}
    },
    {
      "id": "822a88fe-bb37-4b9b-b712-3fa7f07eb444",
      "name" : "group03",
      "path": "/group03",
      "subGroups": [],
      "attributes": {},
      "realmRoles": [],
      "clientRoles": {}
    }
  ],
  "defaultRole": {
    "id": "2847f125-161a-408b-a1b4-ace9bc583024",
    "name" : "default-roles-rmftools",
    "description": "${role_default-roles}",
    "composite": true,
    "clientRole": false,
    "containerId": "rmftools"
  },
  "requiredCredentials": [
    "password"
  ],
  "otpPolicyType": "totp",
  "otpPolicyAlgorithm": "HmacSHA1",
  "otpPolicyInitialCounter": 0,
  "otpPolicyDigits": 6,
  "otpPolicyLookAheadWindow": 1,
  "otpPolicyPeriod": 30,
  "otpPolicyCodeReusable": false,
  "otpSupportedApplications": [
    "totpAppFreeOTPName",
    "totpAppGoogleName",
    "totpAppMicrosoftAuthenticatorName"
  ],
  "localizationTexts": {},
  "webAuthnPolicyRpEntityName": "keycloak",
  "webAuthnPolicySignatureAlgorithms": [
    "ES256"
  ],
  "webAuthnPolicyRpId": "",
  "webAuthnPolicyAttestationConveyancePreference": "not specified",
  "webAuthnPolicyAuthenticatorAttachment": "not specified",
  "webAuthnPolicyRequireResidentKey": "not specified",
  "webAuthnPolicyUserVerificationRequirement": "not specified",
  "webAuthnPolicyCreateTimeout": 0,
  "webAuthnPolicyAvoidSameAuthenticatorRegister": false,
  "webAuthnPolicyAcceptableAaguids": [],
  "webAuthnPolicyExtraOrigins": [],
  "webAuthnPolicyPasswordlessRpEntityName": "keycloak",
  "webAuthnPolicyPasswordlessSignatureAlgorithms": [
    "ES256"
  ],
  "webAuthnPolicyPasswordlessRpId": "",
  "webAuthnPolicyPasswordlessAttestationConveyancePreference": "not specified",
  "webAuthnPolicyPasswordlessAuthenticatorAttachment": "not specified",
  "webAuthnPolicyPasswordlessRequireResidentKey": "not specified",
  "webAuthnPolicyPasswordlessUserVerificationRequirement": "not specified",
  "webAuthnPolicyPasswordlessCreateTimeout": 0,
  "webAuthnPolicyPasswordlessAvoidSameAuthenticatorRegister": false,
  "webAuthnPolicyPasswordlessAcceptableAaguids": [],
  "webAuthnPolicyPasswordlessExtraOrigins": [],
  "users" : [ {
    "id" : "bf87a16f-39e6-46d9-8971-f0ef51dd3f85",
    "username" : "admin",
    "enabled" : true,
    "totp" : false,
    "emailVerified" : false,
    "firstName" : "Admin",
    "lastName" : "Burke",
    "email" : "admin@admin.com",
    "credentials" : [ {
      "id" : "da2745cf-fdd1-4efd-a866-6a32d9cc081c",
      "type" : "password",
      "createdDate" : 1584023345650,
      "secretData" : "{\"value\":\"51P3rdc9zqE5cacmKYd/rOwUAXlPrpB+o4VvRz57+dA=\",\"salt\":\"glS4+OLFBDbcVrFxXRxhow==\",\"additionalParameters\":{}}",
      "credentialData" : "{\"hashIterations\":27500,\"algorithm\":\"pbkdf2-sha256\",\"additionalParameters\":{}}"
    } ],
    "disableableCredentialTypes" : [ ],
    "requiredActions" : [ ],
    "realmRoles" : [ "user", "create_collection", "admin" ],
    "notBefore" : 0,
    "groups" : [ "/group01", "/group02", "/group03" ]
  }, {
    "id" : "93bdf280-3e2c-4025-8ebc-efdbfbbddead",
    "createdTimestamp" : 1602029221544,
    "username" : "service-account-stigman-watcher",
    "enabled" : true,
    "totp" : false,
    "emailVerified" : false,
    "serviceAccountClientId" : "stigman-watcher",
    "credentials" : [ ],
    "disableableCredentialTypes" : [ ],
    "requiredActions" : [ ],
    "clientRoles" : {
      "realm-management" : [ "view-users" ],
      "account" : [ "view-profile", "manage-account" ]
    },
    "notBefore" : 0,
    "groups" : [ ]
  }, {
    "id" : "b7c78a62-b84f-4578-a983-2ebc66fd9efe",
    "createdTimestamp" : 1625244410594,
    "username" : "stigmanadmin",
    "enabled" : true,
    "totp" : false,
    "emailVerified" : true,
    "firstName" : "STIGMAN",
    "lastName" : "Admin",
    "email" : "stigmanadmin@admin.com",
    "credentials" : [ {
      "id" : "0515b257-c755-4dc0-bc5d-ef6e25da04fc",
      "type" : "password",
      "createdDate" : 1625244424320,
      "secretData" : "{\"value\":\"eludQOJHGsShBlzhXrt2tstRMbSsatv9jndcs9/v3+sKFxc0mtfJXptk02q+IhPKL6ONMFyfQs/nWt0K+fGQmw==\",\"salt\":\"IL9p6skcDpjNBsSBT5JDpg==\",\"additionalParameters\":{}}",
      "credentialData" : "{\"hashIterations\":27500,\"algorithm\":\"pbkdf2-sha256\",\"additionalParameters\":{}}"
    } ],
    "disableableCredentialTypes" : [ ],
    "requiredActions" : [ ],
    "realmRoles" : [ "user", "create_collection", "admin" ],
    "notBefore" : 0,
    "groups" : [ ]
  }, {
    "id" : "76da8a88-fb48-4477-a920-d88a6b8747fa",
    "createdTimestamp" : 1592844679893,
    "username" : "user01",
    "enabled" : true,
    "totp" : false,
    "emailVerified" : true,
    "firstName" : "Marley",
    "lastName" : "Atkinson",
    "email" : "user01@noemail",
    "credentials" : [ {
      "id" : "b19685df-8b2a-4881-b86e-f6273183bd09",
      "type" : "password",
      "createdDate" : 1592844693537,
      "secretData" : "{\"value\":\"kA0lJogOcL2D2uSXEjkGdfOHJMGoYY4MzLW+ZrjJgbsci9xARWNfXgZajBGcKQmSDLH90m58Nn0bMpQOp75yRg==\",\"salt\":\"oQz97hf0Vm4O6+mObgEh/w==\"}",
      "credentialData" : "{\"hashIterations\":27500,\"algorithm\":\"pbkdf2-sha256\"}"
    } ],
    "disableableCredentialTypes" : [ ],
    "requiredActions" : [ ],
    "realmRoles" : [ "user" ],
    "clientRoles" : {
      "account" : [ "view-profile", "manage-account" ]
    },
    "notBefore" : 0,
    "groups" : [ "/group01" ]
  }, {
    "id" : "c4c86a44-430f-4b88-a4ca-c902ce724dd8",
    "createdTimestamp" : 1592844730761,
    "username" : "user02",
    "enabled" : true,
    "totp" : false,
    "emailVerified" : true,
    "firstName" : "Justice",
    "lastName" : "Moore",
    "email" : "user02@no.email",
    "credentials" : [ {
      "id" : "6b855b02-6764-42de-8aa2-e06b25ec58b9",
      "type" : "password",
      "createdDate" : 1592844744242,
      "secretData" : "{\"value\":\"kpNGdfcQJMgWBHhEI4ev9cxS2zSgSFtEG/7BwPELUsHuxP1YmuZbXegXXifbJ+8mdAxraJlXMlXMpcmNP7WB7A==\",\"salt\":\"RfQP7rlxLwtZ4Dcovz2psg==\"}",
      "credentialData" : "{\"hashIterations\":27500,\"algorithm\":\"pbkdf2-sha256\"}"
    } ],
    "disableableCredentialTypes" : [ ],
    "requiredActions" : [ ],
    "realmRoles" : [ "user" ],
    "clientRoles" : {
      "account" : [ "view-profile", "manage-account" ]
    },
    "notBefore" : 0,
    "groups" : [ "/group02" ]
  }, {
    "id" : "9e2d33e0-b0fa-4213-8790-0d11e249f996",
    "createdTimestamp" : 1592844764866,
    "username" : "user03",
    "enabled" : true,
    "totp" : false,
    "emailVerified" : true,
    "firstName" : "Rory",
    "lastName" : "Marshall",
    "email" : "user03@no.email",
    "credentials" : [ {
      "id" : "89751e8c-7545-47b4-abdb-eb77c9e9b6ae",
      "type" : "password",
      "createdDate" : 1592844776399,
      "secretData" : "{\"value\":\"uczTxg7DHj3LuP3Iy/jbZNBHC8iavkf5BEhn5944b1d/eekwXbpoRbm7/ifpqhEkm0ghxN9YBomAbL1jsXSk7Q==\",\"salt\":\"NxQIOBKdWBeCr6ABxxBBFQ==\"}",
      "credentialData" : "{\"hashIterations\":27500,\"algorithm\":\"pbkdf2-sha256\"}"
    } ],
    "disableableCredentialTypes" : [ ],
    "requiredActions" : [ ],
    "realmRoles" : [ "user" ],
    "clientRoles" : {
      "account" : [ "view-profile", "manage-account" ]
    },
    "notBefore" : 0,
    "groups" : [ "/group03" ]
  }, {
    "id" : "918c935a-0f9b-4aab-909e-3eb995ae269d",
    "createdTimestamp" : 1592844794188,
    "username" : "user04",
    "enabled" : true,
    "totp" : false,
    "emailVerified" : true,
    "firstName" : "Raylee",
    "lastName" : "Atkinson",
    "email" : "user04@no.email",
    "credentials" : [ {
      "id" : "9d0b7703-2000-46cf-9f47-5e92eea2ec8d",
      "type" : "password",
      "createdDate" : 1592844810265,
      "secretData" : "{\"value\":\"v5QZOerRbWUxCoYWNnqYV2BBNVZpAzeWp0yI51FccADeH+6TVajFBo4cP7PD5o47H6qTaECxIHcSlbgiQ+Epiw==\",\"salt\":\"hbRFILB/gYLRAD0Bq1sQ5A==\"}",
      "credentialData" : "{\"hashIterations\":27500,\"algorithm\":\"pbkdf2-sha256\"}"
    } ],
    "disableableCredentialTypes" : [ ],
    "requiredActions" : [ ],
    "realmRoles" : [ "user", "create_collection" ],
    "clientRoles" : {
      "realm-management" : [ "view-realm", "view-clients" ],
      "account" : [ "view-profile", "manage-account" ]
    },
    "notBefore" : 1602129387,
    "groups" : [ ]
  }, {
    "id" : "5ee8bd66-5acf-4d9a-b538-9d2b2d44cddb",
    "createdTimestamp" : 1592844834017,
    "username" : "user05",
    "enabled" : true,
    "totp" : false,
    "emailVerified" : true,
    "firstName" : "05",
    "lastName" : "User",
    "email" : "user05@no.email",
    "credentials" : [ {
      "id" : "a7faeb68-02b1-4ec7-b97f-cf6eac830771",
      "type" : "password",
      "createdDate" : 1592844844968,
      "secretData" : "{\"value\":\"5gKHbszzd4hsH0Ut9y2jVynI/fe0XFV9Gnhb4L4+xW98vaY6UFKprVD8W4/vBojUknKz6q8VfqfrVhmKbyc/Zg==\",\"salt\":\"ocM9BimRrdvDGh9MhrqDhA==\"}",
      "credentialData" : "{\"hashIterations\":27500,\"algorithm\":\"pbkdf2-sha256\"}"
    } ],
    "disableableCredentialTypes" : [ ],
    "requiredActions" : [ ],
    "clientRoles" : {
      "account" : [ "view-profile", "manage-account" ]
    },
    "notBefore" : 1625243718,
    "groups" : [ ]
  } ],
  "scopeMappings": [
    {
      "clientScope": "stig-manager:collection",
      "roles": [
        "user"
      ]
    },
    {
      "clientScope": "c-pat:op",
      "roles": [
        "admin"
      ]
    },
    {
      "clientScope": "stig-manager",
      "roles": [
        "admin"
      ]
    },
    {
      "clientScope": "stig-manager:collection:read",
      "roles": [
        "user"
      ]
    },
    {
      "clientScope": "offline_access",
      "roles": [
        "admin",
        "user"
      ]
    },
    {
      "clientScope": "stig-manager:stig",
      "roles": [
        "admin"
      ]
    },
    {
      "clientScope": "c-pat:read",
      "roles": [
        "user"
      ]
    },
    {
      "clientScope": "stig-manager:stig:read",
      "roles": [
        "user"
      ]
    },
    {
      "clientScope": "stig-manager:user:read",
      "roles": [
        "user"
      ]
    },
    {
      "clientScope": "stig-manager:op",
      "roles": [
        "admin"
      ]
    },
    {
      "clientScope": "stig-manager:op:read",
      "roles": [
        "user"
      ]
    },
    {
      "clientScope": "stig-manager:user",
      "roles": [
        "admin"
      ]
    }
  ],
  "clientScopeMappings": {
    "account": [
      {
        "client": "account-console",
        "roles": [
          "manage-account",
          "view-groups"
        ]
      }
    ]
  },
  "clients": [
    {
      "id": "af275fcf-65a1-44bc-90af-bd18c2a35b9d",
      "clientId": "account",
      "name" : "${client_account}",
      "rootUrl": "${authBaseUrl}",
      "baseUrl": "/realms/stigman/account/",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType" : "client-secret",
      "secret" : "70cc36d6-b1b2-4742-a049-714b4ad0ca2a",
      "redirectUris": [
        "/realms/stigman/account/*"
      ],
      "webOrigins": [],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": false,
      "serviceAccountsEnabled": false,
      "publicClient": false,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {
        "post.logout.redirect.uris": "+"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": false,
      "nodeReRegistrationTimeout": 0,
      "defaultClientScopes": [
        "web-origins",
        "roles"
      ],
      "optionalClientScopes": [
        "microprofile-jwt"
      ]
    },
    {
      "id": "37348079-9f51-4b94-88ad-6aa759e3bd1c",
      "clientId": "account-console",
      "name" : "${client_account-console}",
      "rootUrl": "${authBaseUrl}",
      "baseUrl": "/realms/stigman/account/",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType" : "client-secret",
      "secret" : "796ebeb5-2f83-40a9-8390-3146e7cb269e",
      "redirectUris": [
        "/realms/stigman/account/*"
      ],
      "webOrigins": [],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": false,
      "serviceAccountsEnabled": false,
      "publicClient": true,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {
        "post.logout.redirect.uris": "+",
        "pkce.code.challenge.method": "S256"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": false,
      "nodeReRegistrationTimeout": 0,
      "protocolMappers": [
        {
          "id": "83363d45-7dce-49d8-b831-858bce2b1044",
          "name" : "audience resolve",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-audience-resolve-mapper",
          "consentRequired": false,
          "config": {}
        }
      ],
      "defaultClientScopes": [
        "roles"
      ],
      "optionalClientScopes": []
    },
    {
      "id": "2e2c0522-9de3-495a-bd30-9a692a79b390",
      "clientId": "admin-cli",
      "name" : "${client_admin-cli}",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType" : "client-secret",
      "secret" : "9c242f67-7ef8-4cd0-a29c-4414165d66b6",
      "redirectUris": [],
      "webOrigins": [],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": false,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": true,
      "serviceAccountsEnabled": false,
      "publicClient": true,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {
        "post.logout.redirect.uris": "+"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": false,
      "nodeReRegistrationTimeout": 0,
      "defaultClientScopes": [
        "web-origins",
        "roles"
      ],
      "optionalClientScopes": [
        "microprofile-jwt"
      ]
    },
    {
      "id": "80655c85-3360-44c1-a7fb-6c8507143a63",
      "clientId": "broker",
      "name" : "${client_broker}",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType" : "client-secret",
      "secret" : "3b94a954-bede-4dd8-9ea6-ae57f03c8c51",
      "redirectUris": [],
      "webOrigins": [],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": false,
      "serviceAccountsEnabled": false,
      "publicClient": false,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {
        "post.logout.redirect.uris": "+"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": false,
      "nodeReRegistrationTimeout": 0,
      "defaultClientScopes": [
        "web-origins",
        "roles"
      ],
      "optionalClientScopes": [
        "microprofile-jwt"
      ]
    },
    {
      "id": "38a26d59-c168-4353-97f7-0ec2dc3a701f",
      "clientId": "c-pat",
      "name" : "C-PAT Client",
      "description": "C-PAT Client",
      "rootUrl": "",
      "adminUrl": "",
      "baseUrl": "",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "redirectUris": [
        "http://*",
        "https://*"
      ],
      "webOrigins": [
        "*"
      ],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": true,
      "directAccessGrantsEnabled": true,
      "serviceAccountsEnabled": false,
      "publicClient": true,
      "frontchannelLogout": true,
      "protocol": "openid-connect",
      "attributes": {
        "post.logout.redirect.uris": "+",
        "oauth2.device.authorization.grant.enabled": "true",
        "backchannel.logout.revoke.offline.tokens": "false",
        "use.refresh.tokens": "true",
        "oidc.ciba.grant.enabled": "false",
        "client.use.lightweight.access.token.enabled": "false",
        "backchannel.logout.session.required": "true",
        "client_credentials.use_refresh_token": "false",
        "tls.client.certificate.bound.access.tokens": "false",
        "require.pushed.authorization.requests": "false",
        "acr.loa.map": "{}",
        "display.on.consent.screen": "false",
        "token.response.type.bearer.lower-case": "false"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": true,
      "nodeReRegistrationTimeout": -1,
      "defaultClientScopes": [
        "web-origins",
        "profile",
        "roles"
      ],
      "optionalClientScopes": [
        "c-pat:read",
        "offline_access",
        "c-pat:op"
      ]
    },
    {
      "id": "45f60ddc-d74f-457c-9bb1-4f8c67239d60",
      "clientId": "cmsat-spa",
      "name" : "CMSAT client",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType" : "client-secret",
      "secret" : "3b12d90d-e996-4068-bc1e-6548a5e8ca49",
      "redirectUris": [
        "http://*",
        "https://*"
      ],
      "webOrigins": [
        "*"
      ],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": true,
      "directAccessGrantsEnabled": true,
      "serviceAccountsEnabled": false,
      "publicClient": true,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {
        "saml.assertion.signature": "false",
        "saml.force.post.binding": "false",
        "saml.multivalued.roles": "false",
        "saml.encrypt": "false",
        "post.logout.redirect.uris": "+",
        "backchannel.logout.revoke.offline.tokens": "false",
        "saml.server.signature": "false",
        "saml.server.signature.keyinfo.ext": "false",
        "exclude.session.state.from.auth.response": "false",
        "backchannel.logout.session.required": "true",
        "client_credentials.use_refresh_token": "false",
        "saml_force_name_id_format": "false",
        "saml.client.signature": "false",
        "tls.client.certificate.bound.access.tokens": "false",
        "saml.authnstatement": "false",
        "display.on.consent.screen": "false",
        "saml.onetimeuse.condition": "false"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": true,
      "nodeReRegistrationTimeout": -1,
      "defaultClientScopes": [
        "profile",
        "roles"
      ],
      "optionalClientScopes": [
        "stig-manager:stig:read",
        "stig-manager:user:read",
        "stig-manager:collection",
        "cmsat:solutions:read"
      ]
    },
    {
      "id": "rmftools",
      "clientId": "realm-management",
      "name" : "${client_realm-management}",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType" : "client-secret",
      "secret" : "0dae8fbb-d487-4664-9990-11067b424d60",
      "redirectUris": [
        "*"
      ],
      "webOrigins": [],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": true,
      "directAccessGrantsEnabled": true,
      "serviceAccountsEnabled": false,
      "publicClient": true,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {
        "saml.assertion.signature": "false",
        "saml.force.post.binding": "false",
        "saml.multivalued.roles": "false",
        "saml.encrypt": "false",
        "post.logout.redirect.uris": "+",
        "saml.server.signature": "false",
        "saml.server.signature.keyinfo.ext": "false",
        "exclude.session.state.from.auth.response": "false",
        "saml_force_name_id_format": "false",
        "saml.client.signature": "false",
        "tls.client.certificate.bound.access.tokens": "false",
        "saml.authnstatement": "false",
        "display.on.consent.screen": "false",
        "saml.onetimeuse.condition": "false"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": false,
      "nodeReRegistrationTimeout": 0,
      "defaultClientScopes": [
        "profile",
        "roles"
      ],
      "optionalClientScopes": []
    },
    {
      "id": "8238782f-691f-4561-b68e-3c9ca7f3f998",
      "clientId": "security-admin-console",
      "name" : "${client_security-admin-console}",
      "rootUrl": "${authAdminUrl}",
      "baseUrl": "/admin/stigman/console/",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType" : "client-secret",
      "secret" : "92e25578-8420-4d9b-bdf4-aa597a88e4c3",
      "redirectUris": [
        "/admin/stigman/console/*"
      ],
      "webOrigins": [
        "+"
      ],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": false,
      "serviceAccountsEnabled": false,
      "publicClient": true,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {
        "post.logout.redirect.uris": "+",
        "pkce.code.challenge.method": "S256"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": false,
      "nodeReRegistrationTimeout": 0,
      "protocolMappers": [
        {
          "id": "26e5c2dc-d238-4279-8bf0-dddadfc23561",
          "name" : "locale",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "locale",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "locale",
            "jsonType.label": "String"
          }
        }
      ],
      "defaultClientScopes": [
        "web-origins",
        "roles"
      ],
      "optionalClientScopes": [
        "microprofile-jwt"
      ]
    },
    {
      "id": "46c0b345-24b1-4424-8936-98f92a237ccb",
      "clientId": "stig-manager",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "redirectUris": [
        "http://*",
        "https://*"
      ],
      "webOrigins": [
        "*"
      ],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": true,
      "directAccessGrantsEnabled": true,
      "serviceAccountsEnabled": false,
      "publicClient": true,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {
        "id.token.as.detached.signature": "false",
        "saml.assertion.signature": "false",
        "saml.force.post.binding": "false",
        "saml.multivalued.roles": "false",
        "saml.encrypt": "false",
        "post.logout.redirect.uris": "+",
        "oauth2.device.authorization.grant.enabled": "true",
        "backchannel.logout.revoke.offline.tokens": "false",
        "saml.server.signature": "false",
        "saml.server.signature.keyinfo.ext": "false",
        "use.refresh.tokens": "true",
        "exclude.session.state.from.auth.response": "false",
        "oidc.ciba.grant.enabled": "false",
        "saml.artifact.binding": "false",
        "backchannel.logout.session.required": "false",
        "client_credentials.use_refresh_token": "false",
        "saml_force_name_id_format": "false",
        "saml.client.signature": "false",
        "tls.client.certificate.bound.access.tokens": "false",
        "saml.authnstatement": "false",
        "display.on.consent.screen": "false",
        "saml.onetimeuse.condition": "false"
      },
      "authenticationFlowBindingOverrides": {
        "browser": "1c5b2f21-60f2-41a1-8339-b5395fe918eb"
      },
      "fullScopeAllowed": true,
      "nodeReRegistrationTimeout": -1,
      "defaultClientScopes": [
        "profile",
        "roles"
      ],
      "optionalClientScopes": [
        "stig-manager:stig:read",
        "stig-manager:user:read",
        "stig-manager:collection:read",
        "stig-manager:collection",
        "stig-manager:op:read",
        "stig-manager:user",
        "offline_access",
        "stig-manager:stig",
        "stig-manager",
        "stig-manager:op"
      ]
    },
    {
      "id": "65185464-a36d-4e2e-9330-748733597b33",
      "clientId": "stigman-watcher",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType" : "client-secret",
      "secret" : "954fd71a-dad6-47ab-8035-060268f3d396",
      "redirectUris": [],
      "webOrigins": [],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": false,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": false,
      "serviceAccountsEnabled": true,
      "publicClient": false,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {
        "saml.assertion.signature": "false",
        "saml.force.post.binding": "false",
        "saml.multivalued.roles": "false",
        "saml.encrypt": "false",
        "post.logout.redirect.uris": "+",
        "backchannel.logout.revoke.offline.tokens": "false",
        "saml.server.signature": "false",
        "saml.server.signature.keyinfo.ext": "false",
        "exclude.session.state.from.auth.response": "false",
        "backchannel.logout.session.required": "false",
        "client_credentials.use_refresh_token": "false",
        "saml_force_name_id_format": "false",
        "saml.client.signature": "false",
        "tls.client.certificate.bound.access.tokens": "false",
        "saml.authnstatement": "false",
        "display.on.consent.screen": "false",
        "saml.onetimeuse.condition": "false"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": true,
      "nodeReRegistrationTimeout": -1,
      "protocolMappers": [
        {
          "id": "02befc3f-1412-4451-988f-2ae474ad1507",
          "name" : "Client IP Address",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usersessionmodel-note-mapper",
          "consentRequired": false,
          "config": {
            "user.session.note": "clientAddress",
            "userinfo.token.claim": "true",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "clientAddress",
            "jsonType.label": "String"
          }
        },
        {
          "id": "fa77a541-a851-466d-8928-3c4ceb8f30dc",
          "name" : "Client ID",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usersessionmodel-note-mapper",
          "consentRequired": false,
          "config": {
            "user.session.note": "clientId",
            "userinfo.token.claim": "true",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "clientId",
            "jsonType.label": "String"
          }
        },
        {
          "id": "bef29f85-87e3-4445-b4ac-e896bceab61c",
          "name" : "Client Host",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usersessionmodel-note-mapper",
          "consentRequired": false,
          "config": {
            "user.session.note": "clientHost",
            "userinfo.token.claim": "true",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "clientHost",
            "jsonType.label": "String"
          }
        }
      ],
      "defaultClientScopes": [
        "stig-manager:stig:read",
        "stig-manager:collection",
        "roles"
      ],
      "optionalClientScopes": []
    }
  ],
  "clientScopes": [
    {
      "id": "03068bf0-1616-481b-b034-e196801dc440",
      "name" : "stig-manager:collection",
      "description": "Full access to Collection endpoints",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "true",
        "display.on.consent.screen": "true",
        "consent.screen.text": "Full access to Collection endpoints"
      }
    },
    {
      "id": "b0d6b877-3b02-4cda-8283-7b9cee532796",
      "name" : "c-pat:op",
      "description": "c-pat:op",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "true",
        "display.on.consent.screen": "true",
        "gui.order": "",
        "consent.screen.text": ""
      }
    },
    {
      "id": "231286c0-a43d-40fb-bd3e-1c12f9cd755f",
      "name" : "address",
      "description": "OpenID Connect built-in scope: address",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "true",
        "display.on.consent.screen": "true",
        "consent.screen.text": "${addressScopeConsentText}"
      },
      "protocolMappers": [
        {
          "id": "83934aeb-558b-4e63-ac75-5b9f6921515c",
          "name" : "address",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-address-mapper",
          "consentRequired": false,
          "config": {
            "user.attribute.formatted": "formatted",
            "user.attribute.country": "country",
            "user.attribute.postal_code": "postal_code",
            "userinfo.token.claim": "true",
            "user.attribute.street": "street",
            "id.token.claim": "true",
            "user.attribute.region": "region",
            "access.token.claim": "true",
            "user.attribute.locality": "locality"
          }
        }
      ]
    },
    {
      "id": "7a050df4-bde9-432e-911d-f278105e5ae8",
      "name" : "stig-manager",
      "description": "Top-level STIGMAN scope",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "true",
        "display.on.consent.screen": "true",
        "consent.screen.text": "Full access to the STIG Management API"
      }
    },
    {
      "id": "7a83d91a-06ee-47cd-9eb6-094bbf70f016",
      "name" : "stig-manager:collection:read",
      "description": "Read-only access to Collection endpoints",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "true",
        "display.on.consent.screen": "true",
        "consent.screen.text": "Read-only access to Collection endpoints"
      }
    },
    {
      "id": "7569738d-3892-433d-a1a4-d12fe860deae",
      "name" : "offline_access",
      "description": "OpenID Connect built-in scope: offline_access",
      "protocol": "openid-connect",
      "attributes": {
        "consent.screen.text": "${offlineAccessScopeConsentText}",
        "display.on.consent.screen": "true"
      }
    },
    {
      "id": "4b375845-abfc-4b5c-9476-c3b0a89f724f",
      "name" : "stig-manager:stig",
      "description": "Full access to the STIG collection",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "true",
        "display.on.consent.screen": "true",
        "consent.screen.text": "Full access to the STIG collection"
      }
    },
    {
      "id": "c93be1a1-c2c4-4f35-8b08-7c62c1f325b1",
      "name" : "c-pat:read",
      "description": "c-pat:read",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "true",
        "display.on.consent.screen": "true",
        "gui.order": "",
        "consent.screen.text": ""
      }
    },
    {
      "id": "60b6f2ad-e1aa-4f4f-a66e-e849f41c46db",
      "name" : "roles",
      "description": "OpenID Connect scope for add user roles to the access token",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "false",
        "display.on.consent.screen": "false",
        "consent.screen.text": "${rolesScopeConsentText}"
      },
      "protocolMappers": [
        {
          "id": "6be87796-8d7d-4f5d-995e-280849cda7b7",
          "name" : "audience resolve",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-audience-resolve-mapper",
          "consentRequired": false,
          "config": {}
        },
        {
          "id": "c1c8227e-2c9c-4d14-8c4c-22a8d2a4eddb",
          "name" : "realm roles",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-realm-role-mapper",
          "consentRequired": false,
          "config": {
            "user.attribute": "foo",
            "access.token.claim": "true",
            "claim.name": "realm_access.roles",
            "jsonType.label": "String",
            "multivalued": "true"
          }
        },
        {
          "id": "3170d53b-6c22-42d1-bc0b-a9632a2374d3",
          "name" : "client roles",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-client-role-mapper",
          "consentRequired": false,
          "config": {
            "user.attribute": "foo",
            "access.token.claim": "true",
            "claim.name": "resource_access.${client_id}.roles",
            "jsonType.label": "String",
            "multivalued": "true"
          }
        }
      ]
    },
    {
      "id": "fb514c31-08c1-41df-8664-10b7b6356b54",
      "name" : "role_list",
      "description": "SAML role list",
      "protocol": "saml",
      "attributes": {
        "consent.screen.text": "${samlRoleListScopeConsentText}",
        "display.on.consent.screen": "true"
      },
      "protocolMappers": [
        {
          "id": "efe857ea-7424-4fa8-a720-2593e7be27b6",
          "name" : "role list",
          "protocol": "saml",
          "protocolMapper": "saml-role-list-mapper",
          "consentRequired": false,
          "config": {
            "single": "false",
            "attribute.nameformat": "Basic",
            "attribute.name": "Role"
          }
        }
      ]
    },
    {
      "id": "10d7d8fe-a6af-4af6-8b6a-9995f62fd665",
      "name" : "profile",
      "description": "OpenID Connect built-in scope: profile",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "false",
        "display.on.consent.screen": "true",
        "consent.screen.text": "Full access to your STIG Manager user profile"
      },
      "protocolMappers": [
        {
          "id": "d3124f90-9409-4265-b509-a8d36bb56f33",
          "name": "middle name",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "middleName",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "middle_name",
            "jsonType.label": "String"
          }
        },
        {
          "id": "acbcb72c-38d9-46d0-851d-dd68bbe9c070",
          "name": "picture",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "picture",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "picture",
            "jsonType.label": "String"
          }
        },
        {
          "id": "3082ae59-9f2b-4301-b5fa-c72ab6331ffa",
          "name": "family name",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-property-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "lastName",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "family_name",
            "jsonType.label": "String"
          }
        },
        {
          "id": "7d66c5cf-cf48-4015-ba61-ed056678869e",
          "name": "profile",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "profile",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "profile",
            "jsonType.label": "String"
          }
        },
        {
          "id": "b14be5ab-7808-4189-87b6-fcbfdd3c3bf5",
          "name": "updated at",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "updatedAt",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "updated_at",
            "jsonType.label": "String"
          }
        },
        {
          "id": "7eb6dbb1-e3d7-4fd2-ab69-21cee425a679",
          "name": "zoneinfo",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "zoneinfo",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "zoneinfo",
            "jsonType.label": "String"
          }
        },
        {
          "id": "99856dab-99dd-49d3-b3d7-a8fc41fbf3ac",
          "name": "email",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "email",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "email",
            "jsonType.label": "String"
          }
        },
        {
          "id": "380dc9d8-0af8-4986-af5d-2f3f88a39795",
          "name": "username",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-property-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "username",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "preferred_username",
            "jsonType.label": "String"
          }
        },
        {
          "id": "fbdc60df-7b5f-4504-9ff0-af53243b69d4",
          "name": "birthdate",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "birthdate",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "birthdate",
            "jsonType.label": "String"
          }
        },
        {
          "id": "08c00130-29ad-4ce1-b1fd-89ebf0c38399",
          "name": "full name",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-full-name-mapper",
          "consentRequired": false,
          "config": {
            "id.token.claim": "true",
            "access.token.claim": "true",
            "userinfo.token.claim": "true"
          }
        },
        {
          "id": "38d0b28a-1650-4abc-b852-db08f51a4538",
          "name": "website",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "website",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "website",
            "jsonType.label": "String"
          }
        },
        {
          "id": "39ff9f88-b862-4547-937a-6cf79cebd502",
          "name": "nickname",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "nickname",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "nickname",
            "jsonType.label": "String"
          }
        },
        {
          "id": "d38725ac-9868-4c10-8812-d920c8202df1",
          "name": "gender",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "gender",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "gender",
            "jsonType.label": "String"
          }
        },
        {
          "id": "c7097972-64ee-4fb2-8d3a-6a3917a77b02",
          "name": "given name",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-property-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "firstName",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "given_name",
            "jsonType.label": "String"
          }
        },
        {
          "id": "ef328eda-e371-4496-8332-1aa9c3b63fb7",
          "name": "email verified",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-property-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "emailVerified",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "email_verified",
            "jsonType.label": "boolean"
          }
        },
        {
          "id": "9da8f2ae-7595-4a4f-b5eb-3d086371e5fa",
          "name": "locale",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "locale",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "locale",
            "jsonType.label": "String"
          }
        }
      ]
    },
    {
      "id": "f640d632-d3bc-486d-800f-f302faa902e8",
      "name" : "openid",
      "description": "OpenID Connect built-in scope: openId",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "true",
        "display.on.consent.screen": "true",
        "gui.order": "",
        "consent.screen.text": ""
      }
    },
    {
      "id": "996f3044-88e4-4397-89cd-1d563f185545",
      "name" : "microprofile-jwt",
      "description": "Microprofile - JWT built-in scope",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "true",
        "display.on.consent.screen": "false"
      },
      "protocolMappers": [
        {
          "id": "b84ca347-43b1-4623-b4ff-aa7add5370e5",
          "name" : "upn",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-property-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "username",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "upn",
            "jsonType.label": "String"
          }
        },
        {
          "id": "c3038fb6-f8d3-4fd4-b716-8c48447e1bab",
          "name" : "groups",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-realm-role-mapper",
          "consentRequired": false,
          "config": {
            "multivalued": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "foo",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "groups",
            "jsonType.label": "String"
          }
        }
      ]
    },
    {
      "id": "37e4610a-6458-4f0a-9270-6d87360ac799",
      "name" : "phone",
      "description": "OpenID Connect built-in scope: phone",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "true",
        "display.on.consent.screen": "true",
        "consent.screen.text": "${phoneScopeConsentText}"
      },
      "protocolMappers": [
        {
          "id": "2472bdc9-f311-4eb3-a48d-997d0e6aa153",
          "name" : "phone number",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "phoneNumber",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "phone_number",
            "jsonType.label": "String"
          }
        },
        {
          "id": "ad5fd4ab-f8e6-453a-800d-87c0fb8c2f33",
          "name" : "phone number verified",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "phoneNumberVerified",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "phone_number_verified",
            "jsonType.label": "boolean"
          }
        }
      ]
    },
    {
      "id": "5d4bf035-e0a1-46a1-9acc-191d374062f4",
      "name" : "cmsat:solutions:read",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "true",
        "display.on.consent.screen": "true",
        "consent.screen.text": "Read-only access to your CMSAT Solutions"
      }
    },
    {
      "id": "d48c5499-81cf-4236-842c-5cf79ef0b634",
      "name" : "stig-manager:stig:read",
      "description": "Read access to the STIG collection",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "true",
        "display.on.consent.screen": "true",
        "consent.screen.text": "Read access to the STIG collection"
      }
    },
    {
      "id": "4cbff28f-b6d9-4e08-ae4a-c4d5be0dda33",
      "name" : "stig-manager:user:read",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "true",
        "display.on.consent.screen": "true"
      }
    },
    {
      "id": "f4b48818-ff7e-4658-8ede-a76d658c59b0",
      "name" : "stig-manager:op",
      "description": "Full access to the operation endpoints",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "true",
        "display.on.consent.screen": "true",
        "consent.screen.text": "Full access to the operation endpoints"
      }
    },
    {
      "id": "133197e6-bb5a-4156-ba0a-d8ca24edcd63",
      "name" : "stig-manager:op:read",
      "description": "Read access to the operation endpoints",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "true",
        "display.on.consent.screen": "true",
        "consent.screen.text": "Read access to the operation endpoints"
      }
    },
    {
      "id": "f06dac35-b55a-45b7-b1df-38996e46c7f0",
      "name" : "stig-manager:user",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "true",
        "display.on.consent.screen": "true"
      }
    },
    {
      "id": "3da5a98d-5c50-4e2c-b2c8-bd8c91d6cd3f",
      "name" : "web-origins",
      "description": "OpenID Connect scope for add allowed web origins to the access token",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "false",
        "display.on.consent.screen": "false",
        "consent.screen.text": ""
      },
      "protocolMappers": [
        {
          "id": "9eb37512-2dae-4d75-8d02-6ebb372b2996",
          "name" : "allowed web origins",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-allowed-origins-mapper",
          "consentRequired": false,
          "config": {}
        }
      ]
    },
    {
      "id": "9e875492-5406-4429-9034-b2ba104c0c76",
      "name" : "acr",
      "description": "OpenID Connect scope for add acr (authentication context class reference) to the token",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "false",
        "display.on.consent.screen": "false"
      },
      "protocolMappers": [
        {
          "id": "5dde0e37-fa03-4860-9b38-d4454467afbd",
          "name" : "acr loa level",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-acr-mapper",
          "consentRequired": false,
          "config": {
            "id.token.claim": "true",
            "introspection.token.claim": "true",
            "access.token.claim": "true",
            "userinfo.token.claim": "true"
          }
        }
      ]
    }
  ],
  "defaultDefaultClientScopes": [
    "roles",
    "role_list",
    "acr",
    "profile",
    "openid"
  ],
  "defaultOptionalClientScopes": [],
  "browserSecurityHeaders": {
    "contentSecurityPolicyReportOnly": "",
    "xContentTypeOptions": "nosniff",
    "referrerPolicy": "no-referrer",
    "xRobotsTag": "none",
    "xFrameOptions": "SAMEORIGIN",
    "contentSecurityPolicy": "frame-src 'self'; frame-ancestors 'self'; object-src 'none';",
    "xXSSProtection": "1; mode=block",
    "strictTransportSecurity": "max-age=31536000; includeSubDomains"
  },
  "smtpServer": {},
  "loginTheme": "keycloak",
  "eventsEnabled": false,
  "eventsListeners": [
    "jboss-logging"
  ],
  "enabledEventTypes": [
    "SEND_RESET_PASSWORD",
    "UPDATE_CONSENT_ERROR",
    "GRANT_CONSENT",
    "REMOVE_TOTP",
    "REVOKE_GRANT",
    "UPDATE_TOTP",
    "LOGIN_ERROR",
    "CLIENT_LOGIN",
    "RESET_PASSWORD_ERROR",
    "IMPERSONATE_ERROR",
    "CODE_TO_TOKEN_ERROR",
    "CUSTOM_REQUIRED_ACTION",
    "RESTART_AUTHENTICATION",
    "IMPERSONATE",
    "UPDATE_PROFILE_ERROR",
    "LOGIN",
    "UPDATE_PASSWORD_ERROR",
    "CLIENT_INITIATED_ACCOUNT_LINKING",
    "TOKEN_EXCHANGE",
    "LOGOUT",
    "REGISTER",
    "CLIENT_REGISTER",
    "IDENTITY_PROVIDER_LINK_ACCOUNT",
    "UPDATE_PASSWORD",
    "CLIENT_DELETE",
    "FEDERATED_IDENTITY_LINK_ERROR",
    "IDENTITY_PROVIDER_FIRST_LOGIN",
    "CLIENT_DELETE_ERROR",
    "VERIFY_EMAIL",
    "CLIENT_LOGIN_ERROR",
    "RESTART_AUTHENTICATION_ERROR",
    "EXECUTE_ACTIONS",
    "REMOVE_FEDERATED_IDENTITY_ERROR",
    "TOKEN_EXCHANGE_ERROR",
    "PERMISSION_TOKEN",
    "SEND_IDENTITY_PROVIDER_LINK_ERROR",
    "EXECUTE_ACTION_TOKEN_ERROR",
    "SEND_VERIFY_EMAIL",
    "EXECUTE_ACTIONS_ERROR",
    "REMOVE_FEDERATED_IDENTITY",
    "IDENTITY_PROVIDER_POST_LOGIN",
    "IDENTITY_PROVIDER_LINK_ACCOUNT_ERROR",
    "UPDATE_EMAIL",
    "REGISTER_ERROR",
    "REVOKE_GRANT_ERROR",
    "EXECUTE_ACTION_TOKEN",
    "LOGOUT_ERROR",
    "UPDATE_EMAIL_ERROR",
    "CLIENT_UPDATE_ERROR",
    "UPDATE_PROFILE",
    "CLIENT_REGISTER_ERROR",
    "FEDERATED_IDENTITY_LINK",
    "SEND_IDENTITY_PROVIDER_LINK",
    "SEND_VERIFY_EMAIL_ERROR",
    "RESET_PASSWORD",
    "CLIENT_INITIATED_ACCOUNT_LINKING_ERROR",
    "UPDATE_CONSENT",
    "REMOVE_TOTP_ERROR",
    "VERIFY_EMAIL_ERROR",
    "SEND_RESET_PASSWORD_ERROR",
    "CLIENT_UPDATE",
    "CUSTOM_REQUIRED_ACTION_ERROR",
    "IDENTITY_PROVIDER_POST_LOGIN_ERROR",
    "UPDATE_TOTP_ERROR",
    "CODE_TO_TOKEN",
    "GRANT_CONSENT_ERROR",
    "IDENTITY_PROVIDER_FIRST_LOGIN_ERROR"
  ],
  "adminEventsEnabled": false,
  "adminEventsDetailsEnabled": false,
  "identityProviders": [],
  "identityProviderMappers": [],
  "components": {
    "org.keycloak.services.clientregistration.policy.ClientRegistrationPolicy": [
      {
        "id": "a7ee808e-d66e-4a6e-b751-01a19dd161d3",
        "name" : "Allowed Client Scopes",
        "providerId": "allowed-client-templates",
        "subType": "authenticated",
        "subComponents": {},
        "config": {
          "allow-default-scopes": [
            "true"
          ]
        }
      },
      {
        "id": "c3bd61a2-940d-4280-ac7f-1ea277681104",
        "name" : "Trusted Hosts",
        "providerId": "trusted-hosts",
        "subType": "anonymous",
        "subComponents": {},
        "config": {
          "host-sending-registration-request-must-match": [
            "true"
          ],
          "client-uris-must-match": [
            "true"
          ]
        }
      },
      {
        "id": "8250e19f-6328-469c-85bc-ce2b65f7e9ab",
        "name" : "Full Scope Disabled",
        "providerId": "scope",
        "subType": "anonymous",
        "subComponents": {},
        "config": {}
      },
      {
        "id": "2b809c77-4495-4c72-8fb0-3975574721ff",
        "name" : "Allowed Client Scopes",
        "providerId": "allowed-client-templates",
        "subType": "anonymous",
        "subComponents": {},
        "config": {
          "allow-default-scopes": [
            "true"
          ]
        }
      },
      {
        "id": "c420ba64-ce13-4807-9bcd-64179a9b7e0c",
        "name" : "Allowed Protocol Mapper Types",
        "providerId": "allowed-protocol-mappers",
        "subType": "authenticated",
        "subComponents": {},
        "config": {
          "allowed-protocol-mapper-types": [
            "oidc-usermodel-attribute-mapper",
            "oidc-full-name-mapper",
            "oidc-sha256-pairwise-sub-mapper",
            "oidc-usermodel-property-mapper",
            "oidc-address-mapper",
            "saml-role-list-mapper",
            "saml-user-attribute-mapper",
            "saml-user-property-mapper"
          ]
        }
      },
      {
        "id": "1c62a97d-9ada-4081-8e4d-79ed4a9bb787",
        "name" : "Max Clients Limit",
        "providerId": "max-clients",
        "subType": "anonymous",
        "subComponents": {},
        "config": {
          "max-clients": [
            "200"
          ]
        }
      },
      {
        "id": "63f81393-47c8-4d0a-8c65-075ed50efc3a",
        "name" : "Allowed Protocol Mapper Types",
        "providerId": "allowed-protocol-mappers",
        "subType": "anonymous",
        "subComponents": {},
        "config": {
          "allowed-protocol-mapper-types": [
            "oidc-usermodel-property-mapper",
            "saml-role-list-mapper",
            "oidc-usermodel-attribute-mapper",
            "saml-user-property-mapper",
            "oidc-full-name-mapper",
            "oidc-sha256-pairwise-sub-mapper",
            "saml-user-attribute-mapper",
            "oidc-address-mapper"
          ]
        }
      },
      {
        "id": "444a330d-a409-480a-83d9-a12bc9953635",
        "name" : "Consent Required",
        "providerId": "consent-required",
        "subType": "anonymous",
        "subComponents": {},
        "config": {}
      }
    ],
    "org.keycloak.userprofile.UserProfileProvider": [
      {
        "id": "7f51e3c4-5878-4a78-9769-19c75d00b373",
        "providerId": "declarative-user-profile",
        "subComponents": {},
        "config": {
          "kc.user.profile.config": [
            "{\"attributes\":[{\"name\":\"username\",\"displayName\":\"${username}\",\"validations\":{\"length\":{\"min\":3,\"max\":255},\"username-prohibited-characters\":{},\"up-username-not-idn-homograph\":{}},\"permissions\":{\"view\":[\"admin\",\"user\"],\"edit\":[\"admin\",\"user\"]},\"multivalued\":false},{\"name\":\"email\",\"displayName\":\"${email}\",\"validations\":{\"email\":{},\"length\":{\"max\":255}},\"required\":{\"roles\":[\"user\"]},\"permissions\":{\"view\":[\"admin\",\"user\"],\"edit\":[\"admin\",\"user\"]},\"multivalued\":false},{\"name\":\"firstName\",\"displayName\":\"${firstName}\",\"validations\":{\"length\":{\"max\":255},\"person-name-prohibited-characters\":{}},\"required\":{\"roles\":[\"user\"]},\"permissions\":{\"view\":[\"admin\",\"user\"],\"edit\":[\"admin\",\"user\"]},\"multivalued\":false},{\"name\":\"lastName\",\"displayName\":\"${lastName}\",\"validations\":{\"length\":{\"max\":255},\"person-name-prohibited-characters\":{}},\"required\":{\"roles\":[\"user\"]},\"permissions\":{\"view\":[\"admin\",\"user\"],\"edit\":[\"admin\",\"user\"]},\"multivalued\":false}],\"groups\":[{\"name\":\"user-metadata\",\"displayHeader\":\"User metadata\",\"displayDescription\":\"Attributes, which refer to user metadata\"}],\"unmanagedAttributePolicy\":\"ENABLED\"}"
          ]
        }
      }
    ],
    "org.keycloak.keys.KeyProvider": [
      {
        "id" : "4c043e86-d360-47f5-b6b2-2a9e1b044205",
        "name" : "aes-generated",
        "providerId" : "aes-generated",
        "subComponents" : { },
        "config" : {
          "kid" : [ "f56ab7e8-e188-4a3f-8039-468e665378b4" ],
          "secret" : [ "kuOLYjRR9OH-NlvfVHxfQg" ],
          "priority" : [ "100" ]
        }
      },
      {
        "id" : "cb6c17f0-c24f-42af-9a81-15a66cf1de8e",
        "name" : "rsa",
        "providerId" : "rsa",
        "subComponents" : { },
        "config" : {
          "privateKey" : [ "MIICXAIBAAKBgQCrVrCuTtArbgaZzL1hvh0xtL5mc7o0NqPVnYXkLvgcwiC3BjLGw1tGEGoJaXDuSaRllobm53JBhjx33UNv+5z/UMG4kytBWxheNVKnL6GgqlNabMaFfPLPCF8kAgKnsi79NMo+n6KnSY8YeUmec/p2vjO2NjsSAVcWEQMVhJ31LwIDAQABAoGAfmO8gVhyBxdqlxmIuglbz8bcjQbhXJLR2EoS8ngTXmN1bo2L90M0mUKSdc7qF10LgETBzqL8jYlQIbt+e6TH8fcEpKCjUlyq0Mf/vVbfZSNaVycY13nTzo27iPyWQHK5NLuJzn1xvxxrUeXI6A2WFpGEBLbHjwpx5WQG9A+2scECQQDvdn9NE75HPTVPxBqsEd2z10TKkl9CZxu10Qby3iQQmWLEJ9LNmy3acvKrE3gMiYNWb6xHPKiIqOR1as7L24aTAkEAtyvQOlCvr5kAjVqrEKXalj0Tzewjweuxc0pskvArTI2Oo070h65GpoIKLc9jf+UA69cRtquwP93aZKtW06U8dQJAF2Y44ks/mK5+eyDqik3koCI08qaC8HYq2wVl7G2QkJ6sbAaILtcvD92ToOvyGyeE0flvmDZxMYlvaZnaQ0lcSQJBAKZU6umJi3/xeEbkJqMfeLclD27XGEFoPeNrmdx0q10Azp4NfJAY+Z8KRyQCR2BEG+oNitBOZ+YXF9KCpH3cdmECQHEigJhYg+ykOvr1aiZUMFT72HU0jnmQe2FVekuG+LJUt2Tm7GtMjTFoGpf0JwrVuZN39fOYAlo+nTixgeW7X8Y=" ],
          "certificate" : [ "MIIBkTCB+wIGAWuJ5WIOMA0GCSqGSIb3DQEBCwUAMA8xDTALBgNVBAMMBGRlbW8wHhcNMTkwNjI0MTQyODU5WhcNMjkwNjI0MTQzMDM5WjAPMQ0wCwYDVQQDDARkZW1vMIGfMA0GCSqGSIb3DQEBAQUAA4GNADCBiQKBgQCrVrCuTtArbgaZzL1hvh0xtL5mc7o0NqPVnYXkLvgcwiC3BjLGw1tGEGoJaXDuSaRllobm53JBhjx33UNv+5z/UMG4kytBWxheNVKnL6GgqlNabMaFfPLPCF8kAgKnsi79NMo+n6KnSY8YeUmec/p2vjO2NjsSAVcWEQMVhJ31LwIDAQABMA0GCSqGSIb3DQEBCwUAA4GBAJCiHCl/okF0Qg5mDtn53EJjRS3+RFgcu2op4mNv2LXyUXi7JXPM1YmzipN/simV69tMr/FfcvmtBfOGT/f8hd6xFKYGpSXheZcupRhD89nbEe25U5POiIWQNIPwJdxzxG6mERLcHnxv4Ax3WyIReflvs8Uk/dnk1dV6S622lqYP" ],
          "priority" : [ "100" ]
        }
      },
      {
        "id" : "7dc8ec75-6478-4ec1-ae8d-7fcecc0ac462",
        "name" : "hmac-generated",
        "providerId" : "hmac-generated",
        "subComponents" : { },
        "config" : {
          "kid" : [ "53d0ca66-0c4e-41b9-b96c-5983fb61a101" ],
          "secret" : [ "jwMgAY-RUOAarDJwSfec34Vamiq1HUjPn5F_0GtsKqb1YxWhtTDg1zvwThetYE4cB_QsEQOWjB3-luCgA0lkQQ" ],
          "priority" : [ "100" ],
          "algorithm" : [ "HS256" ]
        }
      },
      {
        "id": "3f319fb0-5e01-495e-8b50-02cd9744d825",
        "name" : "hmac-generated-hs512",
        "providerId": "hmac-generated",
        "subComponents": {},
        "config": {
          "priority": [
            "100"
          ],
          "algorithm": [
            "HS512"
          ]
        }
      }
    ]
  },
  "internationalizationEnabled": false,
  "supportedLocales": [
    ""
  ],
  "authenticationFlows": [
    {
      "id": "b382c2ed-da76-4192-9edb-773c3e907642",
      "alias": "Browser-required-role forms",
      "description": "Username, password, otp and other auth forms.",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": false,
      "authenticationExecutions": [
        {
          "authenticator": "auth-username-password-form",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "CONDITIONAL",
          "priority": 20,
          "autheticatorFlow": true,
          "flowAlias": "Browser-required-role forms - Conditional",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "6667990d-36c2-4db0-9fb6-4f726cf13c22",
      "alias": "Browser-required-role forms - Conditional",
      "description": "Flow to determine if the user has role 'user'",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": false,
      "authenticationExecutions": [
        {
          "authenticatorConfig": "missing-user-role",
          "authenticator": "conditional-user-role",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 0,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticatorConfig": "denied-for-missing-role",
          "authenticator": "deny-access-authenticator",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 1,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "2536abc8-fc9b-4f6e-b680-2ff9372ed1bd",
      "alias": "Handle Existing Account",
      "description": "Handle what to do if there is existing account with same email/username like authenticated identity provider",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "idp-confirm-link",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "REQUIRED",
          "priority": 20,
          "autheticatorFlow": true,
          "flowAlias": "Handle Existing Account - Alternatives - 0",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "7c3aadb3-eb91-4619-8e36-5ba165d76397",
      "alias": "Handle Existing Account - Alternatives - 0",
      "description": "Subflow of Handle Existing Account with alternative executions",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "idp-email-verification",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "ALTERNATIVE",
          "priority": 20,
          "autheticatorFlow": true,
          "flowAlias": "Verify Existing Account by Re-authentication",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "40c8f046-7650-4d90-9ffc-89ed0dd819a3",
      "alias": "Verify Existing Account by Re-authentication",
      "description": "Reauthentication of existing account",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "idp-username-password-form",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "CONDITIONAL",
          "priority": 20,
          "autheticatorFlow": true,
          "flowAlias": "Verify Existing Account by Re-authentication - auth-otp-form - Conditional",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "8f0a6eff-9f75-4a5d-bad7-7efaaecd2a66",
      "alias": "Verify Existing Account by Re-authentication - auth-otp-form - Conditional",
      "description": "Flow to determine if the auth-otp-form authenticator should be used or not.",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "conditional-user-configured",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "auth-otp-form",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 20,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "1c5b2f21-60f2-41a1-8339-b5395fe918eb",
      "alias": "browser",
      "description": "browser based authentication",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "auth-cookie",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "auth-spnego",
          "authenticatorFlow": false,
          "requirement": "DISABLED",
          "priority": 20,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "identity-provider-redirector",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 25,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "ALTERNATIVE",
          "priority": 30,
          "autheticatorFlow": true,
          "flowAlias": "forms",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "faefd2ee-f1db-422b-bd13-2efe755da0bd",
      "alias": "browser-required-role",
      "description": "browser based authentication with role check",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": false,
      "authenticationExecutions": [
        {
          "authenticator": "auth-cookie",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "auth-spnego",
          "authenticatorFlow": false,
          "requirement": "DISABLED",
          "priority": 20,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "identity-provider-redirector",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 25,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "ALTERNATIVE",
          "priority": 30,
          "autheticatorFlow": true,
          "flowAlias": "Browser-required-role forms",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "f62d8989-4a7c-4afc-9168-87b835f5d22b",
      "alias": "clients",
      "description": "Base authentication for clients",
      "providerId": "client-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "client-secret",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "client-jwt",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 20,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "client-secret-jwt",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 30,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "client-x509",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 40,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "68ff604a-4bcc-46c4-a7ff-ad8afd7a2394",
      "alias": "direct grant",
      "description": "OpenID Connect Resource Owner Grant",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "direct-grant-validate-username",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "direct-grant-validate-password",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 20,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "CONDITIONAL",
          "priority": 30,
          "autheticatorFlow": true,
          "flowAlias": "direct grant - direct-grant-validate-otp - Conditional",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "54214a8b-47d3-42d2-93e1-ae308f52ed9a",
      "alias": "direct grant - direct-grant-validate-otp - Conditional",
      "description": "Flow to determine if the direct-grant-validate-otp authenticator should be used or not.",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "conditional-user-configured",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "direct-grant-validate-otp",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 20,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "93ce01f9-c870-474b-82d1-ff61cb8a3836",
      "alias": "docker auth",
      "description": "Used by Docker clients to authenticate against the IDP",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "docker-http-basic-authenticator",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "f8adca31-45d8-49b0-9dd6-b2892ba86a37",
      "alias": "first broker login",
      "description": "Actions taken after first broker login with identity provider account, which is not yet linked to any Keycloak account",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticatorConfig": "review profile config",
          "authenticator": "idp-review-profile",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "REQUIRED",
          "priority": 20,
          "autheticatorFlow": true,
          "flowAlias": "first broker login - Alternatives - 0",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "119c7bb2-c9bf-4fab-9375-24a25c9fb334",
      "alias": "first broker login - Alternatives - 0",
      "description": "Subflow of first broker login with alternative executions",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticatorConfig": "create unique user config",
          "authenticator": "idp-create-user-if-unique",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "ALTERNATIVE",
          "priority": 20,
          "autheticatorFlow": true,
          "flowAlias": "Handle Existing Account",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "d842cad3-34ea-4f72-a346-ab0a816d7cef",
      "alias": "forms",
      "description": "Username, password, otp and other auth forms.",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "auth-username-password-form",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "CONDITIONAL",
          "priority": 20,
          "autheticatorFlow": true,
          "flowAlias": "forms - auth-otp-form - Conditional",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "c70bbba9-b806-45bd-96a0-fbd9c5bd442d",
      "alias": "forms - auth-otp-form - Conditional",
      "description": "Flow to determine if the auth-otp-form authenticator should be used or not.",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "conditional-user-configured",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "auth-otp-form",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 20,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "9d1f30eb-2075-4c6b-83e0-d543c87a276d",
      "alias": "registration",
      "description": "registration flow",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "registration-page-form",
          "authenticatorFlow": true,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": true,
          "flowAlias": "registration form",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "cb1ab3f5-c7d9-4198-a163-7cc61914cf4f",
      "alias": "registration form",
      "description": "registration form",
      "providerId": "form-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "registration-user-creation",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 20,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "registration-password-action",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 50,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "registration-recaptcha-action",
          "authenticatorFlow": false,
          "requirement": "DISABLED",
          "priority": 60,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "5f4a2a57-36cb-4645-a99e-e1499902d66c",
      "alias": "reset credentials",
      "description": "Reset credentials for a user if they forgot their password or something",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "reset-credentials-choose-user",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "reset-credential-email",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 20,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "reset-password",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 30,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "CONDITIONAL",
          "priority": 40,
          "autheticatorFlow": true,
          "flowAlias": "reset credentials - reset-otp - Conditional",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "5e3dee35-df92-49c7-9b9a-14c1e53de2c0",
      "alias": "reset credentials - reset-otp - Conditional",
      "description": "Flow to determine if the reset-otp authenticator should be used or not.",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "conditional-user-configured",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "reset-otp",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 20,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "4097a3a3-6c93-49f4-b649-abea9e5e7c72",
      "alias": "saml ecp",
      "description": "SAML ECP Profile Authentication Flow",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "http-basic-authenticator",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        }
      ]
    }
  ],
  "authenticatorConfig": [
    {
      "id": "93fba284-8b9e-465c-a770-1ba626a8ab7c",
      "alias": "create unique user config",
      "config": {
        "require.password.update.after.registration": "false"
      }
    },
    {
      "id": "a45928cb-7448-4252-bd17-1de597cd2597",
      "alias": "denied-for-missing-role",
      "config": {
        "denyErrorMessage": "denied-for-missing-role"
      }
    },
    {
      "id": "6456d380-fb0e-4db5-8dbc-680a84e3c810",
      "alias": "missing-user-role",
      "config": {
        "condUserRole": "user",
        "negate": "true"
      }
    },
    {
      "id": "b3e3a10f-a72c-4153-be27-fccbf2e97f7a",
      "alias": "review profile config",
      "config": {
        "update.profile.on.first.login": "missing"
      }
    }
  ],
  "requiredActions": [
    {
      "alias": "CONFIGURE_TOTP",
      "name" : "Configure OTP",
      "providerId": "CONFIGURE_TOTP",
      "enabled": true,
      "defaultAction": false,
      "priority": 10,
      "config": {}
    },
    {
      "alias": "TERMS_AND_CONDITIONS",
      "name" : "Terms and Conditions",
      "providerId": "TERMS_AND_CONDITIONS",
      "enabled": false,
      "defaultAction": false,
      "priority": 20,
      "config": {}
    },
    {
      "alias": "UPDATE_PASSWORD",
      "name" : "Update Password",
      "providerId": "UPDATE_PASSWORD",
      "enabled": true,
      "defaultAction": false,
      "priority": 30,
      "config": {}
    },
    {
      "alias": "UPDATE_PROFILE",
      "name" : "Update Profile",
      "providerId": "UPDATE_PROFILE",
      "enabled": true,
      "defaultAction": false,
      "priority": 40,
      "config": {}
    },
    {
      "alias": "VERIFY_EMAIL",
      "name" : "Verify Email",
      "providerId": "VERIFY_EMAIL",
      "enabled": true,
      "defaultAction": false,
      "priority": 50,
      "config": {}
    },
    {
      "alias": "delete_account",
      "name" : "Delete Account",
      "providerId": "delete_account",
      "enabled": false,
      "defaultAction": false,
      "priority": 60,
      "config": {}
    },
    {
      "alias": "delete_credential",
      "name" : "Delete Credential",
      "providerId": "delete_credential",
      "enabled": true,
      "defaultAction": false,
      "priority": 100,
      "config": {}
    },
    {
      "alias": "update_user_locale",
      "name" : "Update User Locale",
      "providerId": "update_user_locale",
      "enabled": true,
      "defaultAction": false,
      "priority": 1000,
      "config": {}
    }
  ],
  "browserFlow": "browser",
  "registrationFlow": "registration",
  "directGrantFlow": "direct grant",
  "resetCredentialsFlow": "reset credentials",
  "clientAuthenticationFlow": "clients",
  "dockerAuthenticationFlow": "docker auth",
  "firstBrokerLoginFlow": "first broker login",
  "attributes": {
    "cibaBackchannelTokenDeliveryMode": "poll",
    "cibaExpiresIn": "120",
    "cibaAuthRequestedUserHint": "login_hint",
    "oauth2DeviceCodeLifespan": "600",
    "clientOfflineSessionMaxLifespan": "0",
    "oauth2DevicePollingInterval": "5",
    "clientSessionIdleTimeout": "0",
    "parRequestUriLifespan": "60",
    "clientSessionMaxLifespan": "0",
    "clientOfflineSessionIdleTimeout": "0",
    "cibaInterval": "5",
    "realmReusableOtpCode": "false"
  },
  "keycloakVersion": "24.0.4",
  "userManagedAccessAllowed": false,
  "clientProfiles": {
    "profiles": []
  },
  "clientPolicies": {
    "policies": []
  }
}
